---
title: FJP Dados
subtitle: Educação
description: Relatório contendo uma análise descritiva e os resultados das regras de crítica dos dados da dimensão.
author: 
  name: Coordenação de Indicadores Sociais (CIS)
  affiliation: 
    name: Diretoria de Estatística e Informações (Direi)
    address: Alameda das Acácias, 70 - São Luiz 
    city: Belo Horizonte
    state: Minas Gerais
    postal-code: 31.275-150
    url: https://fjp.mg.gov.br/
lang: pt
date: today
title-block-banner: "#68bb59"
title-block-banner-color: "#ffffff"
format: 
  html:
    embed-resources: true
    smooth-scroll: true
    toc: true
    toc-location: left
    toc-title: MENU
    linkcolor: "#68bb59"
    css: css/all_custom.css
    theme:
      light: [flatly, css/ma_custom.scss]
editor: visual
execute:
  echo: false
  warning: false
  error: false
  message: false
params:
  data: file.xlsx
output-file: "eo_relatorio.html"
---

```{r  setup, include=FALSE}

table_descriptive <- function(variable, data, ano_base_alter){
  res <- data |>
    dplyr::filter( 
      dplyr::case_when(
        variable %in% names(ano_base_alter) ~ ANO >= ano_base_alter[variable],
        TRUE ~ ANO >= min(ANO, na.rm = T)) ) |>
    dplyr::group_by(ANO) |>
    dplyr::summarise(
      N = dplyr::n(),
      `Mínimo`=dplyr::na_if(min(.data[[variable]], na.rm = TRUE), Inf),
      `Média`  = mean(.data[[variable]], na.rm = TRUE),
      Mediana  = median(.data[[variable]], na.rm = TRUE),
      `Máximo` = dplyr::na_if(max(.data[[variable]], na.rm = TRUE), -Inf),
      `D. P.`  = sd(.data[[variable]], na.rm = TRUE),
      `C. V.`  = sd(.data[[variable]], na.rm = TRUE)/mean(.data[[variable]], na.rm = TRUE),
      Zero     = sum(.data[[variable]] == 0, na.rm = T),
      Ausentes  = sum(is.na(.data[[variable]])),
      .groups = "drop")

    return(res)
}

table_quantile <- function(variable, data){
  result <- data  |>
    dplyr::group_by(ANO)  |>
    dplyr::summarise(value = stats::quantile(.data[[variable]], probs = c(.25, .75), na.rm = T),
                     .groups  = "drop")  |>
    dplyr::mutate(quantil = rep(c("25%", "75%"),length(unique(ANO))) ) |>
    tidyr::pivot_wider(id_cols = ANO, values_from = value, names_from = quantil)
  return(result)
}

chart_boxplot <- function(variable, data, ano_base_alter){
  result <- data  |> 
    dplyr::filter( 
      dplyr::case_when(
        variable %in% names(ano_base_alter) ~ ANO >= ano_base_alter[variable],
        TRUE ~ ANO >= min(ANO, na.rm = T)) ) |>
    ggplot2::ggplot(ggplot2::aes(x = as.character(ANO), y = log(.data[[variable]] + 1), fill = as.character(ANO))) +
    ggplot2::geom_boxplot() +
    ggplot2::scale_fill_viridis_d(option = "G", direction = -1) + # G: mako
    ggplot2::labs(
      y = paste0("Escala logarítmica de ", variable)
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
      legend.position = "none",
      axis.title.x    = ggplot2::element_blank(),
      axis.text.x     = ggplot2::element_text(angle = 90, vjust = 0.5, hjust = 1)
    )

  return(result)
}

chart_histogram <- function(variable, data, ano_base_alter){
  result <- data |>
    dplyr::filter( 
      dplyr::case_when(
        variable %in% names(ano_base_alter) ~ ANO >= ano_base_alter[variable],
        TRUE ~ ANO >= min(ANO, na.rm = T)) ) |>
    dplyr::mutate(ANO = as.numeric(ANO)) |>
    ggplot2::ggplot(ggplot2::aes(x = log(.data[[variable]] + 1), fill = ANO)) +
    ggplot2::geom_histogram() +
    ggplot2::scale_fill_viridis_c(option = "mako", direction = -1) + # G: mako
    ggplot2::labs(
      y = paste0("Escala logarítmica de ", variable)
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
      legend.position = "none",
      axis.title      = ggplot2::element_blank(),
      axis.ticks      = ggplot2::element_blank()
    ) +
    ggplot2::facet_wrap(~ANO, ncol = 4)

  return(result)
}

chart_bar <- function(ano, n){
  result <- data.frame(ano, n) |>
    ggplot2::ggplot(ggplot2::aes(x = as.character(ano), y = as.integer(n))) +
    ggplot2::geom_bar(stat = "identity", fill = "#cccccc") +
    ggplot2::scale_y_continuous(
      labels = scales::label_number(big.mark = ".", decimal.mark = ",")
    ) +
    ggplot2::labs(
      title = "Observações suspeitas por ano",
      y     = "Total\n"
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
       legend.position = "none",
       axis.title.x    = ggplot2::element_blank(),
       axis.text.x     = ggplot2::element_text(angle = 90, vjust = 0.5, hjust = 1)
    )

  return(result)
}

# Build horizontal bar chart
chart_hbar <- function(ano, n){
  result <-
    data.frame(ano, n) |>
    ggplot2::ggplot(ggplot2::aes(x = as.character(ano), y = as.integer(n))) +
    ggplot2::geom_bar(stat = "identity", fill = "#cccccc") +
    ggplot2::scale_y_continuous(
      labels = scales::label_number(big.mark = ".", decimal.mark = ",")
    ) +
    ggplot2::labs(
      title = "Observações suspeitas por ano",
      y     = "Total\n"
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
       legend.position = "none",
       axis.title.x    = ggplot2::element_blank(),
       axis.text.x     = ggplot2::element_text(angle = 90, vjust = 0.5, hjust = 1)
    )

  return(print(result))
}

# Build vertical bar chart
chart_vbar <- function(df){
  result <-
    df |>
    dplyr::group_by(Regra) |>
    dplyr::summarise(
      Validada = round(sum(Validada) / sum(Total) * 100, 2),
      Suspeita = round(sum(Suspeita) / sum(Total) * 100, 2),
      Ausente  = round(sum(Ausente) / sum(Total) * 100, 2)
    ) |>
    dplyr::mutate(Regra = stringr::str_remove(Regra, "DF_[[:upper:]]{2}_[[:alnum:]]+_")) |>
    tidyr::pivot_longer(cols = !Regra, names_to = "categoria", values_to = "pct") |>
    ggplot2::ggplot(ggplot2::aes(x = pct, y = Regra, fill = categoria)) +
    ggplot2::geom_bar(position = "stack", stat = "identity") +
    ggplot2::scale_fill_brewer(palette = "Set2") +
    ggplot2::scale_x_continuous(
      labels = scales::label_percent(scale = 1, big.mark = ".", decimal.mark = ",")
    ) +
    ggplot2::labs(
      title = "Percentual geral de classificação das observações por regra",
      x     = NULL,
      y     = "Regra\n",
      fill  = NULL
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
      legend.position = "top"
    )

  return(print(result))
}

# Build heatmap
chart_heatmap <- function(df){
  result <-
    df |>
    dplyr::mutate(
      Ano   = as.character(Ano),
      Regra = stringr::str_remove(Regra, "DF_[[:upper:]]{2}_[[:alnum:]]+_")
    ) |>
    ggplot2::ggplot(ggplot2::aes(x = Regra, y = Ano, fill = Suspeita)) +
    ggplot2::geom_tile() +
    ggplot2::geom_text(ggplot2::aes(label = Suspeita), size = 3) +
    ggplot2::scale_fill_distiller(palette = "OrRd", direction = 1) +
    ggplot2::labs(
      title = "Total de observações suspeitas por regra e ano",
      x     = "\nRegra",
      y     = "Ano\n"
    ) +
    ggplot2::theme_minimal() +
    ggplot2::theme(
      legend.position = "None",
      axis.text.x     = ggplot2::element_text(angle = 45, hjust = 1)
    )

  return(print(result))
}

difpercentual <- function(df, variable){
  df |>
    dplyr::group_by(ANO) |>
    dplyr::mutate(total = sum({{variable}}, na.rm = TRUE)) |>
    dplyr::ungroup() |>
    dplyr::group_by(IBGE7) |>
    dplyr::summarise(ANO = ANO,
                     {{variable}} := {{variable}},
                     part = {{variable}}/total,
                     part_lag = dplyr::lag(part, n = 1),
                     dif_prop = part - part_lag,
                     .groups = "drop")
}

outlier_function <- function(variable, a=-4,b=3){
  q1 <- stats::quantile(variable, probs = 0.25, na.rm = T, names = F)
  q3 <- stats::quantile(variable, probs = 0.75, na.rm = T, names = F)
  iqr <- stats::IQR(variable, na.rm = T)
  mc <- robustbase::mc(variable, na.rm = T)
  inf <- q1 - 1.5*exp(a*mc)*iqr
  sup <- q3 + 1.5*exp(b*mc)*iqr

  check <- ifelse(variable < inf | variable > sup, T, F)

  return(check)
}

hampel_filter <- function(variable){
  limite_inf = stats::median(variable, na.rm = T) - 3 * stats::mad(variable, constant = 1, na.rm = T)
  limite_sup = stats::median(variable, na.rm = T) + 3 * stats::mad(variable, constant = 1, na.rm = T)
  result = (variable < limite_inf | variable > limite_sup)
  return(result)
}


compare_first_dif <- function(var){
  dif <- abs(round(c(NA_real_, diff(var)), 2))
  dif_max <- max(dplyr::lag(dif), na.rm = T)
  check <- ifelse(dif > dif_max, TRUE, FALSE)

  return(check)
}

compare_lag <- function(var){
  return(var >= dplyr::lag(var, n = 1))
}

```

```{r set_param_global}

k <- 1.5 

## "Truque" para setar "k" como uma constante
lockBinding("k", globalenv())
```

```{r import_data}

data <- openxlsx::read.xlsx(params$data)
data$ANO <- as.character(data$ANO)
```

```{r get_var_numeric}

# Obter as siglas das variáveis do tipo numérico
var_numeric <- data |> 
  dplyr::select(
    !c("CHAVE", "IBGE6", "IBGE7", "ANO") & dplyr::where(is.numeric)
  ) |> 
  colnames() |> 
  unlist()
```

```{r get_var_character}

# Obter as siglas variáveis do tipo string
var_char <- data |> 
  dplyr::select(
    !c("CHAVE", "IBGE6", "IBGE7", "ANO") & dplyr::where(is.character)
  ) |> 
  colnames() |> 
  unlist()
```

# Introdução

A **crítica de dados** refere-se ao processo de verificação e validação da integridade dos dados. Esse processo é crucial para garantir a qualidade dos dados antes de serem utilizados para análises ou publicizados. A importância da crítica de dados reside na sua capacidade de identificar valores suspeitos ou inconsistências que poderiam comprometer a confiabilidade dos resultados obtidos a partir desses dados.


# Regras de crítica

As **regras de crítica** são diretrizes ou critérios específicos estabelecidos para avaliar se os dados atendem aos padrões de qualidade desejados. Essas regras podem incluir a verificação de intervalos de valores aceitáveis, a consistência lógica entre diferentes variáveis, e a detecção de valores ausentes, entre outras. Aplicar essas regras de maneira sistemática ajuda a assegurar que os dados sejam precisos, completos e adequados para seu propósito, promovendo a confiança nas análises e nas decisões baseadas em dados.

A padronização dos nomes permite que seja possível a identificação da classificação da regra e a presença do atributo de flexibilidade. Define-se a seguinte proposta de nomenclatura para as regras de crítica:

*1 carácter indicando finalidade + 1 carácter indicando flexibilidade + Sigla da variável*

**Classificação por finalidade**

Tipo (T): refere-se a classe da variável, são realizadas verificações no sentido de identificar se os dados são numéricos, caracteres, lógicos, entre outros.

-   **TI\_\[...\]**: tipo do dado está de acordo com o esperado (numérico, textual ou categórico).

Validade ou Intervalo (V): refere-se aos intervalos estabelecidos matematicamente para um dado ou indicador. Verificações de valores positivos, intervalos entre 0 e 1, são exemplos de verificação de validades, além da verificação de valores ausentes.

-   **VI_NA\_\[...\]**: dado não tem valor ausente/*missing*;
-   **VI\_\[...\]**: dado é não negativo, está devidamente categorizado ou está entre o intervalo esperado (ex.: 0% e 100%).

Consistência (C): refere-se aos casos em que se verificam as relações matemáticas com outras variáveis, por exemplo, parcelas de um total não podem ser maiores do que o próprio total.

-   **CF\_\[...\]\_total_year**: a soma da proporção anual é igual a $\approx$ 100%.

Distribuição (D): regras de distribuição estabelecem parâmetros esperados para as estatísticas descritivas da variável como média, mediana, máximo, mínimo e regras de identificação de outliers.

-   **DF\_\[...\]\_hampel_munic**: método de identificação de um possível valor *outlier* na série histórica;

-   **DF\_\[...\]\_out_munic**: segundo método de identificação de um possível valor *outlier* na série histórica;

-   **DF\_\[...\]\_min_munic**: o valor mais recente é maior ou igual ao menor valor da série histórica;

-   **DF\_\[...\]\_max_munic**: o valor mais recente é menor ou igual ao maior valor da série histórica;

-   **DF\_\[...\]\_min_k_munic**: o valor mais recente é maior ou igual ao $\frac{menor}{k}$ valor da série histórica;

-   **DF\_\[...\]\_max_k_munic**: o valor mais recente é menor ou igual ao $maior \times k$ valor da série histórica;

-   **DF\_\[...\]\_med_mov_munic:** o valor atual é menor ou igual a $\text{mediana móvel} \times k$;

-   **DF\_\[...\]\_dif_munic**: o valor mais recente da primeira diferença é menor ou igual ao maior valor da primeira diferença da série histórica;

-   **DF\_\[...\]\_estoque_munic**: valor atual é maior ou igual ao valor imediatamente anterior.

**Classificação por flexibilidade (F ou I)**

-   Flexível (F): construída com parâmetros esperados, mas caso algum caso falhe a regra, precisa ser investigado o motivo, identificando se é o caso de um valor atípico explicado por alguma situação.

-   Inflexível (I): necessariamente precisa ser seguida, uma regra inflexível é rígida e não existe exceção a sua condição estipulada.

```{r set_year}

# Inserir aqui apenas aquelas variáveis que possuem alguma restrição 
# no ano inicial de análise devido a fatores como mudança de metodologia

ano_base_alter <- c(
  "EO_ALUNOSP8"        = 2003,
  "EO_ALUNOSM8"        = 2003,
  "EO_ALUNOSP11"       = 2003,
  "EO_ESCOLAEFAI"      = 2007,
  "EO_ESCOLAEFAF"      = 2007,
  "EO_ESCOLAEFCO"      = 2007,
  "EO_ESCOLAME"        = 2007,
  "EO_IDEBFU1a5"       = 2005,
  "EO_IDEBFU6a9"       = 2005,
  "EO_IQEP11"          = 2003,
  "EO_IQEM4"           = 2003,
  "EO_IQEM8"           = 2003,
  "EO_IQEM11"          = 2003,
  "EO_IQEP4"           = 2003,
  "EO_IQEP8"           = 2003,
  "EO_IQE4"            = 2003,
  "EO_IQE8"            = 2003,
  "EO_IQE11"           = 2003,
  "EO_IQE"             = 2003,
  "EO_EJAFU15"         = 2007,
  "EO_EJAME18"         = 2007,
  "EO_TAXA0A3"         = 2010,
  "EO_TAXA4A5"         = 2007,
  "EO_TAXA15A17"       = 2010,
  "EO_TXATBASICA"      = 2013,
  "EO_TAXALIQ7"        = 2007,
  "EO_TAXALIQ15"       = 2007,
  "EO_DISTEM"          = 2013, 
  "EO_TXAPROV1a5"      = 2005,
  "EO_TXAPROV1a9"      = 2013,
  "EO_TXAPROV6a9"      = 2005,
  "EO_TXAPROV10a12"    = 2013,
  "EO_TXREP1a9"        = 2013,
  "EO_TXREP1a5"        = 2013,
  "EO_TXREP10a12"      = 2013,
  "EO_TXREP6a9"        = 2013,
  "EO_TXABA1a9"        = 2013,
  "EO_TXABA1a5"        = 2013,
  "EO_TXABA6a9"        = 2013,
  "EO_TXABA10a12"      = 2013,
  "EO_DISTEF"          = 2013,
  "EO_DISTEFAI"        = 2013,
  "EO_DISTEFAF"        = 2013,
  "EO_PCAPM8"          = 2003,
  "EO_PCAPM11"         = 2003,
  "EO_PCAPP8"          = 2003,
  "EO_PCAPP11"         = 2003,
  "EO_PALUNOSM11"      = 2003,
  "EO_DOCSUPEI"        = 2013,
  "EO_DOCSUPEF"        = 2013,
  "EO_DOCSUPEFAF"      = 2013,
  "EO_DOCSUPEFAI"      = 2013,
  "EO_DOCSUPEM"        = 2013,
  "EO_ADEDG1EI"        = 2013,
  "EO_ADEDG2EI"        = 2013,
  "EO_ADEDG3EI"        = 2013,
  "EO_ADEDG4EI"        = 2013,
  "EO_ADEDG5EI"        = 2013,
  "EO_ADEDG1EF"        = 2013,
  "EO_ADEDG2EF"        = 2013,
  "EO_ADEDG3EF"        = 2013,
  "EO_ADEDG4EF"        = 2013,
  "EO_ADEDG5EF"        = 2013,
  "EO_ADEDG1EFAI"      = 2013,
  "EO_ADEDG2EFAI"      = 2013,
  "EO_ADEDG3EFAI"      = 2013,
  "EO_ADEDG4EFAI"      = 2013,
  "EO_ADEDG5EFAI"      = 2013,
  "EO_ADEDG1EFAF"      = 2013,
  "EO_ADEDG2EFAF"      = 2013,
  "EO_ADEDG3EFAF"      = 2013,
  "EO_ADEDG4EFAF"      = 2013,
  "EO_ADEDG5EFAF"      = 2013,
  "EO_ADEDG1EM"        = 2013,
  "EO_ADEDG2EM"        = 2013,
  "EO_ADEDG3EM"        = 2013,
  "EO_ADEDG4EM"        = 2013,
  "EO_ADEDG5EM"        = 2013,
  "EO_ADEDG1EJAF"      = 2013,
  "EO_ADEDG2EJAF"      = 2013,
  "EO_ADEDG3EJAF"      = 2013,
  "EO_ADEDG4EJAF"      = 2013,
  "EO_ADEDG5EFAF"      = 2013,
  "EO_ADEDG1EJAM"      = 2013,
  "EO_ADEDG2EJAM"      = 2013,
  "EO_ADEDG3EJAM"      = 2013,
  "EO_ADEDG4EJAM"      = 2013,
  "EO_ADEDG5EJAM"      = 2013,
  "EO_MATFEI"          = 2013,
  "EO_MATEEI"          = 2013,
  "EO_MATMEI"          = 2013,
  "EO_MATPEI"          = 2013,
  "EO_MATFEF"          = 2013,
  "EO_MATEEF"          = 2013,
  "EO_MATMEF"          = 2013,
  "EO_MATPEF"          = 2013,
  "EO_MATFEFAI"        = 2013,
  "EO_MATEEFAI"        = 2013,
  "EO_MATMEFAI"        = 2013,
  "EO_MATPEFAI"        = 2013,
  "EO_MATFEFAF"        = 2013,
  "EO_MATEEFAF"        = 2013,
  "EO_MATMEFAF"        = 2013,
  "EO_MATPEFAF"        = 2013,
  "EO_MATFEM"          = 2013,
  "EO_MATEEM"          = 2013,
  "EO_MATMEM"          = 2013,
  "EO_MATPEM"          = 2013,
  "EO_MATTICR"         = 2015,
  "EO_MATTIPE"         = 2015,
  "EO_MATTIEFAI"       = 2015,
  "EO_MATTIEFAF"       = 2015,
  "EO_MATTIEM"         = 2015
)

# Remover os comentários para utilizar este trecho caso não haja nenhuma restrição
# para nenhuma variável
# ano_base_alter <- c(
#   "NA" = NA_integer_
# )
```


```{r map_valid_desc}

# Mapear variável e descrição de sua respectiva regra de validade para ser apresentado na tabela.
desc_regra_valid <- c(
  # Casos mais comuns
  `1` = "Valor é ≥ 0",
  `2` = "Valor está dentro da categoria esperada",
  `3` = "Valor está dentro da faixa esperada (0 a 1)",
  `4` = "Valor está dentro da faixa esperada (0 a 10)",
  `5` = "Valor está dentro da faixa esperada (0 a 100)")

# df com o nome da regra e a respectiva descrição
desc_regra_valid_var <- data.frame(
  Regra = c(
    "VI_EO_ALUNOSP8",
    "VI_EO_ALUNOSM8",
    "VI_EO_ALUNOSM11",
    "VI_EO_ALUNOSP11",
    "VI_EO_ESCOLAEFAI",
    "VI_EO_ESCOLAEFAF",
    "VI_EO_ESCOLAEFCO",
    "VI_EO_ESCOLAME",
    "VI_EO_IDEBFU1a5",
    "VI_EO_IDEBFU6a9",
    "VI_EO_IQEP11",
    "VI_EO_IQEM4",
    "VI_EO_IQEM8",
    "VI_EO_IQEM11",
    "VI_EO_IQEP4",
    "VI_EO_IQEP8",
    "VI_EO_IQE4",
    "VI_EO_IQE8",
    "VI_EO_IQE11",
    "VI_EO_IQE",
    "VI_EO_PC15",
    "VI_EO_PC18",
    "VI_EO_EJAFU15",
    "VI_EO_EJAME18",
    "VI_EO_TAXA0A3",
    "VI_EO_TAXA4A5",
    "VI_EO_TAXA15A17",
    "VI_EO_TXATBASICA",
    #"VI_ANALF10",
    #"VI_ANALF",
    #"VI_ANALF15a17",
    #"VI_ANALF18a24",
    #"VI_ANALF25",
    #"VI_FUND15",
    #"VI_FUND25M",
    #"VI_EO_MED25M",
    "VI_EO_TAXA6A14",
    "VI_EO_TAXALIQ7",
    "VI_EO_TAXA15",
    "VI_EO_TAXALIQ15",
    "VI_EO_DISTEM",
    "VI_EO_TXAPROV1a5",
    "VI_EO_TXAPROV1a9",
    "VI_EO_TXAPROV6a9",
    "VI_EO_TXAPROV10a12",
    "VI_EO_TXREP1a9",
    "VI_EO_TXREP1a5",
    "VI_EO_TXREP10a12",
    "VI_EO_TXREP6a9",
    "VI_EO_TXABA1a9",
    "VI_EO_TXABA1a5",
    "VI_EO_TXABA6a9",
    "VI_EO_TXABA10a12",
    "VI_EO_DISTEF",
    "VI_EO_DISTEFAI",
    "VI_EO_DISTEFAF",
    "VI_EO_PCINF",
    "VI_EO_PCITF",
    "VI_EO_PCINFM",
    "VI_EO_PCITM",
    "VI_EO_PCAPM8",
    "VI_EO_PCAPM11",
    "VI_EO_PCAPP8",
    "VI_EO_PCAPP11",
    "VI_EO_ALUNOSM8",
    "VI_EO_ALUNOSP8",
    "VI_EO_PALUNOSM11",
    "VI_EO_ANALF25_PP",
    "VI_EO_ANALF25_PP",
    "VI_EO_FUND25_B",
    "VI_EO_FUND25_PP",
    "VI_EO_MED25M_B",
    "VI_EO_MED25M_PP",
    "VI_EO_DOCSUPEI",
    "VI_EO_DOCSUPEF",
    "VI_EO_DOCSUPEFAF",
    "VI_EO_DOCSUPEFAI",
    "VI_EO_DOCSUPEM",
    "VI_EO_ADEDG1EI",
    "VI_EO_ADEDG2EI",
    "VI_EO_ADEDG3EI",
    "VI_EO_ADEDG4EI",
    "VI_EO_ADEDG5EI",
    "VI_EO_ADEDG1EF",
    "VI_EO_ADEDG2EF",
    "VI_EO_ADEDG3EF",
    "VI_EO_ADEDG4EF",
    "VI_EO_ADEDG5EF",
    "VI_EO_ADEDG1EFAI",
    "VI_EO_ADEDG2EFAI",
    "VI_EO_ADEDG3EFAI",
    "VI_EO_ADEDG4EFAI",
    "VI_EO_ADEDG5EFAI",
    "VI_EO_ADEDG1EFAF",
    "VI_EO_ADEDG2EFAF",
    "VI_EO_ADEDG3EFAF",
    "VI_EO_ADEDG4EFAF",
    "VI_EO_ADEDG5EFAF",
    "VI_EO_ADEDG1EM",
    "VI_EO_ADEDG2EM",
    "VI_EO_ADEDG3EM",
    "VI_EO_ADEDG4EM",
    "VI_EO_ADEDG5EM",
    "VI_EO_ADEDG1EJAF",
    "VI_EO_ADEDG2EJAF",
    "VI_EO_ADEDG3EJAF",
    "VI_EO_ADEDG4EJAF",
    "VI_EO_ADEDG5EFAF",
    "VI_EO_ADEDG1EJAM",
    "VI_EO_ADEDG2EJAM",
    "VI_EO_ADEDG3EJAM",
    "VI_EO_ADEDG4EJAM",
    "VI_EO_ADEDG5EJAM",
    "VI_EO_MATFEI",
    "VI_EO_MATEEI",
    "VI_EO_MATMEI",
    "VI_EO_MATPEI",
    "VI_EO_MATFEF",
    "VI_EO_MATEEF",
    "VI_EO_MATMEF",
    "VI_EO_MATPEF",
    "VI_EO_MATFEFAI",
    "VI_EO_MATEEFAI",
    "VI_EO_MATMEFAI",
    "VI_EO_MATPEFAI",
    "VI_EO_MATFEFAF",
    "VI_EO_MATEEFAF",
    "VI_EO_MATMEFAF",
    "VI_EO_MATPEFAF",
    "VI_EO_MATFEM",
    "VI_EO_MATEEM",
    "VI_EO_MATMEM",
    "VI_EO_MATPEM",
    "VI_EO_MATTICR",
    "VI_EO_MATTIPE",
    "VI_EO_MATTIEFAI",
    "VI_EO_MATTIEFAF",
    "VI_EO_MATTIEM"
  )
) |> 
  dplyr::mutate(
    `Descrição` = dplyr::case_match(
      Regra,
      "VI_EO_ALUNOSP8"        ~ desc_regra_valid[1],
      "VI_EO_ALUNOSM8"        ~ desc_regra_valid[1],
      "VI_EO_ALUNOSM11"       ~ desc_regra_valid[1],
      "VI_EO_ALUNOSP11"       ~ desc_regra_valid[1],
      "VI_EO_ESCOLAEFAI"      ~ desc_regra_valid[1],
      "VI_EO_ESCOLAEFAF"      ~ desc_regra_valid[1],
      "VI_EO_ESCOLAEFCO"      ~ desc_regra_valid[1],
      "VI_EO_ESCOLAME"        ~ desc_regra_valid[1],
      "VI_EO_IDEBFU1a5"       ~ desc_regra_valid[4],
      "VI_EO_IDEBFU6a9"       ~ desc_regra_valid[4],
      "VI_EO_IQEP11"          ~ desc_regra_valid[3],
      "VI_EO_IQEM4"           ~ desc_regra_valid[3],
      "VI_EO_IQEM8"           ~ desc_regra_valid[3],
      "VI_EO_IQEM11"          ~ desc_regra_valid[3],
      "VI_EO_IQEP4"           ~ desc_regra_valid[3],
      "VI_EO_IQEP8"           ~ desc_regra_valid[3],
      "VI_EO_IQE4"            ~ desc_regra_valid[3],
      "VI_EO_IQE8"            ~ desc_regra_valid[3],
      "VI_EO_IQE11"           ~ desc_regra_valid[3],
      "VI_EO_IQE"             ~ desc_regra_valid[3],
      "VI_EO_PC15"            ~ desc_regra_valid[5],
      "VI_EO_PC18"            ~ desc_regra_valid[5],
      "VI_EO_EJAFU15"         ~ desc_regra_valid[5],
      "VI_EO_EJAME18"         ~ desc_regra_valid[5],
      "VI_EO_TAXA0A3"         ~ desc_regra_valid[5],
      "VI_EO_TAXA4A5"         ~ desc_regra_valid[5],
      "VI_EO_TAXA15A17"       ~ desc_regra_valid[5],
      "VI_EO_TXATBASICA"      ~ desc_regra_valid[5],
      #"VI_ANALF10"           ~ desc_regra_valid[5],
      #"VI_ANALF"             ~ desc_regra_valid[5],
      #"VI_ANALF15a17"        ~ desc_regra_valid[5],
      #"VI_ANALF18a24"        ~ desc_regra_valid[5],
      #"VI_ANALF25"           ~ desc_regra_valid[5],
      #"VI_FUND15"            ~ desc_regra_valid[5],
      #"VI_FUND25M"           ~ desc_regra_valid[5],
      #"VI_EO_MED25M"         ~ desc_regra_valid[5],
      "VI_EO_TAXA6A14"        ~ desc_regra_valid[5],
      "VI_EO_TAXALIQ7"        ~ desc_regra_valid[5],
      "VI_EO_TAXA15"          ~ desc_regra_valid[5],
      "VI_EO_TAXALIQ15"       ~ desc_regra_valid[5],
      "VI_EO_DISTEM"          ~ desc_regra_valid[5],
      "VI_EO_TXAPROV1a5"      ~ desc_regra_valid[5],
      "VI_EO_TXAPROV1a9"      ~ desc_regra_valid[5],
      "VI_EO_TXAPROV6a9"      ~ desc_regra_valid[5],
      "VI_EO_TXAPROV10a12"    ~ desc_regra_valid[5],
      "VI_EO_TXREP1a9"        ~ desc_regra_valid[5],
      "VI_EO_TXREP1a5"        ~ desc_regra_valid[5],
      "VI_EO_TXREP10a12"      ~ desc_regra_valid[5],
      "VI_EO_TXREP6a9"        ~ desc_regra_valid[5],
      "VI_EO_TXABA1a9"        ~ desc_regra_valid[5],
      "VI_EO_TXABA1a5"        ~ desc_regra_valid[5],
      "VI_EO_TXABA6a9"        ~ desc_regra_valid[5],
      "VI_EO_TXABA10a12"      ~ desc_regra_valid[5],
      "VI_EO_DISTEF"          ~ desc_regra_valid[5],
      "VI_EO_DISTEFAI"        ~ desc_regra_valid[5],
      "VI_EO_DISTEFAF"        ~ desc_regra_valid[5],
      "VI_EO_PCINF"           ~ desc_regra_valid[5],
      "VI_EO_PCITF"           ~ desc_regra_valid[5],
      "VI_EO_PCINFM"          ~ desc_regra_valid[5],
      "VI_EO_PCITM"           ~ desc_regra_valid[5],
      "VI_EO_PCAPM8"          ~ desc_regra_valid[5],
      "VI_EO_PCAPM11"         ~ desc_regra_valid[5],
      "VI_EO_PCAPP8"          ~ desc_regra_valid[5],
      "VI_EO_PCAPP11"         ~ desc_regra_valid[5],
      "VI_EO_ALUNOSM8"        ~ desc_regra_valid[5],
      "VI_EO_ALUNOSP8"        ~ desc_regra_valid[5],
      "VI_EO_PALUNOSM11"      ~ desc_regra_valid[5],
      "VI_EO_ANALF25_PP"       ~ desc_regra_valid[5],
      "VI_EO_ANALF25_PP"      ~ desc_regra_valid[5],
      "VI_EO_FUND25_B"        ~ desc_regra_valid[5],
      "VI_EO_FUND25_PP"       ~ desc_regra_valid[5],
      "VI_EO_MED25M_B"        ~ desc_regra_valid[5],
      "VI_EO_MED25M_PP"       ~ desc_regra_valid[5],
      "VI_EO_DOCSUPEI"        ~ desc_regra_valid[5],
      "VI_EO_DOCSUPEF"        ~ desc_regra_valid[5],
      "VI_EO_DOCSUPEFAF"      ~ desc_regra_valid[5],
      "VI_EO_DOCSUPEFAI"      ~ desc_regra_valid[5],
      "VI_EO_DOCSUPEM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EI"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EI"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EI"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EI"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EI"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EF"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EF"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EF"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EF"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EF"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EFAI"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EFAI"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EFAI"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EFAI"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EFAI"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EM"        ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EJAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EJAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EJAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EJAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EFAF"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG1EJAM"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG2EJAM"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG3EJAM"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG4EJAM"      ~ desc_regra_valid[5],
      "VI_EO_ADEDG5EJAM"      ~ desc_regra_valid[5],
      "VI_EO_MATFEI"          ~ desc_regra_valid[5],
      "VI_EO_MATEEI"          ~ desc_regra_valid[5],
      "VI_EO_MATMEI"          ~ desc_regra_valid[5],
      "VI_EO_MATPEI"          ~ desc_regra_valid[5],
      "VI_EO_MATFEF"          ~ desc_regra_valid[5],
      "VI_EO_MATEEF"          ~ desc_regra_valid[5],
      "VI_EO_MATMEF"          ~ desc_regra_valid[5],
      "VI_EO_MATPEF"          ~ desc_regra_valid[5],
      "VI_EO_MATFEFAI"        ~ desc_regra_valid[5],
      "VI_EO_MATEEFAI"        ~ desc_regra_valid[5],
      "VI_EO_MATMEFAI"        ~ desc_regra_valid[5],
      "VI_EO_MATPEFAI"        ~ desc_regra_valid[5],
      "VI_EO_MATFEFAF"        ~ desc_regra_valid[5],
      "VI_EO_MATEEFAF"        ~ desc_regra_valid[5],
      "VI_EO_MATMEFAF"        ~ desc_regra_valid[5],
      "VI_EO_MATPEFAF"        ~ desc_regra_valid[5],
      "VI_EO_MATFEM"          ~ desc_regra_valid[5],
      "VI_EO_MATEEM"          ~ desc_regra_valid[5],
      "VI_EO_MATMEM"          ~ desc_regra_valid[5],
      "VI_EO_MATPEM"          ~ desc_regra_valid[5],
      "VI_EO_MATTICR"         ~ desc_regra_valid[5],
      "VI_EO_MATTIPE"         ~ desc_regra_valid[5],
      "VI_EO_MATTIEFAI"       ~ desc_regra_valid[5],
      "VI_EO_MATTIEFAF"       ~ desc_regra_valid[5],
      "VI_EO_MATTIEM"         ~ desc_regra_valid[5]
    )
  )
```

```{r map_consist_desc, eval=FALSE}

# Mapear variável e descrição de sua respectiva regra de consistência para ser apresentado na tabela.
desc_regra_consist <- c(
  `1` = "A soma da proporção anual é igual a 100%" # EO_ESCOLAME
)

# df com o nome da regra e a respectiva descrição
desc_regra_consist_var <- data.frame(
  Regra = c(
    "CF_EO_ESCOLAME_total_year"
  )
) |> 
  dplyr::mutate(
    `Descrição` = dplyr::case_match(
      Regra,
      "CF_EO_ESCOLAME_total_year" ~ desc_regra_consist[1]
    )
  )
```

## Tipo

### Todos os indicadores

```{r rules_type}
  
rules_type <- validate::validator(
  TI_EO_ALUNOSP8        = is.numeric(EO_ALUNOSP8),
  TI_EO_ALUNOSM8        = is.numeric(EO_ALUNOSM8),
  TI_EO_ALUNOSM11       = is.numeric(EO_ALUNOSM11),
  TI_EO_ALUNOSP11       = is.numeric(EO_ALUNOSP11),
  TI_EO_ESCOLAEFAI      = is.numeric(EO_ESCOLAEFAI),
  TI_EO_ESCOLAEFAF      = is.numeric(EO_ESCOLAEFAF),
  TI_EO_ESCOLAEFCO      = is.numeric(EO_ESCOLAEFCO),
  TI_EO_ESCOLAME        = is.numeric(EO_ESCOLAME),
  TI_EO_IDEBFU1a5       = is.numeric(EO_IDEBFU1a5),
  TI_EO_IDEBFU6a9       = is.numeric(EO_IDEBFU6a9),
  TI_EO_IQEP11          = is.numeric(EO_IQEP11),
  TI_EO_IQEM4           = is.numeric(EO_IQEM4),
  TI_EO_IQEM8           = is.numeric(EO_IQEM8),
  TI_EO_IQEM11          = is.numeric(EO_IQEM11),
  TI_EO_IQEP4           = is.numeric(EO_IQEP4),
  TI_EO_IQEP8           = is.numeric(EO_IQEP8),
  TI_EO_IQE4            = is.numeric(EO_IQE4),
  TI_EO_IQE8            = is.numeric(EO_IQE8),
  TI_EO_IQE11           = is.numeric(EO_IQE11),
  TI_EO_IQE             = is.numeric(EO_IQE),
  TI_EO_PC15            = is.numeric(EO_PC15),
  TI_EO_PC18            = is.numeric(EO_PC18),
  TI_EO_EJAFU15         = is.numeric(EO_EJAFU15),
  TI_EO_EJAME18         = is.numeric(EO_EJAME18),
  TI_EO_TAXA0A3         = is.numeric(EO_TAXA0A3),
  TI_EO_TAXA4A5         = is.numeric(EO_TAXA4A5),
  TI_EO_TAXA15A17       = is.numeric(EO_TAXA15A17),
  TI_EO_TXATBASICA      = is.numeric(EO_TXATBASICA),
  #TI_EO_ANALF10           = is.numeric(EO_ANALF10),
  #TI_EO_ANALF             = is.numeric(EO_ANALF),
  #TI_EO_ANALF15a17        = is.numeric(EO_ANALF15a17),
  #TI_EO_ANALF18a24        = is.numeric(EO_ANALF18a24),
  #TI_EO_ANALF25           = is.numeric(EO_ANALF25),
  #TI_EO_FUND15            = is.numeric(EO_FUND15),
  #TI_EO_FUND25M           = is.numeric(EO_FUND25M),
  #TI_EO_MED25M         = is.numeric(EO_MED25M),
  TI_EO_TAXA6A14        = is.numeric(EO_TAXA6A14),
  TI_EO_TAXALIQ7        = is.numeric(EO_TAXALIQ7),
  TI_EO_TAXA15          = is.numeric(EO_TAXA15),
  TI_EO_TAXALIQ15       = is.numeric(EO_TAXALIQ15),
  TI_EO_DISTEM          = is.numeric(EO_DISTEM), 
  TI_EO_TXAPROV1a5      = is.numeric(EO_TXAPROV1a5),
  TI_EO_TXAPROV1a9      = is.numeric(EO_TXAPROV1a9),
  TI_EO_TXAPROV6a9      = is.numeric(EO_TXAPROV6a9),
  TI_EO_TXAPROV10a12    = is.numeric(EO_TXAPROV10a12),
  TI_EO_TXREP1a9        = is.numeric(EO_TXREP1a9),
  TI_EO_TXREP1a5        = is.numeric(EO_TXREP1a5),
  TI_EO_TXREP10a12      = is.numeric(EO_TXREP10a12),
  TI_EO_TXREP6a9        = is.numeric(EO_TXREP6a9),
  TI_EO_TXABA1a9        = is.numeric(EO_TXABA1a9),
  TI_EO_TXABA1a5        = is.numeric(EO_TXABA1a5),
  TI_EO_TXABA6a9        = is.numeric(EO_TXABA6a9),
  TI_EO_TXABA10a12      = is.numeric(EO_TXABA10a12),
  TI_EO_DISTEF          = is.numeric(EO_DISTEF),
  TI_EO_DISTEFAI        = is.numeric(EO_DISTEFAI),
  TI_EO_DISTEFAF        = is.numeric(EO_DISTEFAF),
  TI_EO_PCINF           = is.numeric(EO_PCINF),
  TI_EO_PCITF           = is.numeric(EO_PCITF),
  TI_EO_PCINFM          = is.numeric(EO_PCINFM),
  TI_EO_PCITM           = is.numeric(EO_PCITM),
  TI_EO_PCAPM8          = is.numeric(EO_PCAPM8),
  TI_EO_PCAPM11         = is.numeric(EO_PCAPM11),
  TI_EO_PCAPP8          = is.numeric(EO_PCAPP8),
  TI_EO_PCAPP11         = is.numeric(EO_PCAPP11),
  TI_EO_ALUNOSM8        = is.numeric(EO_ALUNOSM8),
  TI_EO_ALUNOSP8        = is.numeric(EO_ALUNOSP8),
  TI_EO_PALUNOSM11      = is.numeric(EO_PALUNOSM11),
  TI_EO_ANALF25_PP       = is.numeric(EO_ANALF25_PP),
  TI_EO_ANALF25_PP      = is.numeric(EO_ANALF25_PP),
  TI_EO_FUND25_B        = is.numeric(EO_FUND25_B),
  TI_EO_FUND25_PP       = is.numeric(EO_FUND25_PP),
  TI_EO_MED25M_B        = is.numeric(EO_MED25M_B),
  TI_EO_MED25M_PP       = is.numeric(EO_MED25M_PP),
  TI_EO_DOCSUPEI        = is.numeric(EO_DOCSUPEI),
  TI_EO_DOCSUPEF        = is.numeric(EO_DOCSUPEF),
  TI_EO_DOCSUPEFAF      = is.numeric(EO_DOCSUPEFAF),
  TI_EO_DOCSUPEFAI      = is.numeric(EO_DOCSUPEFAI),
  TI_EO_DOCSUPEM        = is.numeric(EO_DOCSUPEM),
  TI_EO_ADEDG1EI        = is.numeric(EO_ADEDG1EI),
  TI_EO_ADEDG2EI        = is.numeric(EO_ADEDG2EI),
  TI_EO_ADEDG3EI        = is.numeric(EO_ADEDG3EI),
  TI_EO_ADEDG4EI        = is.numeric(EO_ADEDG4EI),
  TI_EO_ADEDG5EI        = is.numeric(EO_ADEDG5EI),
  TI_EO_ADEDG1EF        = is.numeric(EO_ADEDG1EF),
  TI_EO_ADEDG2EF        = is.numeric(EO_ADEDG2EF),
  TI_EO_ADEDG3EF        = is.numeric(EO_ADEDG3EF),
  TI_EO_ADEDG4EF        = is.numeric(EO_ADEDG4EF),
  TI_EO_ADEDG5EF        = is.numeric(EO_ADEDG5EF),
  TI_EO_ADEDG1EFAI      = is.numeric(EO_ADEDG1EFAI),
  TI_EO_ADEDG2EFAI      = is.numeric(EO_ADEDG2EFAI),
  TI_EO_ADEDG3EFAI      = is.numeric(EO_ADEDG3EFAI),
  TI_EO_ADEDG4EFAI      = is.numeric(EO_ADEDG4EFAI),
  TI_EO_ADEDG5EFAI      = is.numeric(EO_ADEDG5EFAI),
  TI_EO_ADEDG1EFAF      = is.numeric(EO_ADEDG1EFAF),
  TI_EO_ADEDG2EFAF      = is.numeric(EO_ADEDG2EFAF),
  TI_EO_ADEDG3EFAF      = is.numeric(EO_ADEDG3EFAF),
  TI_EO_ADEDG4EFAF      = is.numeric(EO_ADEDG4EFAF),
  TI_EO_ADEDG5EFAF      = is.numeric(EO_ADEDG5EFAF),
  TI_EO_ADEDG1EM        = is.numeric(EO_ADEDG1EM),
  TI_EO_ADEDG2EM        = is.numeric(EO_ADEDG2EM),
  TI_EO_ADEDG3EM        = is.numeric(EO_ADEDG3EM),
  TI_EO_ADEDG4EM        = is.numeric(EO_ADEDG4EM),
  TI_EO_ADEDG5EM        = is.numeric(EO_ADEDG5EM),
  TI_EO_ADEDG1EJAF      = is.numeric(EO_ADEDG1EFAF),
  TI_EO_ADEDG2EJAF      = is.numeric(EO_ADEDG2EFAF),
  TI_EO_ADEDG3EJAF      = is.numeric(EO_ADEDG3EFAF),
  TI_EO_ADEDG4EJAF      = is.numeric(EO_ADEDG4EFAF),
  TI_EO_ADEDG5EFAF      = is.numeric(EO_ADEDG5EFAF),
  TI_EO_ADEDG1EJAM      = is.numeric(EO_ADEDG1EJAM),
  TI_EO_ADEDG2EJAM      = is.numeric(EO_ADEDG2EJAM),
  TI_EO_ADEDG3EJAM      = is.numeric(EO_ADEDG3EJAM),
  TI_EO_ADEDG4EJAM      = is.numeric(EO_ADEDG4EJAM),
  TI_EO_ADEDG5EJAM      = is.numeric(EO_ADEDG5EJAM),
  TI_EO_MATFEI          = is.numeric(EO_MATFEI),
  TI_EO_MATEEI          = is.numeric(EO_MATEEI),
  TI_EO_MATMEI          = is.numeric(EO_MATMEI),
  TI_EO_MATPEI          = is.numeric(EO_MATPEI),
  TI_EO_MATFEF          = is.numeric(EO_MATFEF),
  TI_EO_MATEEF          = is.numeric(EO_MATEEF),
  TI_EO_MATMEF          = is.numeric(EO_MATMEF),
  TI_EO_MATPEF          = is.numeric(EO_MATPEF),
  TI_EO_MATFEFAI        = is.numeric(EO_MATFEFAI),
  TI_EO_MATEEFAI        = is.numeric(EO_MATEEFAI),
  TI_EO_MATMEFAI        = is.numeric(EO_MATMEFAI),
  TI_EO_MATPEFAI        = is.numeric(EO_MATPEFAI),
  TI_EO_MATFEFAF        = is.numeric(EO_MATFEFAF),
  TI_EO_MATEEFAF        = is.numeric(EO_MATEEFAF),
  TI_EO_MATMEFAF        = is.numeric(EO_MATMEFAF),
  TI_EO_MATPEFAF        = is.numeric(EO_MATPEFAF),
  TI_EO_MATFEM          = is.numeric(EO_MATFEM),
  TI_EO_MATEEM          = is.numeric(EO_MATEEM),
  TI_EO_MATMEM          = is.numeric(EO_MATMEM),
  TI_EO_MATPEM          = is.numeric(EO_MATPEM),
  TI_EO_MATTICR         = is.numeric(EO_MATTICR),
  TI_EO_MATTIPE         = is.numeric(EO_MATTIPE),
  TI_EO_MATTIEFAI       = is.numeric(EO_MATTIEFAI),
  TI_EO_MATTIEFAF       = is.numeric(EO_MATTIEFAF),
  TI_EO_MATTIEM         = is.numeric(EO_MATTIEM)
)
```

```{r confront_type}

## Confrontar os dados com as regras e exibir uma tabela com os resultados
check_type <- validate::confront(data, rules_type)

validate::summary(check_type) |> 
  dplyr::select(
    Regra    = name,
    Validada = passes
  ) |> 
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |>
  kableExtra::kable_paper("hover", full_width = F)
```

## Validade

```{r data_rules_valid_eo_all}

## df com o resultado das aplicações das regras
df_rules_valid_eo_all <- data |> 
  dplyr::select(
    Ano   = ANO, 
    ibge7 = IBGE7, 
    dplyr::starts_with("EO_")
  ) |> 
  dplyr::mutate(
    # Missing
    VI_NA_EO_ALUNOSP8        = dplyr::if_else(!is.na(EO_ALUNOSP8), F, NA),
    VI_NA_EO_ALUNOSM8        = dplyr::if_else(!is.na(EO_ALUNOSM8), F, NA),
    VI_NA_EO_ALUNOSM11       = dplyr::if_else(!is.na(EO_ALUNOSM11), F, NA),
    VI_NA_EO_ESCOLAME        = dplyr::if_else(!is.na(EO_ESCOLAME), F, NA),
    VI_NA_EO_IDEBFU1a5       = dplyr::if_else(!is.na(EO_IDEBFU1a5), F, NA),
    VI_NA_EO_IDEBFU6a9       = dplyr::if_else(!is.na(EO_IDEBFU6a9), F, NA),
    VI_NA_EO_IQEP11          = dplyr::if_else(!is.na(EO_IQEP11), F, NA),
    VI_NA_EO_IQEM4           = dplyr::if_else(!is.na(EO_IQEM4), F, NA),
    VI_NA_EO_IQEM8           = dplyr::if_else(!is.na(EO_IQEM8), F, NA),
    VI_NA_EO_IQEM11          = dplyr::if_else(!is.na(EO_IQEM11), F, NA),
    VI_NA_EO_IQEP4           = dplyr::if_else(!is.na(EO_IQEP4), F, NA),
    VI_NA_EO_IQEP8           = dplyr::if_else(!is.na(EO_IQEP8), F, NA),
    VI_NA_EO_IQE4            = dplyr::if_else(!is.na(EO_IQE4), F, NA),
    VI_NA_EO_IQE8            = dplyr::if_else(!is.na(EO_IQE8), F, NA),
    VI_NA_EO_IQE11           = dplyr::if_else(!is.na(EO_IQE11), F, NA),
    VI_NA_EO_IQE             = dplyr::if_else(!is.na(EO_IQE), F, NA),
    VI_NA_EO_PC15            = dplyr::if_else(!is.na(EO_PC15), F, NA),
    VI_NA_EO_PC18            = dplyr::if_else(!is.na(EO_PC18), F, NA),
    VI_NA_EO_EJAFU15         = dplyr::if_else(!is.na(EO_EJAFU15), F, NA),
    VI_NA_EO_EJAME18         = dplyr::if_else(!is.na(EO_EJAME18), F, NA),
    VI_NA_EO_TAXA0A3         = dplyr::if_else(!is.na(EO_TAXA0A3), F, NA),
    VI_NA_EO_TAXA4A5         = dplyr::if_else(!is.na(EO_TAXA4A5), F, NA),
    VI_NA_EO_TAXA15A17       = dplyr::if_else(!is.na(EO_TAXA15A17), F, NA),
    VI_NA_EO_TXATBASICA      = dplyr::if_else(!is.na(EO_TXATBASICA), F, NA),
    #VI_NA_EO_ANALF10        = dplyr::if_else(!is.na(EO_ANALF10), F, NA),
    #VI_NA_EO_ANALF          = dplyr::if_else(!is.na(EO_ANALF), F, NA),
    #VI_NA_EO_ANALF15a17     = dplyr::if_else(!is.na(EO_ANALF15a17), F, NA),
    #VI_NA_EO_ANALF18a24     = dplyr::if_else(!is.na(EO_ANALF18a24), F, NA),
    #VI_NA_EO_ANALF25        = dplyr::if_else(!is.na(EO_ANALF25), F, NA),
    #VI_NA_EO_FUND15         = dplyr::if_else(!is.na(EO_FUND15), F, NA),
    #VI_NA_EO_FUND25M        = dplyr::if_else(!is.na(EO_FUND25M), F, NA),
    #VI_NA_EO_MED25M         = dplyr::if_else(!is.na(EO_MED25M), F, NA),
    VI_NA_EO_TAXA6A14        = dplyr::if_else(!is.na(EO_TAXA6A14), F, NA),
    VI_NA_EO_TAXALIQ7        = dplyr::if_else(!is.na(EO_TAXALIQ7), F, NA),
    VI_NA_EO_TAXA15          = dplyr::if_else(!is.na(EO_TAXA15), F, NA),
    VI_NA_EO_TAXALIQ15       = dplyr::if_else(!is.na(EO_TAXALIQ15), F, NA),
    VI_NA_EO_DISTEM          = dplyr::if_else(!is.na(EO_DISTEM), F, NA), 
    VI_NA_EO_TXAPROV1a5      = dplyr::if_else(!is.na(EO_TXAPROV1a5), F, NA),
    VI_NA_EO_TXAPROV1a9      = dplyr::if_else(!is.na(EO_TXAPROV1a9), F, NA),
    VI_NA_EO_TXAPROV6a9      = dplyr::if_else(!is.na(EO_TXAPROV6a9), F, NA),
    VI_NA_EO_TXAPROV10a12    = dplyr::if_else(!is.na(EO_TXAPROV10a12), F, NA),
    VI_NA_EO_TXREP1a9        = dplyr::if_else(!is.na(EO_TXREP1a9), F, NA),
    VI_NA_EO_TXREP1a5        = dplyr::if_else(!is.na(EO_TXREP1a5), F, NA),
    VI_NA_EO_TXREP10a12      = dplyr::if_else(!is.na(EO_TXREP10a12), F, NA),
    VI_NA_EO_TXREP6a9        = dplyr::if_else(!is.na(EO_TXREP6a9), F, NA),
    VI_NA_EO_TXABA1a9        = dplyr::if_else(!is.na(EO_TXABA1a9), F, NA),
    VI_NA_EO_TXABA1a5        = dplyr::if_else(!is.na(EO_TXABA1a5), F, NA),
    VI_NA_EO_TXABA6a9        = dplyr::if_else(!is.na(EO_TXABA6a9), F, NA),
    VI_NA_EO_TXABA10a12      = dplyr::if_else(!is.na(EO_TXABA10a12), F, NA),
    VI_NA_EO_DISTEF          = dplyr::if_else(!is.na(EO_DISTEF), F, NA),
    VI_NA_EO_DISTEFAI        = dplyr::if_else(!is.na(EO_DISTEFAI), F, NA),
    VI_NA_EO_DISTEFAF        = dplyr::if_else(!is.na(EO_DISTEFAF), F, NA),
    VI_NA_EO_PCINF           = dplyr::if_else(!is.na(EO_PCINF), F, NA),
    VI_NA_EO_PCITF           = dplyr::if_else(!is.na(EO_PCITF), F, NA),
    VI_NA_EO_PCINFM          = dplyr::if_else(!is.na(EO_PCINFM), F, NA),
    VI_NA_EO_PCITM           = dplyr::if_else(!is.na(EO_PCITM), F, NA),
    VI_NA_EO_PCAPM8          = dplyr::if_else(!is.na(EO_PCAPM8), F, NA),
    VI_NA_EO_PCAPM11         = dplyr::if_else(!is.na(EO_PCAPM11), F, NA),
    VI_NA_EO_PCAPP8          = dplyr::if_else(!is.na(EO_PCAPP8), F, NA),
    VI_NA_EO_PCAPP11         = dplyr::if_else(!is.na(EO_PCAPP11), F, NA),
    VI_NA_EO_PALUNOSM8       = dplyr::if_else(!is.na(EO_PALUNOSM8), F, NA),
    VI_NA_EO_PALUNOSP8       = dplyr::if_else(!is.na(EO_PALUNOSP8), F, NA),
    VI_NA_EO_PALUNOSM11      = dplyr::if_else(!is.na(EO_PALUNOSM11), F, NA),
    VI_NA_EO_PALUNOSP11      = dplyr::if_else(!is.na(EO_PALUNOSP11), F, NA),
    VI_NA_EO_ANALF25_PP      = dplyr::if_else(!is.na(EO_ANALF25_PP), F, NA),
    VI_NA_EO_ANALF25_PP      = dplyr::if_else(!is.na(EO_ANALF25_PP), F, NA),
    VI_NA_EO_FUND25_B        = dplyr::if_else(!is.na(EO_FUND25_B), F, NA),
    VI_NA_EO_FUND25_PP       = dplyr::if_else(!is.na(EO_FUND25_PP), F, NA),
    VI_NA_EO_MED25M_B        = dplyr::if_else(!is.na(EO_MED25M_B), F, NA),
    VI_NA_EO_MED25M_PP       = dplyr::if_else(!is.na(EO_MED25M_PP), F, NA),
    VI_NA_EO_DOCSUPEI        = dplyr::if_else(!is.na(EO_DOCSUPEI), F, NA),
    VI_NA_EO_DOCSUPEF        = dplyr::if_else(!is.na(EO_DOCSUPEF), F, NA),
    VI_NA_EO_DOCSUPEFAF      = dplyr::if_else(!is.na(EO_DOCSUPEFAF), F, NA),
    VI_NA_EO_DOCSUPEFAI      = dplyr::if_else(!is.na(EO_DOCSUPEFAI), F, NA),
    VI_NA_EO_DOCSUPEM        = dplyr::if_else(!is.na(EO_DOCSUPEM), F, NA),
    VI_NA_EO_ADEDG1EI        = dplyr::if_else(!is.na(EO_ADEDG1EI), F, NA),
    VI_NA_EO_ADEDG2EI        = dplyr::if_else(!is.na(EO_ADEDG2EI), F, NA),
    VI_NA_EO_ADEDG3EI        = dplyr::if_else(!is.na(EO_ADEDG3EI), F, NA),
    VI_NA_EO_ADEDG4EI        = dplyr::if_else(!is.na(EO_ADEDG4EI), F, NA),
    VI_NA_EO_ADEDG5EI        = dplyr::if_else(!is.na(EO_ADEDG5EI), F, NA),
    VI_NA_EO_ADEDG1EF        = dplyr::if_else(!is.na(EO_ADEDG1EF), F, NA),
    VI_NA_EO_ADEDG2EF        = dplyr::if_else(!is.na(EO_ADEDG2EF), F, NA),
    VI_NA_EO_ADEDG3EF        = dplyr::if_else(!is.na(EO_ADEDG3EF), F, NA),
    VI_NA_EO_ADEDG4EF        = dplyr::if_else(!is.na(EO_ADEDG4EF), F, NA),
    VI_NA_EO_ADEDG5EF        = dplyr::if_else(!is.na(EO_ADEDG5EF), F, NA),
    VI_NA_EO_ADEDG1EFAI      = dplyr::if_else(!is.na(EO_ADEDG1EFAI), F, NA),
    VI_NA_EO_ADEDG2EFAI      = dplyr::if_else(!is.na(EO_ADEDG2EFAI), F, NA),
    VI_NA_EO_ADEDG3EFAI      = dplyr::if_else(!is.na(EO_ADEDG3EFAI), F, NA),
    VI_NA_EO_ADEDG4EFAI      = dplyr::if_else(!is.na(EO_ADEDG4EFAI), F, NA),
    VI_NA_EO_ADEDG5EFAI      = dplyr::if_else(!is.na(EO_ADEDG5EFAI), F, NA),
    VI_NA_EO_ADEDG1EFAF      = dplyr::if_else(!is.na(EO_ADEDG1EFAF), F, NA),
    VI_NA_EO_ADEDG2EFAF      = dplyr::if_else(!is.na(EO_ADEDG2EFAF), F, NA),
    VI_NA_EO_ADEDG3EFAF      = dplyr::if_else(!is.na(EO_ADEDG3EFAF), F, NA),
    VI_NA_EO_ADEDG4EFAF      = dplyr::if_else(!is.na(EO_ADEDG4EFAF), F, NA),
    VI_NA_EO_ADEDG5EFAF      = dplyr::if_else(!is.na(EO_ADEDG5EFAF), F, NA),
    VI_NA_EO_ADEDG1EM        = dplyr::if_else(!is.na(EO_ADEDG1EM), F, NA),
    VI_NA_EO_ADEDG2EM        = dplyr::if_else(!is.na(EO_ADEDG2EM), F, NA),
    VI_NA_EO_ADEDG3EM        = dplyr::if_else(!is.na(EO_ADEDG3EM), F, NA),
    VI_NA_EO_ADEDG4EM        = dplyr::if_else(!is.na(EO_ADEDG4EM), F, NA),
    VI_NA_EO_ADEDG5EM        = dplyr::if_else(!is.na(EO_ADEDG5EM), F, NA),
    VI_NA_EO_ADEDG1EJAF      = dplyr::if_else(!is.na(EO_ADEDG1EFAF), F, NA),
    VI_NA_EO_ADEDG2EJAF      = dplyr::if_else(!is.na(EO_ADEDG2EFAF), F, NA),
    VI_NA_EO_ADEDG3EJAF      = dplyr::if_else(!is.na(EO_ADEDG3EFAF), F, NA),
    VI_NA_EO_ADEDG4EJAF      = dplyr::if_else(!is.na(EO_ADEDG4EFAF), F, NA),
    VI_NA_EO_ADEDG5EFAF      = dplyr::if_else(!is.na(EO_ADEDG5EFAF), F, NA),
    VI_NA_EO_ADEDG1EJAM      = dplyr::if_else(!is.na(EO_ADEDG1EJAM), F, NA),
    VI_NA_EO_ADEDG2EJAM      = dplyr::if_else(!is.na(EO_ADEDG2EJAM), F, NA),
    VI_NA_EO_ADEDG3EJAM      = dplyr::if_else(!is.na(EO_ADEDG3EJAM), F, NA),
    VI_NA_EO_ADEDG4EJAM      = dplyr::if_else(!is.na(EO_ADEDG4EJAM), F, NA),
    VI_NA_EO_ADEDG5EJAM      = dplyr::if_else(!is.na(EO_ADEDG5EJAM), F, NA),
    VI_NA_EO_MATFEI          = dplyr::if_else(!is.na(EO_MATFEI), F, NA),
    VI_NA_EO_MATEEI          = dplyr::if_else(!is.na(EO_MATEEI), F, NA),
    VI_NA_EO_MATMEI          = dplyr::if_else(!is.na(EO_MATMEI), F, NA),
    VI_NA_EO_MATPEI          = dplyr::if_else(!is.na(EO_MATPEI), F, NA),
    VI_NA_EO_MATFEF          = dplyr::if_else(!is.na(EO_MATFEF), F, NA),
    VI_NA_EO_MATEEF          = dplyr::if_else(!is.na(EO_MATEEF), F, NA),
    VI_NA_EO_MATMEF          = dplyr::if_else(!is.na(EO_MATMEF), F, NA),
    VI_NA_EO_MATPEF          = dplyr::if_else(!is.na(EO_MATPEF), F, NA),
    VI_NA_EO_MATFEFAI        = dplyr::if_else(!is.na(EO_MATFEFAI), F, NA),
    VI_NA_EO_MATEEFAI        = dplyr::if_else(!is.na(EO_MATEEFAI), F, NA),
    VI_NA_EO_MATMEFAI        = dplyr::if_else(!is.na(EO_MATMEFAI), F, NA),
    VI_NA_EO_MATPEFAI        = dplyr::if_else(!is.na(EO_MATPEFAI), F, NA),
    VI_NA_EO_MATFEFAF        = dplyr::if_else(!is.na(EO_MATFEFAF), F, NA),
    VI_NA_EO_MATEEFAF        = dplyr::if_else(!is.na(EO_MATEEFAF), F, NA),
    VI_NA_EO_MATMEFAF        = dplyr::if_else(!is.na(EO_MATMEFAF), F, NA),
    VI_NA_EO_MATPEFAF        = dplyr::if_else(!is.na(EO_MATPEFAF), F, NA),
    VI_NA_EO_MATFEM          = dplyr::if_else(!is.na(EO_MATFEM), F, NA),
    VI_NA_EO_MATEEM          = dplyr::if_else(!is.na(EO_MATEEM), F, NA),
    VI_NA_EO_MATMEM          = dplyr::if_else(!is.na(EO_MATMEM), F, NA),
    VI_NA_EO_MATPEM          = dplyr::if_else(!is.na(EO_MATPEM), F, NA),
    VI_NA_EO_MATTICR         = dplyr::if_else(!is.na(EO_MATTICR), F, NA),
    VI_NA_EO_MATTIPE         = dplyr::if_else(!is.na(EO_MATTIPE), F, NA),
    VI_NA_EO_MATTIEFAI       = dplyr::if_else(!is.na(EO_MATTIEFAI), F, NA),
    VI_NA_EO_MATTIEFAF       = dplyr::if_else(!is.na(EO_MATTIEFAF), F, NA),
    VI_NA_EO_MATTIEM         = dplyr::if_else(!is.na(EO_MATTIEM), F, NA),
                                              
    # Others
    VI_EO_ALUNOSP8      = dplyr::if_else(EO_ALUNOSP8 >= 0, F, T),
    VI_EO_ALUNOSM8      = dplyr::if_else(EO_ALUNOSM8 >= 0, F, T),
    VI_EO_ALUNOSM11     = dplyr::if_else(EO_ALUNOSM11 >= 0, F, T),
    VI_EO_ALUNOSP11     = dplyr::if_else(EO_ALUNOSP11 >= 0, F, T),
    VI_EO_ESCOLAEFAI    = dplyr::if_else(EO_ESCOLAEFAI >= 0, F, T),
    VI_EO_ESCOLAEFAF    = dplyr::if_else(EO_ESCOLAEFAF  >= 0, F, T),
    VI_EO_ESCOLAEFCO    = dplyr::if_else(EO_ESCOLAEFCO  >= 0, F, T),
    VI_EO_ESCOLAME      = dplyr::if_else(EO_ESCOLAME>= 0, F, T),
    VI_EO_IDEBFU1a5     = dplyr::if_else(dplyr::between(EO_IDEBFU1a5, 0, 10), F, T),
    VI_EO_IDEBFU6a9     = dplyr::if_else(dplyr::between(EO_IDEBFU6a9, 0, 10), F, T),
    VI_EO_IQEP11        = dplyr::if_else(dplyr::between(EO_IQEP11, 0, 1), F, T),
    VI_EO_IQEM4         = dplyr::if_else(dplyr::between(EO_IQEM4, 0, 1), F, T),
    VI_EO_IQEM8         = dplyr::if_else(dplyr::between(EO_IQEM8, 0, 1), F, T),
    VI_EO_IQEM11        = dplyr::if_else(dplyr::between(EO_IQEM11, 0, 1), F, T),
    VI_EO_IQEP4         = dplyr::if_else(dplyr::between(EO_IQEP4, 0, 1), F, T),
    VI_EO_IQEP8         = dplyr::if_else(dplyr::between(EO_IQEP8, 0, 1), F, T),
    VI_EO_IQE4          = dplyr::if_else(dplyr::between(EO_IQE4, 0, 1), F, T),
    VI_EO_IQE8          = dplyr::if_else(dplyr::between(EO_IQE8, 0, 1), F, T),
    VI_EO_IQE11         = dplyr::if_else(dplyr::between(EO_IQE11, 0, 1), F, T),
    VI_EO_IQE           = dplyr::if_else(dplyr::between(EO_IQE, 0, 1), F, T),
    VI_EO_PC15          = dplyr::if_else(dplyr::between(EO_PC15, 0, 100), F, T),
    VI_EO_PC18          = dplyr::if_else(dplyr::between(EO_PC18, 0, 100), F, T),
    VI_EO_EJAFU15       = dplyr::if_else(dplyr::between(EO_EJAFU15, 0, 100), F, T),
    VI_EO_EJAME18       = dplyr::if_else(dplyr::between(EO_EJAME18, 0, 100), F, T),
    VI_EO_TAXA0A3       = dplyr::if_else(dplyr::between(EO_TAXA0A3, 0, 100), F, T),
    VI_EO_TAXA4A5       = dplyr::if_else(dplyr::between(EO_TAXA4A5, 0, 100), F, T),
    VI_EO_TAXA15A17     = dplyr::if_else(dplyr::between(EO_TAXA15A17, 0, 100), F, T),
    VI_EO_TXATBASICA    = dplyr::if_else(dplyr::between(EO_TXATBASICA, 0, 100), F, T),
    #VI_EO_ANALF10      = dplyr::if_else(dplyr::between(EO_ANALF10, 0, 100), F, T),
    #VI_EO_ANALF        = dplyr::if_else(dplyr::between(EO_ANALF, 0, 100), F, T),
    #VI_EO_ANALF15a17   = dplyr::if_else(dplyr::between(EO_ANALF15a17, 0, 100), F, T),
    #VI_EO_ANALF18a24   = dplyr::if_else(dplyr::between(EO_ANALF18a24, 0, 100), F, T),
    #VI_EO_ANALF25      = dplyr::if_else(dplyr::between(EO_ANALF25, 0, 100), F, T),
    #VI_EO_FUND15       = dplyr::if_else(dplyr::between(EO_FUND15, 0, 100), F, T),
    #VI_EO_FUND25M      = dplyr::if_else(dplyr::between(EO_FUND25M, 0, 100), F, T),
    #VI_EO_MED25M       = dplyr::if_else(dplyr::between(EO_MED25M, 0, 100), F, T),
    VI_EO_TAXA6A14      = dplyr::if_else(dplyr::between(EO_TAXA6A14, 0, 100), F, T),
    VI_EO_TAXALIQ7      = dplyr::if_else(dplyr::between(EO_TAXALIQ7, 0, 100), F, T),
    VI_EO_TAXA15        = dplyr::if_else(dplyr::between(EO_TAXA15, 0, 100), F, T),
    VI_EO_TAXALIQ15     = dplyr::if_else(dplyr::between(EO_TAXALIQ15, 0, 100), F, T),
    VI_EO_DISTEM        = dplyr::if_else(dplyr::between(EO_DISTEM, 0, 100), F, T), 
    VI_EO_TXAPROV1a5    = dplyr::if_else(dplyr::between(EO_TXAPROV1a5, 0, 100), F, T),
    VI_EO_TXAPROV1a9    = dplyr::if_else(dplyr::between(EO_TXAPROV1a9, 0, 100), F, T),
    VI_EO_TXAPROV6a9    = dplyr::if_else(dplyr::between(EO_TXAPROV6a9, 0, 100), F, T),
    VI_EO_TXAPROV10a12  = dplyr::if_else(dplyr::between(EO_TXAPROV10a12, 0, 100), F, T),
    VI_EO_TXREP1a9      = dplyr::if_else(dplyr::between(EO_TXREP1a9, 0, 100), F, T),
    VI_EO_TXREP1a5      = dplyr::if_else(dplyr::between(EO_TXREP1a5, 0, 100), F, T),
    VI_EO_TXREP10a12    = dplyr::if_else(dplyr::between(EO_TXREP10a12, 0, 100), F, T),
    VI_EO_TXREP6a9      = dplyr::if_else(dplyr::between(EO_TXREP6a9, 0, 100), F, T),
    VI_EO_TXABA1a9      = dplyr::if_else(dplyr::between(EO_TXABA1a9, 0, 100), F, T),
    VI_EO_TXABA1a5      = dplyr::if_else(dplyr::between(EO_TXABA1a5, 0, 100), F, T),
    VI_EO_TXABA6a9      = dplyr::if_else(dplyr::between(EO_TXABA6a9, 0, 100), F, T),
    VI_EO_TXABA10a12    = dplyr::if_else(dplyr::between(EO_TXABA10a12, 0, 100), F, T),
    VI_EO_DISTEF        = dplyr::if_else(dplyr::between(EO_DISTEF, 0, 100), F, T),
    VI_EO_DISTEFAI      = dplyr::if_else(dplyr::between(EO_DISTEFAI, 0, 100), F, T),
    VI_EO_DISTEFAF      = dplyr::if_else(dplyr::between(EO_DISTEFAF, 0, 100), F, T),
    VI_EO_PCINF         = dplyr::if_else(dplyr::between(EO_PCINF, 0, 100), F, T),
    VI_EO_PCITF         = dplyr::if_else(dplyr::between(EO_PCITF, 0, 100), F, T),
    VI_EO_PCINFM        = dplyr::if_else(dplyr::between(EO_PCINFM, 0, 100), F, T),
    VI_EO_PCITM         = dplyr::if_else(dplyr::between(EO_PCITM, 0, 100), F, T),
    VI_EO_PCAPM8        = dplyr::if_else(dplyr::between(EO_PCAPM8, 0, 100), F, T),
    VI_EO_PCAPM11       = dplyr::if_else(dplyr::between(EO_PCAPM11, 0, 100), F, T),
    VI_EO_PCAPP8        = dplyr::if_else(dplyr::between(EO_PCAPP8, 0, 100), F, T),
    VI_EO_PCAPP11       = dplyr::if_else(dplyr::between(EO_PCAPP11, 0, 100), F, T),
    VI_EO_PALUNOSM11    = dplyr::if_else(dplyr::between(EO_PALUNOSM11, 0, 100), F, T),
    VI_EO_ANALF25_PP     = dplyr::if_else(dplyr::between(EO_ANALF25_PP, 0, 100), F, T),
    VI_EO_ANALF25_PP    = dplyr::if_else(dplyr::between(EO_ANALF25_PP, 0, 100), F, T),
    VI_EO_FUND25_B      = dplyr::if_else(dplyr::between(EO_FUND25_B, 0, 100), F, T),
    VI_EO_FUND25_PP     = dplyr::if_else(dplyr::between(EO_FUND25_PP, 0, 100), F, T),
    VI_EO_MED25M_B      = dplyr::if_else(dplyr::between(EO_MED25M_B, 0, 100), F, T),
    VI_EO_MED25M_PP     = dplyr::if_else(dplyr::between(EO_MED25M_PP, 0, 100), F, T),
    VI_EO_DOCSUPEI      = dplyr::if_else(dplyr::between(EO_DOCSUPEI, 0, 100), F, T),
    VI_EO_DOCSUPEF      = dplyr::if_else(dplyr::between(EO_DOCSUPEF, 0, 100), F, T),
    VI_EO_DOCSUPEFAF    = dplyr::if_else(dplyr::between(EO_DOCSUPEFAF, 0, 100), F, T),
    VI_EO_DOCSUPEFAI    = dplyr::if_else(dplyr::between(EO_DOCSUPEFAI, 0, 100), F, T),
    VI_EO_DOCSUPEM      = dplyr::if_else(dplyr::between(EO_DOCSUPEM, 0, 100), F, T),
    VI_EO_ADEDG1EI      = dplyr::if_else(dplyr::between(EO_ADEDG1EI, 0, 100), F, T),
    VI_EO_ADEDG2EI      = dplyr::if_else(dplyr::between(EO_ADEDG2EI, 0, 100), F, T),
    VI_EO_ADEDG3EI      = dplyr::if_else(dplyr::between(EO_ADEDG3EI, 0, 100), F, T),
    VI_EO_ADEDG4EI      = dplyr::if_else(dplyr::between(EO_ADEDG4EI, 0, 100), F, T),
    VI_EO_ADEDG5EI      = dplyr::if_else(dplyr::between(EO_ADEDG5EI, 0, 100), F, T),
    VI_EO_ADEDG1EF      = dplyr::if_else(dplyr::between(EO_ADEDG1EF, 0, 100), F, T),
    VI_EO_ADEDG2EF      = dplyr::if_else(dplyr::between(EO_ADEDG2EF, 0, 100), F, T),
    VI_EO_ADEDG3EF      = dplyr::if_else(dplyr::between(EO_ADEDG3EF, 0, 100), F, T),
    VI_EO_ADEDG4EF      = dplyr::if_else(dplyr::between(EO_ADEDG4EF, 0, 100), F, T),
    VI_EO_ADEDG5EF      = dplyr::if_else(dplyr::between(EO_ADEDG5EF, 0, 100), F, T),
    VI_EO_ADEDG1EFAI    = dplyr::if_else(dplyr::between(EO_ADEDG1EFAI, 0, 100), F, T),
    VI_EO_ADEDG2EFAI    = dplyr::if_else(dplyr::between(EO_ADEDG2EFAI, 0, 100), F, T),
    VI_EO_ADEDG3EFAI    = dplyr::if_else(dplyr::between(EO_ADEDG3EFAI, 0, 100), F, T),
    VI_EO_ADEDG4EFAI    = dplyr::if_else(dplyr::between(EO_ADEDG4EFAI, 0, 100), F, T),
    VI_EO_ADEDG5EFAI    = dplyr::if_else(dplyr::between(EO_ADEDG5EFAI, 0, 100), F, T),
    VI_EO_ADEDG1EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG1EFAF, 0, 100), F, T),
    VI_EO_ADEDG2EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG2EFAF, 0, 100), F, T),
    VI_EO_ADEDG3EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG3EFAF, 0, 100), F, T),
    VI_EO_ADEDG4EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG4EFAF, 0, 100), F, T),
    VI_EO_ADEDG5EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG5EFAF, 0, 100), F, T),
    VI_EO_ADEDG1EM      = dplyr::if_else(dplyr::between(EO_ADEDG1EM, 0, 100), F, T),
    VI_EO_ADEDG2EM      = dplyr::if_else(dplyr::between(EO_ADEDG2EM, 0, 100), F, T),
    VI_EO_ADEDG3EM      = dplyr::if_else(dplyr::between(EO_ADEDG3EM, 0, 100), F, T),
    VI_EO_ADEDG4EM      = dplyr::if_else(dplyr::between(EO_ADEDG4EM, 0, 100), F, T),
    VI_EO_ADEDG5EM      = dplyr::if_else(dplyr::between(EO_ADEDG5EM, 0, 100), F, T),
    VI_EO_ADEDG1EJAF    = dplyr::if_else(dplyr::between(EO_ADEDG1EFAF, 0, 100), F, T),
    VI_EO_ADEDG2EJAF    = dplyr::if_else(dplyr::between(EO_ADEDG2EFAF, 0, 100), F, T),
    VI_EO_ADEDG3EJAF    = dplyr::if_else(dplyr::between(EO_ADEDG3EFAF, 0, 100), F, T),
    VI_EO_ADEDG4EJAF    = dplyr::if_else(dplyr::between(EO_ADEDG4EFAF, 0, 100), F, T),
    VI_EO_ADEDG5EFAF    = dplyr::if_else(dplyr::between(EO_ADEDG5EFAF, 0, 100), F, T),
    VI_EO_ADEDG1EJAM    = dplyr::if_else(dplyr::between(EO_ADEDG1EJAM, 0, 100), F, T),
    VI_EO_ADEDG2EJAM    = dplyr::if_else(dplyr::between(EO_ADEDG2EJAM, 0, 100), F, T),
    VI_EO_ADEDG3EJAM    = dplyr::if_else(dplyr::between(EO_ADEDG3EJAM, 0, 100), F, T),
    VI_EO_ADEDG4EJAM    = dplyr::if_else(dplyr::between(EO_ADEDG4EJAM, 0, 100), F, T),
    VI_EO_ADEDG5EJAM    = dplyr::if_else(dplyr::between(EO_ADEDG5EJAM, 0, 100), F, T),
    VI_EO_MATFEI        = dplyr::if_else(dplyr::between(EO_MATFEI, 0, 100), F, T),
    VI_EO_MATEEI        = dplyr::if_else(dplyr::between(EO_MATEEI, 0, 100), F, T),
    VI_EO_MATMEI        = dplyr::if_else(dplyr::between(EO_MATMEI, 0, 100), F, T),
    VI_EO_MATPEI        = dplyr::if_else(dplyr::between(EO_MATPEI, 0, 100), F, T),
    VI_EO_MATFEF        = dplyr::if_else(dplyr::between(EO_MATFEF, 0, 100), F, T),
    VI_EO_MATEEF        = dplyr::if_else(dplyr::between(EO_MATEEF, 0, 100), F, T),
    VI_EO_MATMEF        = dplyr::if_else(dplyr::between(EO_MATMEF, 0, 100), F, T),
    VI_EO_MATPEF        = dplyr::if_else(dplyr::between(EO_MATPEF, 0, 100), F, T),
    VI_EO_MATFEFAI      = dplyr::if_else(dplyr::between(EO_MATFEFAI, 0, 100), F, T),
    VI_EO_MATEEFAI      = dplyr::if_else(dplyr::between(EO_MATEEFAI, 0, 100), F, T),
    VI_EO_MATMEFAI      = dplyr::if_else(dplyr::between(EO_MATMEFAI, 0, 100), F, T),
    VI_EO_MATPEFAI      = dplyr::if_else(dplyr::between(EO_MATPEFAI, 0, 100), F, T),
    VI_EO_MATFEFAF      = dplyr::if_else(dplyr::between(EO_MATFEFAF, 0, 100), F, T),
    VI_EO_MATEEFAF      = dplyr::if_else(dplyr::between(EO_MATEEFAF, 0, 100), F, T),
    VI_EO_MATMEFAF      = dplyr::if_else(dplyr::between(EO_MATMEFAF, 0, 100), F, T),
    VI_EO_MATPEFAF      = dplyr::if_else(dplyr::between(EO_MATPEFAF, 0, 100), F, T),
    VI_EO_MATFEM        = dplyr::if_else(dplyr::between(EO_MATFEM, 0, 100), F, T),
    VI_EO_MATEEM        = dplyr::if_else(dplyr::between(EO_MATEEM, 0, 100), F, T),
    VI_EO_MATMEM        = dplyr::if_else(dplyr::between(EO_MATMEM, 0, 100), F, T),
    VI_EO_MATPEM        = dplyr::if_else(dplyr::between(EO_MATPEM, 0, 100), F, T),
    VI_EO_MATTICR       = dplyr::if_else(dplyr::between(EO_MATTICR, 0, 100), F, T),
    VI_EO_MATTIPE       = dplyr::if_else(dplyr::between(EO_MATTIPE, 0, 100), F, T),
    VI_EO_MATTIEFAI     = dplyr::if_else(dplyr::between(EO_MATTIEFAI, 0, 100), F, T),
    VI_EO_MATTIEFAF     = dplyr::if_else(dplyr::between(EO_MATTIEFAF, 0, 100), F, T),
    VI_EO_MATTIEM       = dplyr::if_else(dplyr::between(EO_MATTIEM, 0, 100), F, T)
  )
```

```{r data_wrangling_valid_eo_all}

## Transformação dos resultados
df_sumario_valid_eo <- df_rules_valid_eo_all |> 
  dplyr::select(
    Ano, 
    ibge7, 
    dplyr::starts_with(c("VI_", "VF_"))
  ) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_valid_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

### Todos os indicadores - Valores ausentes

```{r table_valid_eo_na_all}

df_sumario |>
  dplyr::select(Ano, Regra, Total, contains("Ausente")) |>
  dplyr::filter(
    Ano == max(Ano) & 
    stringr::str_detect(Regra, "_NA_")
  ) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

### Todos os indicadores - Demais regras

```{r table_valid_eo_all}
#| column: screen-inset-right

df_sumario |>
  dplyr::filter(
    Ano == max(Ano) & 
    stringr::str_detect(Regra, "_NA_", negate = T)
  ) |>
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  dplyr::left_join(desc_regra_valid_var, by = dplyr::join_by(Regra)) |> # Introdução coluna descrição
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

<!-- ## Consistência -->

```{r data_rules_consist_eo_all, eval=FALSE}

## df com o resultado das aplicações das regras
df_rules_consist_eo_all <- data |> 
  dplyr::select(
    Ano   = ANO, 
    ibge7 = IBGE7, 
    EO_ESCOLAME
  ) |> 
  dplyr::group_by(Ano) |> 
  dplyr::mutate(
    CF_EO_ESCOLAME_total_year = dplyr::if_else(
      dplyr::between(sum(EO_ESCOLAME, na.rm = T), 99, 101), F, T)
  )
```

```{r data_wrangling_consist_eo_all, eval=FALSE}

## Tranformação dos resultados
df_sumario_consist_eo <- df_rules_consist_eo_all |> 
  dplyr::select(!EO_ESCOLAME) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_consist_ma |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

<!-- ### Todos os indicadores -->

```{r table_consist_eo_all, eval=FALSE}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  dplyr::left_join(desc_regra_consist_var, by = dplyr::join_by(Regra)) |> # Introdução coluna descrição
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

## Distribuição

### EO_ALUNOSP8

```{r data_rules_dist_eo_alunosp8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ALUNOSP8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ALUNOSP8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ALUNOSP8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |> 
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ALUNOSP8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ALUNOSP8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ALUNOSP8), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP8_out_munic     = dplyr::if_else(!outlier_function(EO_ALUNOSP8), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP8_min_munic     = dplyr::if_else(EO_ALUNOSP8 >= (min(dplyr::lag(EO_ALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)
     
    DF_EO_ALUNOSP8_max_munic     = dplyr::if_else(EO_ALUNOSP8 <= (max(dplyr::lag(EO_ALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP8_min_k_munic   = dplyr::if_else(EO_ALUNOSP8 >= (min(dplyr::lag(EO_ALUNOSP8), na.rm = T) / k), F, T), # Longitudinal (município)
     
    DF_EO_ALUNOSP8_max_k_munic   = dplyr::if_else(EO_ALUNOSP8 <= (k * max(dplyr::lag(EO_ALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP8_med_mov_munic = dplyr::if_else(EO_ALUNOSP8 <= (k * zoo::rollmedian(EO_ALUNOSP8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ALUNOSP8), F, T) # Longitudinal (município)
)
```

```{r data_wrangling_dist_EO_ALUNOSP8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ALUNOSP8 |> 
  dplyr::select(!EO_ALUNOSP8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ALUNOSP8}
#| column: screen-inset-right

df_sumario |>
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ALUNOSP8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_ALUNOSM8

```{r rules_dist_EO_ALUNOSM8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ALUNOSM8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ALUNOSM8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ALUNOSM8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ALUNOSM8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ALUNOSM8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ALUNOSM8), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_out_munic     = dplyr::if_else(!outlier_function(EO_ALUNOSM8), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_min_munic     = dplyr::if_else(EO_ALUNOSM8 >= (min(dplyr::lag(EO_ALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_max_munic     = dplyr::if_else(EO_ALUNOSM8 <= (max(dplyr::lag(EO_ALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)
  
    DF_EO_ALUNOSM8_min_k_munic   = dplyr::if_else(EO_ALUNOSM8 >= (min(dplyr::lag(EO_ALUNOSM8), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_max_k_munic   = dplyr::if_else(EO_ALUNOSM8 <= (k * max(dplyr::lag(EO_ALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_med_mov_munic = dplyr::if_else(EO_ALUNOSM8 <= (k * zoo::rollmedian(EO_ALUNOSM8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ALUNOSM8), F, T) # Longitudinal (município)
)
```

```{r data_wrangling_dist_EO_ALUNOSM8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ALUNOSM8 |> 
  dplyr::select(!EO_ALUNOSM8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ALUNOSM8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ALUNOSM8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_ALUNOSM11

```{r rules_dist_EO_ALUNOSM11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ALUNOSM11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ALUNOSM11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ALUNOSM11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ALUNOSM11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ALUNOSM11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ALUNOSM11), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_out_munic     = dplyr::if_else(!outlier_function(EO_ALUNOSM11), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_min_munic     = dplyr::if_else(EO_ALUNOSM11 >= (min(dplyr::lag(EO_ALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_max_munic     = dplyr::if_else(EO_ALUNOSM11 <= (max(dplyr::lag(EO_ALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_min_k_munic   = dplyr::if_else(EO_ALUNOSM11 >= (min(dplyr::lag(EO_ALUNOSM11), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_max_k_munic   = dplyr::if_else(EO_ALUNOSM11 <= (k * max(dplyr::lag(EO_ALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_med_mov_munic = dplyr::if_else(EO_ALUNOSM11 <= (k * zoo::rollmedian(EO_ALUNOSM11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSM11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ALUNOSM11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ALUNOSM11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ALUNOSM11 |> 
  dplyr::select(!EO_ALUNOSM11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ALUNOSM11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ALUNOSM11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_ALUNOSP11

```{r rules_dist_eo_alunosp11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ALUNOSP11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ALUNOSP11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ALUNOSP11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ALUNOSP11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ALUNOSP11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ALUNOSP11), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_out_munic     = dplyr::if_else(!outlier_function(EO_ALUNOSP11), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_min_munic     = dplyr::if_else(EO_ALUNOSP11 >= (min(dplyr::lag(EO_ALUNOSP11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_max_munic     = dplyr::if_else(EO_ALUNOSP11 <= (max(dplyr::lag(EO_ALUNOSP11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_min_k_munic   = dplyr::if_else(EO_ALUNOSP11 >= (min(dplyr::lag(EO_ALUNOSP11), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_max_k_munic   = dplyr::if_else(EO_ALUNOSP11 <= (k * max(dplyr::lag(EO_ALUNOSP11), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_med_mov_munic = dplyr::if_else(EO_ALUNOSP11 <= (k * zoo::rollmedian(EO_ALUNOSP11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ALUNOSP11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ALUNOSP11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_alunosp11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ALUNOSP11 |> 
  dplyr::select(!EO_ALUNOSP11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_alunosp11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_alunosp11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_ESCOLAEFAI

```{r rules_dist_eo_escolaefai}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ESCOLAEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ESCOLAEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ESCOLAEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ESCOLAEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ESCOLAEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ESCOLAEFAI), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ESCOLAEFAI), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_min_munic     = dplyr::if_else(EO_ESCOLAEFAI >= (min(dplyr::lag(EO_ESCOLAEFAI), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_max_munic     = dplyr::if_else(EO_ESCOLAEFAI <= (max(dplyr::lag(EO_ESCOLAEFAI), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_min_k_munic   = dplyr::if_else(EO_ESCOLAEFAI >= (min(dplyr::lag(EO_ESCOLAEFAI), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_max_k_munic   = dplyr::if_else(EO_ESCOLAEFAI <= (k * max(dplyr::lag(EO_ESCOLAEFAI), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_med_mov_munic = dplyr::if_else(EO_ESCOLAEFAI <= (k * zoo::rollmedian(EO_ESCOLAEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ESCOLAEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_escolaefai}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ESCOLAEFAI |> 
  dplyr::select(!EO_ESCOLAEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_escolaefai}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_escolaefai}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_ESCOLAEFAF

```{r rules_dist_eo_escolaefaf}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ESCOLAEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ESCOLAEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ESCOLAEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ESCOLAEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ESCOLAEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ESCOLAEFAF), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ESCOLAEFAF), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_min_munic     = dplyr::if_else(EO_ESCOLAEFAF >= (min(dplyr::lag(EO_ESCOLAEFAF), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_max_munic     = dplyr::if_else(EO_ESCOLAEFAF <= (max(dplyr::lag(EO_ESCOLAEFAF), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_min_k_munic   = dplyr::if_else(EO_ESCOLAEFAF >= (min(dplyr::lag(EO_ESCOLAEFAF), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_max_k_munic   = dplyr::if_else(EO_ESCOLAEFAF <= (k * max(dplyr::lag(EO_ESCOLAEFAF), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_med_mov_munic = dplyr::if_else(EO_ESCOLAEFAF <= (k * zoo::rollmedian(EO_ESCOLAEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ESCOLAEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_escolaefaf}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ESCOLAEFAF |> 
  dplyr::select(!EO_ESCOLAEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_escolaefaf}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_escolaefaf}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_ESCOLAEFCO

```{r rules_dist_eo_escolaefco}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ESCOLAEFCO <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ESCOLAEFCO" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ESCOLAEFCO"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ESCOLAEFCO) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ESCOLAEFCO_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ESCOLAEFCO), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_out_munic     = dplyr::if_else(!outlier_function(EO_ESCOLAEFCO), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_min_munic     = dplyr::if_else(EO_ESCOLAEFCO >= (min(dplyr::lag(EO_ESCOLAEFCO), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_max_munic     = dplyr::if_else(EO_ESCOLAEFCO <= (max(dplyr::lag(EO_ESCOLAEFCO), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_min_k_munic   = dplyr::if_else(EO_ESCOLAEFCO >= (min(dplyr::lag(EO_ESCOLAEFCO), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_max_k_munic   = dplyr::if_else(EO_ESCOLAEFCO <= (k * max(dplyr::lag(EO_ESCOLAEFCO), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_med_mov_munic = dplyr::if_else(EO_ESCOLAEFCO <= (k * zoo::rollmedian(EO_ESCOLAEFCO, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAEFCO_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ESCOLAEFCO), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_escolaefco}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ESCOLAEFCO |> 
  dplyr::select(!EO_ESCOLAEFCO) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_escolaefco}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_escolaefco}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_ESCOLAME

```{r rules_dist_EO_ESCOLAME}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ESCOLAME <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ESCOLAME" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ESCOLAME"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ESCOLAME) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ESCOLAME_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ESCOLAME), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_out_munic     = dplyr::if_else(!outlier_function(EO_ESCOLAME), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_min_munic     = dplyr::if_else(EO_ESCOLAME >= (min(dplyr::lag(EO_ESCOLAME), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_max_munic     = dplyr::if_else(EO_ESCOLAME <= (max(dplyr::lag(EO_ESCOLAME), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_min_k_munic   = dplyr::if_else(EO_ESCOLAME >= (min(dplyr::lag(EO_ESCOLAME), na.rm = T) / k), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_max_k_munic   = dplyr::if_else(EO_ESCOLAME <= (k * max(dplyr::lag(EO_ESCOLAME), na.rm = T)), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_med_mov_munic = dplyr::if_else(EO_ESCOLAME <= (k * zoo::rollmedian(EO_ESCOLAME, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)
    
    DF_EO_ESCOLAME_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ESCOLAME), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ESCOLAME}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ESCOLAME |> 
  dplyr::select(!EO_ESCOLAME) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ESCOLAME}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ESCOLAME}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IDEBFU1a5

```{r rules_dist_eo_idebfu1a5}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IDEBFU1a5 <- data |>
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IDEBFU1a5" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IDEBFU1a5"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IDEBFU1a5) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IDEBFU1a5_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IDEBFU1a5), F, T), # Longitudinal (município)
    
    DF_EO_IDEBFU1a5_out_munic     = dplyr::if_else(!outlier_function(EO_IDEBFU1a5), F, T), # Longitudinal (município)
    
    DF_EO_IDEBFU1a5_min_munic     = dplyr::if_else(EO_IDEBFU1a5 >= (min(dplyr::lag(EO_IDEBFU1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU1a5_max_munic     = dplyr::if_else(EO_IDEBFU1a5 <= (max(dplyr::lag(EO_IDEBFU1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU1a5_min_k_munic   = dplyr::if_else(EO_IDEBFU1a5 >= (min(dplyr::lag(EO_IDEBFU1a5), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IDEBFU1a5_max_k_munic   = dplyr::if_else(EO_IDEBFU1a5 <= (k * max(dplyr::lag(EO_IDEBFU1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU1a5_med_mov_munic = dplyr::if_else(EO_IDEBFU1a5 <= (k * zoo::rollmedian(EO_IDEBFU1a5, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IDEBFU1a5_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IDEBFU1a5), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_idebfu1a5}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IDEBFU1a5 |> 
  dplyr::select(!EO_IDEBFU1a5) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_idebfu1a5}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_idebfu1a5}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IDEBFU6a9

```{r rules_dist_eo_idebfu6a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IDEBFU6a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IDEBFU6a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IDEBFU6a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IDEBFU6a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IDEBFU6a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IDEBFU6a9), F, T), # Longitudinal (município)
    
    DF_EO_IDEBFU6a9_out_munic     = dplyr::if_else(!outlier_function(EO_IDEBFU6a9), F, T), # Longitudinal (município)
    
     DF_EO_IDEBFU6a9_min_munic    = dplyr::if_else(EO_IDEBFU6a9 >= (min(dplyr::lag(EO_IDEBFU6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_max_munic     = dplyr::if_else(EO_IDEBFU6a9 <= (max(dplyr::lag(EO_IDEBFU6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_min_k_munic   = dplyr::if_else(EO_IDEBFU6a9 >= (min(dplyr::lag(EO_IDEBFU6a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_max_k_munic   = dplyr::if_else(EO_IDEBFU6a9 <= (k * max(dplyr::lag(EO_IDEBFU6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_med_mov_munic = dplyr::if_else(EO_IDEBFU6a9 <= (k * zoo::rollmedian(EO_IDEBFU6a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IDEBFU6a9), F, T), # Longitudinal (município)

    DF_EO_IDEBFU6a9_estoque_munic = dplyr::if_else(EO_IDEBFU6a9 >= dplyr::lag(EO_IDEBFU6a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_idebfu6a9}

## Tranformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IDEBFU6a9 |> 
  dplyr::select(!EO_IDEBFU6a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_idebfu6a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_idebfu6a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IQEP11

```{r rules_dist_eo_iqep11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEP11 <- data |>
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEP11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEP11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEP11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEP11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEP11), F, T), # Longitudinal (município)
    
    DF_EO_IQEP11_out_munic     = dplyr::if_else(!outlier_function(EO_IQEP11), F, T), # Longitudinal (município)
    
    DF_EO_IQEP11_min_munic     = dplyr::if_else(EO_IQEP11 >= (min(dplyr::lag(EO_IQEP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP11_max_munic     = dplyr::if_else(EO_IQEP11 <= (max(dplyr::lag(EO_IQEP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP11_min_k_munic   = dplyr::if_else(EO_IQEP11 >= (min(dplyr::lag(EO_IQEP11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEP11_max_k_munic   = dplyr::if_else(EO_IQEP11 <= (k * max(dplyr::lag(EO_IQEP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP11_med_mov_munic = dplyr::if_else(EO_IQEP11 <= (k * zoo::rollmedian(EO_IQEP11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEP11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEP11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqep11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEP11 |> 
  dplyr::select(!EO_IQEP11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_iqep11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_iqep11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IQEM4

```{r rules_dist_eo_iqem4}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEM4 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEM4" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEM4"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEM4) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEM4_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEM4), F, T), # Longitudinal (município)
    
    DF_EO_IQEM4_out_munic     = dplyr::if_else(!outlier_function(EO_IQEM4), F, T), # Longitudinal (município)
    
    DF_EO_IQEM4_min_munic     = dplyr::if_else(EO_IQEM4 >= (min(dplyr::lag(EO_IQEM4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM4_max_munic     = dplyr::if_else(EO_IQEM4 <= (max(dplyr::lag(EO_IQEM4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM4_min_k_munic   = dplyr::if_else(EO_IQEM4 >= (min(dplyr::lag(EO_IQEM4), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEM4_max_k_munic   = dplyr::if_else(EO_IQEM4 <= (k * max(dplyr::lag(EO_IQEM4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM4_med_mov_munic = dplyr::if_else(EO_IQEM4 <= (k * zoo::rollmedian(EO_IQEM4, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEM4_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEM4), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqem4}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEM4 |> 
  dplyr::select(!EO_IQEM4) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_iqem4}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_iqem4}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IQEM8

```{r rules_dist_eo_iqem8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEM8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEM8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEM8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEM8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEM8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEM8), F, T), # Longitudinal (município)
    
    DF_EO_IQEM8_out_munic     = dplyr::if_else(!outlier_function(EO_IQEM8), F, T), # Longitudinal (município)
    
    DF_EO_IQEM8_min_munic     = dplyr::if_else(EO_IQEM8 >= (min(dplyr::lag(EO_IQEM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM8_max_munic     = dplyr::if_else(EO_IQEM8 <= (max(dplyr::lag(EO_IQEM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM8_min_k_munic   = dplyr::if_else(EO_IQEM8 >= (min(dplyr::lag(EO_IQEM8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEM8_max_k_munic   = dplyr::if_else(EO_IQEM8 <= (k * max(dplyr::lag(EO_IQEM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM8_med_mov_munic = dplyr::if_else(EO_IQEM8 <= (k * zoo::rollmedian(EO_IQEM8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEM8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEM8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqem8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEM8 |> 
  dplyr::select(!EO_IQEM8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_iqem8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_iqem8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IQEM11

```{r rules_dist_eo_iqem11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEM11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEM11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEM11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEM11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEM11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEM11), F, T), # Longitudinal (município)
    
    DF_EO_IQEM11_out_munic     = dplyr::if_else(!outlier_function(EO_IQEM11), F, T), # Longitudinal (município)
    
    DF_EO_IQEM11_min_munic     = dplyr::if_else(EO_IQEM11 >= (min(dplyr::lag(EO_IQEM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM11_max_munic     = dplyr::if_else(EO_IQEM11 <= (max(dplyr::lag(EO_IQEM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM11_min_k_munic   = dplyr::if_else(EO_IQEM11 >= (min(dplyr::lag(EO_IQEM11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEM11_max_k_munic   = dplyr::if_else(EO_IQEM11 <= (k * max(dplyr::lag(EO_IQEM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEM11_med_mov_munic = dplyr::if_else(EO_IQEM11 <= (k * zoo::rollmedian(EO_IQEM11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEM11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEM11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqem11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEM11 |> 
  dplyr::select(!EO_IQEM11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_iqem11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_iqem11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_IQEP4

```{r rules_dist_eo_iqep4}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEP4 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEP4" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEP4"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEP4) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEP4_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEP4), F, T), # Longitudinal (município)
    
    DF_EO_IQEP4_out_munic     = dplyr::if_else(!outlier_function(EO_IQEP4), F, T), # Longitudinal (município)
    
    DF_EO_IQEP4_min_munic     = dplyr::if_else(EO_IQEP4 >= (min(dplyr::lag(EO_IQEP4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP4_max_munic     = dplyr::if_else(EO_IQEP4 <= (max(dplyr::lag(EO_IQEP4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP4_min_k_munic   = dplyr::if_else(EO_IQEP4 >= (min(dplyr::lag(EO_IQEP4), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEP4_max_k_munic   = dplyr::if_else(EO_IQEP4 <= (k * max(dplyr::lag(EO_IQEP4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP4_med_mov_munic = dplyr::if_else(EO_IQEP4 <= (k * zoo::rollmedian(EO_IQEP4, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEP4_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEP4), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqep4}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEP4 |> 
  dplyr::select(!EO_IQEP4) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```


```{r table_dist_eo_iqep4}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_IQEP4}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_IQEP8

```{r rules_dist_eo_iqep8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQEP8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQEP8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQEP8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQEP8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQEP8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQEP8), F, T), # Longitudinal (município)
    
    DF_EO_IQEP8_out_munic     = dplyr::if_else(!outlier_function(EO_IQEP8), F, T), # Longitudinal (município)
    
    DF_EO_IQEP8_min_munic     = dplyr::if_else(EO_IQEP8 >= (min(dplyr::lag(EO_IQEP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP8_max_munic     = dplyr::if_else(EO_IQEP8 <= (max(dplyr::lag(EO_IQEP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP8_min_k_munic   = dplyr::if_else(EO_IQEP8 >= (min(dplyr::lag(EO_IQEP8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQEP8_max_k_munic   = dplyr::if_else(EO_IQEP8 <= (k * max(dplyr::lag(EO_IQEP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQEP8_med_mov_munic = dplyr::if_else(EO_IQEP8 <= (k * zoo::rollmedian(EO_IQEP8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQEP8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQEP8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_iqep8}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQEP8 |> 
  dplyr::select(!EO_IQEP8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```


```{r table_dist_eo_iqep8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_iqep8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_IQE4

```{r rules_dist_EO_IQE4}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQE4 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQE4" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQE4"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQE4) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQE4_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQE4), F, T), # Longitudinal (município)
    
    DF_EO_IQE4_out_munic     = dplyr::if_else(!outlier_function(EO_IQE4), F, T), # Longitudinal (município)
    
    DF_EO_IQE4_min_munic     = dplyr::if_else(EO_IQE4 >= (min(dplyr::lag(EO_IQE4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE4_max_munic     = dplyr::if_else(EO_IQE4 <= (max(dplyr::lag(EO_IQE4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE4_min_k_munic   = dplyr::if_else(EO_IQE4 >= (min(dplyr::lag(EO_IQE4), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQE4_max_k_munic   = dplyr::if_else(EO_IQE4 <= (k * max(dplyr::lag(EO_IQE4), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE4_med_mov_munic = dplyr::if_else(EO_IQE4 <= (k * zoo::rollmedian(EO_IQE4, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQE4_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQE4), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_IQE4}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQE4 |> 
  dplyr::select(!EO_IQE4) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_IQE4}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_IQE4}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_IQE8

```{r rules_dist_EO_IQE8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQE8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQE8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQE8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQE8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQE8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQE8), F, T), # Longitudinal (município)
    
    DF_EO_IQE8_out_munic     = dplyr::if_else(!outlier_function(EO_IQE8), F, T), # Longitudinal (município)
    
    DF_EO_IQE8_min_munic     = dplyr::if_else(EO_IQE8 >= (min(dplyr::lag(EO_IQE8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE8_max_munic     = dplyr::if_else(EO_IQE8 <= (max(dplyr::lag(EO_IQE8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE8_min_k_munic   = dplyr::if_else(EO_IQE8 >= (min(dplyr::lag(EO_IQE8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQE8_max_k_munic   = dplyr::if_else(EO_IQE8 <= (k * max(dplyr::lag(EO_IQE8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE8_med_mov_munic = dplyr::if_else(EO_IQE8 <= (k * zoo::rollmedian(EO_IQE8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQE8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQE8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_IQE8}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQE8 |> 
  dplyr::select(!EO_IQE8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_IQE8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_IQE8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_IQE11

```{r rules_dist_EO_IQE11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQE11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQE11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQE11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQE11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQE11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQE11), F, T), # Longitudinal (município)
    
    DF_EO_IQE11_out_munic     = dplyr::if_else(!outlier_function(EO_IQE11), F, T), # Longitudinal (município)
    
    DF_EO_IQE11_min_munic     = dplyr::if_else(EO_IQE11 >= (min(dplyr::lag(EO_IQE11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE11_max_munic     = dplyr::if_else(EO_IQE11 <= (max(dplyr::lag(EO_IQE11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE11_min_k_munic   = dplyr::if_else(EO_IQE11 >= (min(dplyr::lag(EO_IQE11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQE11_max_k_munic   = dplyr::if_else(EO_IQE11 <= (k * max(dplyr::lag(EO_IQE11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE11_med_mov_munic = dplyr::if_else(EO_IQE11 <= (k * zoo::rollmedian(EO_IQE11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQE11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQE11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_IQE11}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQE11 |> 
  dplyr::select(!EO_IQE11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_IQE11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_IQE11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_IQE

```{r rules_dist_EO_IQE}

## df com o resultado das aplicações das regras
df_rules_dist_EO_IQE <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_IQE" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_IQE"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_IQE) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_IQE_hampel_munic  = dplyr::if_else(!hampel_filter(EO_IQE), F, T), # Longitudinal (município)
    
    DF_EO_IQE_out_munic     = dplyr::if_else(!outlier_function(EO_IQE), F, T), # Longitudinal (município)
    
    DF_EO_IQE_min_munic     = dplyr::if_else(EO_IQE >= (min(dplyr::lag(EO_IQE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE_max_munic     = dplyr::if_else(EO_IQE <= (max(dplyr::lag(EO_IQE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE_min_k_munic   = dplyr::if_else(EO_IQE >= (min(dplyr::lag(EO_IQE), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_IQE_max_k_munic   = dplyr::if_else(EO_IQE <= (k * max(dplyr::lag(EO_IQE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_IQE_med_mov_munic = dplyr::if_else(EO_IQE <= (k * zoo::rollmedian(EO_IQE, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_IQE_dif_munic     = dplyr::if_else(!compare_first_dif(EO_IQE), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_IQE}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_IQE |> 
  dplyr::select(!EO_IQE) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_IQE}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_IQE}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_PC15

```{r rules_dist_EO_PC15}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PC15 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PC15" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PC15"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PC15) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PC15_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PC15), F, T), # Longitudinal (município)
    
    DF_EO_PC15_out_munic     = dplyr::if_else(!outlier_function(EO_PC15), F, T), # Longitudinal (município)
    
    DF_EO_PC15_min_munic     = dplyr::if_else(EO_PC15 >= (min(dplyr::lag(EO_PC15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC15_max_munic     = dplyr::if_else(EO_PC15 <= (max(dplyr::lag(EO_PC15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC15_min_k_munic   = dplyr::if_else(EO_PC15 >= (min(dplyr::lag(EO_PC15), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PC15_max_k_munic   = dplyr::if_else(EO_PC15 <= (k * max(dplyr::lag(EO_PC15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC15_med_mov_munic = dplyr::if_else(EO_PC15 <= (k * zoo::rollmedian(EO_PC15, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PC15_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PC15), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PC15}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PC15 |> 
  dplyr::select(!EO_PC15) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PC15}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PC15}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_PC18

```{r rules_dist_EO_PC18}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PC18 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PC18" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PC18"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PC18) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PC18_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PC18), F, T), # Longitudinal (município)
    
    DF_EO_PC18_out_munic     = dplyr::if_else(!outlier_function(EO_PC18), F, T), # Longitudinal (município)
    
    DF_EO_PC18_min_munic     = dplyr::if_else(EO_PC18 >= (min(dplyr::lag(EO_PC18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC18_max_munic     = dplyr::if_else(EO_PC18 <= (max(dplyr::lag(EO_PC18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC18_min_k_munic   = dplyr::if_else(EO_PC18 >= (min(dplyr::lag(EO_PC18), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PC18_max_k_munic   = dplyr::if_else(EO_PC18 <= (k * max(dplyr::lag(EO_PC18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PC18_med_mov_munic = dplyr::if_else(EO_PC18 <= (k * zoo::rollmedian(EO_PC18, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PC18_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PC18), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PC18}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PC18 |> 
  dplyr::select(!EO_PC18) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PC18}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PC18}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_EJAFU15

```{r rules_dist_EO_EJAFU15}

## df com o resultado das aplicações das regras
df_rules_dist_EO_EJAFU15 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_EJAFU15" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_EJAFU15"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_EJAFU15) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_EJAFU15_hampel_munic  = dplyr::if_else(!hampel_filter(EO_EJAFU15), F, T), # Longitudinal (município)
    
    DF_EO_EJAFU15_out_munic     = dplyr::if_else(!outlier_function(EO_EJAFU15), F, T), # Longitudinal (município)
    
    DF_EO_EJAFU15_min_munic     = dplyr::if_else(EO_EJAFU15 >= (min(dplyr::lag(EO_EJAFU15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAFU15_max_munic     = dplyr::if_else(EO_EJAFU15 <= (max(dplyr::lag(EO_EJAFU15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAFU15_min_k_munic   = dplyr::if_else(EO_EJAFU15 >= (min(dplyr::lag(EO_EJAFU15), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_EJAFU15_max_k_munic   = dplyr::if_else(EO_EJAFU15 <= (k * max(dplyr::lag(EO_EJAFU15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAFU15_med_mov_munic = dplyr::if_else(EO_EJAFU15 <= (k * zoo::rollmedian(EO_EJAFU15, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_EJAFU15_dif_munic     = dplyr::if_else(!compare_first_dif(EO_EJAFU15), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_EJAFU15}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_EJAFU15 |> 
  dplyr::select(!EO_EJAFU15) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_EJAFU15}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_EJAFU15}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_EJAME18

```{r rules_dist_EO_EJAME18}

## df com o resultado das aplicações das regras
df_rules_dist_EO_EJAME18 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_EJAME18" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_EJAME18"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_EJAME18) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_EJAME18_hampel_munic  = dplyr::if_else(!hampel_filter(EO_EJAME18), F, T), # Longitudinal (município)
    
    DF_EO_EJAME18_out_munic     = dplyr::if_else(!outlier_function(EO_EJAME18), F, T), # Longitudinal (município)
    
    DF_EO_EJAME18_min_munic     = dplyr::if_else(EO_EJAME18 >= (min(dplyr::lag(EO_EJAME18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAME18_max_munic     = dplyr::if_else(EO_EJAME18 <= (max(dplyr::lag(EO_EJAME18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAME18_min_k_munic   = dplyr::if_else(EO_EJAME18 >= (min(dplyr::lag(EO_EJAME18), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_EJAME18_max_k_munic   = dplyr::if_else(EO_EJAME18 <= (k * max(dplyr::lag(EO_EJAME18), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_EJAME18_med_mov_munic = dplyr::if_else(EO_EJAME18 <= (k * zoo::rollmedian(EO_EJAME18, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_EJAME18_dif_munic     = dplyr::if_else(!compare_first_dif(EO_EJAME18), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_EJAME18}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_EJAME18 |> 
  dplyr::select(!EO_EJAME18) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_EJAME18}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_EJAME18}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TAXA0A3

```{r rules_dist_EO_TAXA0A3}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXA0A3 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXA0A3" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXA0A3"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXA0A3) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXA0A3_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXA0A3), F, T), # Longitudinal (município)
    
    DF_EO_TAXA0A3_out_munic     = dplyr::if_else(!outlier_function(EO_TAXA0A3), F, T), # Longitudinal (município)
    
    DF_EO_TAXA0A3_min_munic     = dplyr::if_else(EO_TAXA0A3 >= (min(dplyr::lag(EO_TAXA0A3), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA0A3_max_munic     = dplyr::if_else(EO_TAXA0A3 <= (max(dplyr::lag(EO_TAXA0A3), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA0A3_min_k_munic   = dplyr::if_else(EO_TAXA0A3 >= (min(dplyr::lag(EO_TAXA0A3), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXA0A3_max_k_munic   = dplyr::if_else(EO_TAXA0A3 <= (k * max(dplyr::lag(EO_TAXA0A3), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA0A3_med_mov_munic = dplyr::if_else(EO_TAXA0A3 <= (k * zoo::rollmedian(EO_TAXA0A3, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXA0A3_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXA0A3), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXA0A3}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXA0A3 |> 
  dplyr::select(!EO_TAXA0A3) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXA0A3}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXA0A3}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TAXA4A5

```{r rules_dist_EO_TAXA4A5}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXA4A5 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXA4A5" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXA4A5"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXA4A5) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXA4A5_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXA4A5), F, T), # Longitudinal (município)
    
    DF_EO_TAXA4A5_out_munic     = dplyr::if_else(!outlier_function(EO_TAXA4A5), F, T), # Longitudinal (município)
    
    DF_EO_TAXA4A5_min_munic     = dplyr::if_else(EO_TAXA4A5 >= (min(dplyr::lag(EO_TAXA4A5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA4A5_max_munic     = dplyr::if_else(EO_TAXA4A5 <= (max(dplyr::lag(EO_TAXA4A5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA4A5_min_k_munic   = dplyr::if_else(EO_TAXA4A5 >= (min(dplyr::lag(EO_TAXA4A5), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXA4A5_max_k_munic   = dplyr::if_else(EO_TAXA4A5 <= (k * max(dplyr::lag(EO_TAXA4A5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA4A5_med_mov_munic = dplyr::if_else(EO_TAXA4A5 <= (k * zoo::rollmedian(EO_TAXA4A5, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXA4A5_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXA4A5), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXA4A5}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXA4A5 |> 
  dplyr::select(!EO_TAXA4A5) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXA4A5}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXA4A5}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TAXA15A17

```{r rules_dist_EO_TAXA15A17}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXA15A17 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXA15A17" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXA15A17"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXA15A17) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXA15A17_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXA15A17), F, T), # Longitudinal (município)
    
    DF_EO_TAXA15A17_out_munic     = dplyr::if_else(!outlier_function(EO_TAXA15A17), F, T), # Longitudinal (município)
    
    DF_EO_TAXA15A17_min_munic     = dplyr::if_else(EO_TAXA15A17 >= (min(dplyr::lag(EO_TAXA15A17), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15A17_max_munic     = dplyr::if_else(EO_TAXA15A17 <= (max(dplyr::lag(EO_TAXA15A17), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15A17_min_k_munic   = dplyr::if_else(EO_TAXA15A17 >= (min(dplyr::lag(EO_TAXA15A17), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXA15A17_max_k_munic   = dplyr::if_else(EO_TAXA15A17 <= (k * max(dplyr::lag(EO_TAXA15A17), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15A17_med_mov_munic = dplyr::if_else(EO_TAXA15A17 <= (k * zoo::rollmedian(EO_TAXA15A17, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXA15A17_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXA15A17), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXA15A17}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXA15A17 |> 
  dplyr::select(!EO_TAXA15A17) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXA15A17}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXA15A17}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXATBASICA

```{r rules_dist_EO_TXATBASICA}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXATBASICA <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXATBASICA" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXATBASICA"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXATBASICA) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXATBASICA_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXATBASICA), F, T), # Longitudinal (município)
    
    DF_EO_TXATBASICA_out_munic     = dplyr::if_else(!outlier_function(EO_TXATBASICA), F, T), # Longitudinal (município)
    
    DF_EO_TXATBASICA_min_munic     = dplyr::if_else(EO_TXATBASICA >= (min(dplyr::lag(EO_TXATBASICA), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXATBASICA_max_munic     = dplyr::if_else(EO_TXATBASICA <= (max(dplyr::lag(EO_TXATBASICA), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXATBASICA_min_k_munic   = dplyr::if_else(EO_TXATBASICA >= (min(dplyr::lag(EO_TXATBASICA), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXATBASICA_max_k_munic   = dplyr::if_else(EO_TXATBASICA <= (k * max(dplyr::lag(EO_TXATBASICA), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXATBASICA_med_mov_munic = dplyr::if_else(EO_TXATBASICA <= (k * zoo::rollmedian(EO_TXATBASICA, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXATBASICA_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXATBASICA), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXATBASICA}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXATBASICA |> 
  dplyr::select(!EO_TXATBASICA) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXATBASICA}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXATBASICA}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TAXA6A14

```{r rules_dist_EO_TAXA6A14}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXA6A14 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXA6A14" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXA6A14"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXA6A14) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXA6A14_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXA6A14), F, T), # Longitudinal (município)
    
    DF_EO_TAXA6A14_out_munic     = dplyr::if_else(!outlier_function(EO_TAXA6A14), F, T), # Longitudinal (município)
    
    DF_EO_TAXA6A14_min_munic     = dplyr::if_else(EO_TAXA6A14 >= (min(dplyr::lag(EO_TAXA6A14), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA6A14_max_munic     = dplyr::if_else(EO_TAXA6A14 <= (max(dplyr::lag(EO_TAXA6A14), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA6A14_min_k_munic   = dplyr::if_else(EO_TAXA6A14 >= (min(dplyr::lag(EO_TAXA6A14), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXA6A14_max_k_munic   = dplyr::if_else(EO_TAXA6A14 <= (k * max(dplyr::lag(EO_TAXA6A14), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA6A14_med_mov_munic = dplyr::if_else(EO_TAXA6A14 <= (k * zoo::rollmedian(EO_TAXA6A14, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXA6A14_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXA6A14), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXA6A14}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXA6A14 |> 
  dplyr::select(!EO_TAXA6A14) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXA6A14}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXA6A14}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_TAXA15

```{r rules_dist_EO_TAXA15}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXA15 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXA15" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXA15"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXA15) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXA15_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXA15), F, T), # Longitudinal (município)
    
    DF_EO_TAXA15_out_munic     = dplyr::if_else(!outlier_function(EO_TAXA15), F, T), # Longitudinal (município)
    
    DF_EO_TAXA15_min_munic     = dplyr::if_else(EO_TAXA15 >= (min(dplyr::lag(EO_TAXA15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15_max_munic     = dplyr::if_else(EO_TAXA15 <= (max(dplyr::lag(EO_TAXA15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15_min_k_munic   = dplyr::if_else(EO_TAXA15 >= (min(dplyr::lag(EO_TAXA15), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXA15_max_k_munic   = dplyr::if_else(EO_TAXA15 <= (k * max(dplyr::lag(EO_TAXA15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXA15_med_mov_munic = dplyr::if_else(EO_TAXA15 <= (k * zoo::rollmedian(EO_TAXA15, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXA15_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXA15), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXA15}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXA15 |> 
  dplyr::select(!EO_TAXA15) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXA15}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXA15}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



### EO_TAXALIQ7

```{r rules_dist_EO_TAXALIQ7}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXALIQ7 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXALIQ7" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXALIQ7"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXALIQ7) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXALIQ7_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXALIQ7), F, T), # Longitudinal (município)
    
    DF_EO_TAXALIQ7_out_munic     = dplyr::if_else(!outlier_function(EO_TAXALIQ7), F, T), # Longitudinal (município)
    
    DF_EO_TAXALIQ7_min_munic     = dplyr::if_else(EO_TAXALIQ7 >= (min(dplyr::lag(EO_TAXALIQ7), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ7_max_munic     = dplyr::if_else(EO_TAXALIQ7 <= (max(dplyr::lag(EO_TAXALIQ7), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ7_min_k_munic   = dplyr::if_else(EO_TAXALIQ7 >= (min(dplyr::lag(EO_TAXALIQ7), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ7_max_k_munic   = dplyr::if_else(EO_TAXALIQ7 <= (k * max(dplyr::lag(EO_TAXALIQ7), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ7_med_mov_munic = dplyr::if_else(EO_TAXALIQ7 <= (k * zoo::rollmedian(EO_TAXALIQ7, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ7_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXALIQ7), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXALIQ7}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXALIQ7 |> 
  dplyr::select(!EO_TAXALIQ7) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXALIQ7}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXALIQ7}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



### EO_TAXALIQ15

```{r rules_dist_EO_TAXALIQ15}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TAXALIQ15 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TAXALIQ15" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TAXALIQ15"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TAXALIQ15) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TAXALIQ15_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TAXALIQ15), F, T), # Longitudinal (município)
    
    DF_EO_TAXALIQ15_out_munic     = dplyr::if_else(!outlier_function(EO_TAXALIQ15), F, T), # Longitudinal (município)
    
    DF_EO_TAXALIQ15_min_munic     = dplyr::if_else(EO_TAXALIQ15 >= (min(dplyr::lag(EO_TAXALIQ15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ15_max_munic     = dplyr::if_else(EO_TAXALIQ15 <= (max(dplyr::lag(EO_TAXALIQ15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ15_min_k_munic   = dplyr::if_else(EO_TAXALIQ15 >= (min(dplyr::lag(EO_TAXALIQ15), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ15_max_k_munic   = dplyr::if_else(EO_TAXALIQ15 <= (k * max(dplyr::lag(EO_TAXALIQ15), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ15_med_mov_munic = dplyr::if_else(EO_TAXALIQ15 <= (k * zoo::rollmedian(EO_TAXALIQ15, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TAXALIQ15_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TAXALIQ15), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TAXALIQ15}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TAXALIQ15 |> 
  dplyr::select(!EO_TAXALIQ15) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TAXALIQ15}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TAXALIQ15}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_DISTEM

```{r rules_dist_eo_distem}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DISTEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DISTEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DISTEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DISTEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DISTEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DISTEM), F, T), # Longitudinal (município)
    
    DF_EO_DISTEM_out_munic     = dplyr::if_else(!outlier_function(EO_DISTEM), F, T), # Longitudinal (município)
    
    DF_EO_DISTEM_min_munic     = dplyr::if_else(EO_DISTEM >= (min(dplyr::lag(EO_DISTEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEM_max_munic     = dplyr::if_else(EO_DISTEM <= (max(dplyr::lag(EO_DISTEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEM_min_k_munic   = dplyr::if_else(EO_DISTEM >= (min(dplyr::lag(EO_DISTEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DISTEM_max_k_munic   = dplyr::if_else(EO_DISTEM <= (k * max(dplyr::lag(EO_DISTEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEM_med_mov_munic = dplyr::if_else(EO_DISTEM <= (k * zoo::rollmedian(EO_DISTEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DISTEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DISTEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_eo_distem}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DISTEM |> 
  dplyr::select(!EO_DISTEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_eo_distem}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_eo_distem}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



### EO_TXAPROV1a9

```{r rules_dist_EO_TXAPROV1a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXAPROV1a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXAPROV1a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXAPROV1a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXAPROV1a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXAPROV1a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXAPROV1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV1a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXAPROV1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV1a9_min_munic     = dplyr::if_else(EO_TXAPROV1a9 >= (min(dplyr::lag(EO_TXAPROV1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a9_max_munic     = dplyr::if_else(EO_TXAPROV1a9 <= (max(dplyr::lag(EO_TXAPROV1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a9_min_k_munic   = dplyr::if_else(EO_TXAPROV1a9 >= (min(dplyr::lag(EO_TXAPROV1a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a9_max_k_munic   = dplyr::if_else(EO_TXAPROV1a9 <= (k * max(dplyr::lag(EO_TXAPROV1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a9_med_mov_munic = dplyr::if_else(EO_TXAPROV1a9 <= (k * zoo::rollmedian(EO_TXAPROV1a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXAPROV1a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXAPROV1a9}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXAPROV1a9 |> 
  dplyr::select(!EO_TXAPROV1a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXAPROV1a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXAPROV1a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```




### EO_TXAPROV1a5

```{r rules_dist_EO_TXAPROV1a5}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXAPROV1a5 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXAPROV1a5" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXAPROV1a5"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXAPROV1a5) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXAPROV1a5_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXAPROV1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV1a5_out_munic     = dplyr::if_else(!outlier_function(EO_TXAPROV1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV1a5_min_munic     = dplyr::if_else(EO_TXAPROV1a5 >= (min(dplyr::lag(EO_TXAPROV1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a5_max_munic     = dplyr::if_else(EO_TXAPROV1a5 <= (max(dplyr::lag(EO_TXAPROV1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a5_min_k_munic   = dplyr::if_else(EO_TXAPROV1a5 >= (min(dplyr::lag(EO_TXAPROV1a5), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a5_max_k_munic   = dplyr::if_else(EO_TXAPROV1a5 <= (k * max(dplyr::lag(EO_TXAPROV1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a5_med_mov_munic = dplyr::if_else(EO_TXAPROV1a5 <= (k * zoo::rollmedian(EO_TXAPROV1a5, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXAPROV1a5_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXAPROV1a5), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXAPROV1a5}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXAPROV1a5 |> 
  dplyr::select(!EO_TXAPROV1a5) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXAPROV1a5}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXAPROV1a5}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



### EO_TXAPROV6a9

```{r rules_dist_EO_TXAPROV6a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXAPROV6a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXAPROV6a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXAPROV6a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXAPROV6a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXAPROV6a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXAPROV6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV6a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXAPROV6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV6a9_min_munic     = dplyr::if_else(EO_TXAPROV6a9 >= (min(dplyr::lag(EO_TXAPROV6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV6a9_max_munic     = dplyr::if_else(EO_TXAPROV6a9 <= (max(dplyr::lag(EO_TXAPROV6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV6a9_min_k_munic   = dplyr::if_else(EO_TXAPROV6a9 >= (min(dplyr::lag(EO_TXAPROV6a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXAPROV6a9_max_k_munic   = dplyr::if_else(EO_TXAPROV6a9 <= (k * max(dplyr::lag(EO_TXAPROV6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV6a9_med_mov_munic = dplyr::if_else(EO_TXAPROV6a9 <= (k * zoo::rollmedian(EO_TXAPROV6a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXAPROV6a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXAPROV6a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXAPROV6a9}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXAPROV6a9 |> 
  dplyr::select(!EO_TXAPROV6a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXAPROV6a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXAPROV6a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXAPROV10a12

```{r rules_dist_EO_TXAPROV10a12}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXAPROV10a12 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXAPROV10a12" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXAPROV10a12"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXAPROV10a12) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXAPROV10a12_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXAPROV10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV10a12_out_munic     = dplyr::if_else(!outlier_function(EO_TXAPROV10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXAPROV10a12_min_munic     = dplyr::if_else(EO_TXAPROV10a12 >= (min(dplyr::lag(EO_TXAPROV10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV10a12_max_munic     = dplyr::if_else(EO_TXAPROV10a12 <= (max(dplyr::lag(EO_TXAPROV10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV10a12_min_k_munic   = dplyr::if_else(EO_TXAPROV10a12 >= (min(dplyr::lag(EO_TXAPROV10a12), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXAPROV10a12_max_k_munic   = dplyr::if_else(EO_TXAPROV10a12 <= (k * max(dplyr::lag(EO_TXAPROV10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXAPROV10a12_med_mov_munic = dplyr::if_else(EO_TXAPROV10a12 <= (k * zoo::rollmedian(EO_TXAPROV10a12, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXAPROV10a12_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXAPROV10a12), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXAPROV10a12}
## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXAPROV10a12 |> 
  dplyr::select(!EO_TXAPROV10a12) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXAPROV10a12}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXAPROV10a12}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXREP1a9

```{r rules_dist_EO_TXREP1a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXREP1a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXREP1a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXREP1a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXREP1a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXREP1a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXREP1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXREP1a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXREP1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXREP1a9_min_munic     = dplyr::if_else(EO_TXREP1a9 >= (min(dplyr::lag(EO_TXREP1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a9_max_munic     = dplyr::if_else(EO_TXREP1a9 <= (max(dplyr::lag(EO_TXREP1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a9_min_k_munic   = dplyr::if_else(EO_TXREP1a9 >= (min(dplyr::lag(EO_TXREP1a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXREP1a9_max_k_munic   = dplyr::if_else(EO_TXREP1a9 <= (k * max(dplyr::lag(EO_TXREP1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a9_med_mov_munic = dplyr::if_else(EO_TXREP1a9 <= (k * zoo::rollmedian(EO_TXREP1a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXREP1a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXREP1a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXREP1a9}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXREP1a9 |> 
  dplyr::select(!EO_TXREP1a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXREP1a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXREP1a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXREP1a5

```{r rules_dist_EO_TXREP1a5}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXREP1a5 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXREP1a5" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXREP1a5"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXREP1a5) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXREP1a5_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXREP1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXREP1a5_out_munic     = dplyr::if_else(!outlier_function(EO_TXREP1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXREP1a5_min_munic     = dplyr::if_else(EO_TXREP1a5 >= (min(dplyr::lag(EO_TXREP1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a5_max_munic     = dplyr::if_else(EO_TXREP1a5 <= (max(dplyr::lag(EO_TXREP1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a5_min_k_munic   = dplyr::if_else(EO_TXREP1a5 >= (min(dplyr::lag(EO_TXREP1a5), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXREP1a5_max_k_munic   = dplyr::if_else(EO_TXREP1a5 <= (k * max(dplyr::lag(EO_TXREP1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP1a5_med_mov_munic = dplyr::if_else(EO_TXREP1a5 <= (k * zoo::rollmedian(EO_TXREP1a5, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXREP1a5_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXREP1a5), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXREP1a5}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXREP1a5 |> 
  dplyr::select(!EO_TXREP1a5) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXREP1a5}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXREP1a5}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXREP10a12

```{r rules_dist_EO_TXREP10a12}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXREP10a12 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXREP10a12" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXREP10a12"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXREP10a12) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXREP10a12_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXREP10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXREP10a12_out_munic     = dplyr::if_else(!outlier_function(EO_TXREP10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXREP10a12_min_munic     = dplyr::if_else(EO_TXREP10a12 >= (min(dplyr::lag(EO_TXREP10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP10a12_max_munic     = dplyr::if_else(EO_TXREP10a12 <= (max(dplyr::lag(EO_TXREP10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP10a12_min_k_munic   = dplyr::if_else(EO_TXREP10a12 >= (min(dplyr::lag(EO_TXREP10a12), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXREP10a12_max_k_munic   = dplyr::if_else(EO_TXREP10a12 <= (k * max(dplyr::lag(EO_TXREP10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP10a12_med_mov_munic = dplyr::if_else(EO_TXREP10a12 <= (k * zoo::rollmedian(EO_TXREP10a12, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXREP10a12_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXREP10a12), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXREP10a12}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXREP10a12 |> 
  dplyr::select(!EO_TXREP10a12) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXREP10a12}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXREP10a12}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXREP6a9

```{r rules_dist_EO_TXREP6a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXREP6a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXREP6a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXREP6a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXREP6a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXREP6a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXREP6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXREP6a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXREP6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXREP6a9_min_munic     = dplyr::if_else(EO_TXREP6a9 >= (min(dplyr::lag(EO_TXREP6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP6a9_max_munic     = dplyr::if_else(EO_TXREP6a9 <= (max(dplyr::lag(EO_TXREP6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP6a9_min_k_munic   = dplyr::if_else(EO_TXREP6a9 >= (min(dplyr::lag(EO_TXREP6a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXREP6a9_max_k_munic   = dplyr::if_else(EO_TXREP6a9 <= (k * max(dplyr::lag(EO_TXREP6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXREP6a9_med_mov_munic = dplyr::if_else(EO_TXREP6a9 <= (k * zoo::rollmedian(EO_TXREP6a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXREP6a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXREP6a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXREP6a9}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXREP6a9 |> 
  dplyr::select(!EO_TXREP6a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXREP6a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXREP6a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXABA1a9

```{r rules_dist_EO_TXABA1a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXABA1a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXABA1a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXABA1a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXABA1a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXABA1a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXABA1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXABA1a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXABA1a9), F, T), # Longitudinal (município)
    
    DF_EO_TXABA1a9_min_munic     = dplyr::if_else(EO_TXABA1a9 >= (min(dplyr::lag(EO_TXABA1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a9_max_munic     = dplyr::if_else(EO_TXABA1a9 <= (max(dplyr::lag(EO_TXABA1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a9_min_k_munic   = dplyr::if_else(EO_TXABA1a9 >= (min(dplyr::lag(EO_TXABA1a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXABA1a9_max_k_munic   = dplyr::if_else(EO_TXABA1a9 <= (k * max(dplyr::lag(EO_TXABA1a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a9_med_mov_munic = dplyr::if_else(EO_TXABA1a9 <= (k * zoo::rollmedian(EO_TXABA1a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXABA1a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXABA1a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXABA1a9}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXABA1a9 |> 
  dplyr::select(!EO_TXABA1a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXABA1a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXABA1a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXABA1a5

```{r rules_dist_EO_TXABA1a5}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXABA1a5 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXABA1a5" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXABA1a5"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXABA1a5) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXABA1a5_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXABA1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXABA1a5_out_munic     = dplyr::if_else(!outlier_function(EO_TXABA1a5), F, T), # Longitudinal (município)
    
    DF_EO_TXABA1a5_min_munic     = dplyr::if_else(EO_TXABA1a5 >= (min(dplyr::lag(EO_TXABA1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a5_max_munic     = dplyr::if_else(EO_TXABA1a5 <= (max(dplyr::lag(EO_TXABA1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a5_min_k_munic   = dplyr::if_else(EO_TXABA1a5 >= (min(dplyr::lag(EO_TXABA1a5), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXABA1a5_max_k_munic   = dplyr::if_else(EO_TXABA1a5 <= (k * max(dplyr::lag(EO_TXABA1a5), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA1a5_med_mov_munic = dplyr::if_else(EO_TXABA1a5 <= (k * zoo::rollmedian(EO_TXABA1a5, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXABA1a5_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXABA1a5), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXABA1a5}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXABA1a5 |> 
  dplyr::select(!EO_TXABA1a5) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXABA1a5}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXABA1a5}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_TXABA6a9

```{r rules_dist_EO_TXABA6a9}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXABA6a9 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXABA6a9" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXABA6a9"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXABA6a9) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXABA6a9_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXABA6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXABA6a9_out_munic     = dplyr::if_else(!outlier_function(EO_TXABA6a9), F, T), # Longitudinal (município)
    
    DF_EO_TXABA6a9_min_munic     = dplyr::if_else(EO_TXABA6a9 >= (min(dplyr::lag(EO_TXABA6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA6a9_max_munic     = dplyr::if_else(EO_TXABA6a9 <= (max(dplyr::lag(EO_TXABA6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA6a9_min_k_munic   = dplyr::if_else(EO_TXABA6a9 >= (min(dplyr::lag(EO_TXABA6a9), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXABA6a9_max_k_munic   = dplyr::if_else(EO_TXABA6a9 <= (k * max(dplyr::lag(EO_TXABA6a9), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA6a9_med_mov_munic = dplyr::if_else(EO_TXABA6a9 <= (k * zoo::rollmedian(EO_TXABA6a9, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXABA6a9_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXABA6a9), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXABA6a9}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXABA6a9 |> 
  dplyr::select(!EO_TXABA6a9) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXABA6a9}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXABA6a9}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

### EO_TXABA10a12

```{r rules_dist_EO_TXABA10a12}

## df com o resultado das aplicações das regras
df_rules_dist_EO_TXABA10a12 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_TXABA10a12" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_TXABA10a12"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_TXABA10a12) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_TXABA10a12_hampel_munic  = dplyr::if_else(!hampel_filter(EO_TXABA10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXABA10a12_out_munic     = dplyr::if_else(!outlier_function(EO_TXABA10a12), F, T), # Longitudinal (município)
    
    DF_EO_TXABA10a12_min_munic     = dplyr::if_else(EO_TXABA10a12 >= (min(dplyr::lag(EO_TXABA10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA10a12_max_munic     = dplyr::if_else(EO_TXABA10a12 <= (max(dplyr::lag(EO_TXABA10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA10a12_min_k_munic   = dplyr::if_else(EO_TXABA10a12 >= (min(dplyr::lag(EO_TXABA10a12), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_TXABA10a12_max_k_munic   = dplyr::if_else(EO_TXABA10a12 <= (k * max(dplyr::lag(EO_TXABA10a12), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_TXABA10a12_med_mov_munic = dplyr::if_else(EO_TXABA10a12 <= (k * zoo::rollmedian(EO_TXABA10a12, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_TXABA10a12_dif_munic     = dplyr::if_else(!compare_first_dif(EO_TXABA10a12), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_TXABA10a12}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_TXABA10a12 |> 
  dplyr::select(!EO_TXABA10a12) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_TXABA10a12}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_TXABA10a12}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_DISTEF

```{r rules_dist_EO_DISTEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DISTEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DISTEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DISTEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DISTEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DISTEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DISTEF), F, T), # Longitudinal (município)
    
    DF_EO_DISTEF_out_munic     = dplyr::if_else(!outlier_function(EO_DISTEF), F, T), # Longitudinal (município)
    
    DF_EO_DISTEF_min_munic     = dplyr::if_else(EO_DISTEF >= (min(dplyr::lag(EO_DISTEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEF_max_munic     = dplyr::if_else(EO_DISTEF <= (max(dplyr::lag(EO_DISTEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEF_min_k_munic   = dplyr::if_else(EO_DISTEF >= (min(dplyr::lag(EO_DISTEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DISTEF_max_k_munic   = dplyr::if_else(EO_DISTEF <= (k * max(dplyr::lag(EO_DISTEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEF_med_mov_munic = dplyr::if_else(EO_DISTEF <= (k * zoo::rollmedian(EO_DISTEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DISTEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DISTEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DISTEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DISTEF |> 
  dplyr::select(!EO_DISTEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DISTEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DISTEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_DISTEFAI

```{r rules_dist_EO_DISTEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DISTEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DISTEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DISTEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DISTEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DISTEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DISTEFAI), F, T), # Longitudinal (município)
    
    DF_EO_DISTEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_DISTEFAI), F, T), # Longitudinal (município)
    
    DF_EO_DISTEFAI_min_munic     = dplyr::if_else(EO_DISTEFAI >= (min(dplyr::lag(EO_DISTEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAI_max_munic     = dplyr::if_else(EO_DISTEFAI <= (max(dplyr::lag(EO_DISTEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAI_min_k_munic   = dplyr::if_else(EO_DISTEFAI >= (min(dplyr::lag(EO_DISTEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DISTEFAI_max_k_munic   = dplyr::if_else(EO_DISTEFAI <= (k * max(dplyr::lag(EO_DISTEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAI_med_mov_munic = dplyr::if_else(EO_DISTEFAI <= (k * zoo::rollmedian(EO_DISTEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DISTEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DISTEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DISTEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DISTEFAI |> 
  dplyr::select(!EO_DISTEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DISTEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DISTEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


### EO_DISTEFAF

```{r rules_dist_EO_DISTEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DISTEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DISTEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DISTEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DISTEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DISTEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DISTEFAF), F, T), # Longitudinal (município)
    
    DF_EO_DISTEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_DISTEFAF), F, T), # Longitudinal (município)
    
    DF_EO_DISTEFAF_min_munic     = dplyr::if_else(EO_DISTEFAF >= (min(dplyr::lag(EO_DISTEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAF_max_munic     = dplyr::if_else(EO_DISTEFAF <= (max(dplyr::lag(EO_DISTEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAF_min_k_munic   = dplyr::if_else(EO_DISTEFAF >= (min(dplyr::lag(EO_DISTEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DISTEFAF_max_k_munic   = dplyr::if_else(EO_DISTEFAF <= (k * max(dplyr::lag(EO_DISTEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DISTEFAF_med_mov_munic = dplyr::if_else(EO_DISTEFAF <= (k * zoo::rollmedian(EO_DISTEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DISTEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DISTEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DISTEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DISTEFAF |> 
  dplyr::select(!EO_DISTEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DISTEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DISTEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


































### EO_PCINF

```{r rules_dist_EO_PCINF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCINF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCINF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCINF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCINF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCINF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCINF), F, T), # Longitudinal (município)
    
    DF_EO_PCINF_out_munic     = dplyr::if_else(!outlier_function(EO_PCINF), F, T), # Longitudinal (município)
    
    DF_EO_PCINF_min_munic     = dplyr::if_else(EO_PCINF >= (min(dplyr::lag(EO_PCINF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINF_max_munic     = dplyr::if_else(EO_PCINF <= (max(dplyr::lag(EO_PCINF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINF_min_k_munic   = dplyr::if_else(EO_PCINF >= (min(dplyr::lag(EO_PCINF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCINF_max_k_munic   = dplyr::if_else(EO_PCINF <= (k * max(dplyr::lag(EO_PCINF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINF_med_mov_munic = dplyr::if_else(EO_PCINF <= (k * zoo::rollmedian(EO_PCINF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCINF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCINF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCINF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCINF |> 
  dplyr::select(!EO_PCINF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCINF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCINF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

































### EO_PCITF

```{r rules_dist_EO_PCITF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCITF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCITF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCITF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCITF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCITF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCITF), F, T), # Longitudinal (município)
    
    DF_EO_PCITF_out_munic     = dplyr::if_else(!outlier_function(EO_PCITF), F, T), # Longitudinal (município)
    
    DF_EO_PCITF_min_munic     = dplyr::if_else(EO_PCITF >= (min(dplyr::lag(EO_PCITF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITF_max_munic     = dplyr::if_else(EO_PCITF <= (max(dplyr::lag(EO_PCITF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITF_min_k_munic   = dplyr::if_else(EO_PCITF >= (min(dplyr::lag(EO_PCITF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCITF_max_k_munic   = dplyr::if_else(EO_PCITF <= (k * max(dplyr::lag(EO_PCITF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITF_med_mov_munic = dplyr::if_else(EO_PCITF <= (k * zoo::rollmedian(EO_PCITF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCITF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCITF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCITF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCITF |> 
  dplyr::select(!EO_PCITF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCITF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCITF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
































### EO_PCINFM

```{r rules_dist_EO_PCINFM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCINFM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCINFM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCINFM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCINFM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCINFM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCINFM), F, T), # Longitudinal (município)
    
    DF_EO_PCINFM_out_munic     = dplyr::if_else(!outlier_function(EO_PCINFM), F, T), # Longitudinal (município)
    
    DF_EO_PCINFM_min_munic     = dplyr::if_else(EO_PCINFM >= (min(dplyr::lag(EO_PCINFM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINFM_max_munic     = dplyr::if_else(EO_PCINFM <= (max(dplyr::lag(EO_PCINFM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINFM_min_k_munic   = dplyr::if_else(EO_PCINFM >= (min(dplyr::lag(EO_PCINFM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCINFM_max_k_munic   = dplyr::if_else(EO_PCINFM <= (k * max(dplyr::lag(EO_PCINFM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCINFM_med_mov_munic = dplyr::if_else(EO_PCINFM <= (k * zoo::rollmedian(EO_PCINFM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCINFM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCINFM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCINFM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCINFM |> 
  dplyr::select(!EO_PCINFM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCINFM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCINFM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
































### EO_PCITM

```{r rules_dist_EO_PCITM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCITM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCITM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCITM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCITM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCITM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCITM), F, T), # Longitudinal (município)
    
    DF_EO_PCITM_out_munic     = dplyr::if_else(!outlier_function(EO_PCITM), F, T), # Longitudinal (município)
    
    DF_EO_PCITM_min_munic     = dplyr::if_else(EO_PCITM >= (min(dplyr::lag(EO_PCITM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITM_max_munic     = dplyr::if_else(EO_PCITM <= (max(dplyr::lag(EO_PCITM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITM_min_k_munic   = dplyr::if_else(EO_PCITM >= (min(dplyr::lag(EO_PCITM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCITM_max_k_munic   = dplyr::if_else(EO_PCITM <= (k * max(dplyr::lag(EO_PCITM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCITM_med_mov_munic = dplyr::if_else(EO_PCITM <= (k * zoo::rollmedian(EO_PCITM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCITM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCITM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCITM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCITM |> 
  dplyr::select(!EO_PCITM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCITM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCITM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
































### EO_PCAPM8

```{r rules_dist_EO_PCAPM8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCAPM8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCAPM8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCAPM8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCAPM8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCAPM8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCAPM8), F, T), # Longitudinal (município)
    
    DF_EO_PCAPM8_out_munic     = dplyr::if_else(!outlier_function(EO_PCAPM8), F, T), # Longitudinal (município)
    
    DF_EO_PCAPM8_min_munic     = dplyr::if_else(EO_PCAPM8 >= (min(dplyr::lag(EO_PCAPM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM8_max_munic     = dplyr::if_else(EO_PCAPM8 <= (max(dplyr::lag(EO_PCAPM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM8_min_k_munic   = dplyr::if_else(EO_PCAPM8 >= (min(dplyr::lag(EO_PCAPM8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCAPM8_max_k_munic   = dplyr::if_else(EO_PCAPM8 <= (k * max(dplyr::lag(EO_PCAPM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM8_med_mov_munic = dplyr::if_else(EO_PCAPM8 <= (k * zoo::rollmedian(EO_PCAPM8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCAPM8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCAPM8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCAPM8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCAPM8 |> 
  dplyr::select(!EO_PCAPM8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCAPM8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCAPM8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


































### EO_PCAPM11

```{r rules_dist_EO_PCAPM11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCAPM11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCAPM11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCAPM11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCAPM11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCAPM11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCAPM11), F, T), # Longitudinal (município)
    
    DF_EO_PCAPM11_out_munic     = dplyr::if_else(!outlier_function(EO_PCAPM11), F, T), # Longitudinal (município)
    
    DF_EO_PCAPM11_min_munic     = dplyr::if_else(EO_PCAPM11 >= (min(dplyr::lag(EO_PCAPM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM11_max_munic     = dplyr::if_else(EO_PCAPM11 <= (max(dplyr::lag(EO_PCAPM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM11_min_k_munic   = dplyr::if_else(EO_PCAPM11 >= (min(dplyr::lag(EO_PCAPM11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCAPM11_max_k_munic   = dplyr::if_else(EO_PCAPM11 <= (k * max(dplyr::lag(EO_PCAPM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPM11_med_mov_munic = dplyr::if_else(EO_PCAPM11 <= (k * zoo::rollmedian(EO_PCAPM11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCAPM11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCAPM11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCAPM11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCAPM11 |> 
  dplyr::select(!EO_PCAPM11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCAPM11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCAPM11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



































### EO_PCAPP8

```{r rules_dist_EO_PCAPP8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCAPP8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCAPP8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCAPP8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCAPP8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCAPP8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCAPP8), F, T), # Longitudinal (município)
    
    DF_EO_PCAPP8_out_munic     = dplyr::if_else(!outlier_function(EO_PCAPP8), F, T), # Longitudinal (município)
    
    DF_EO_PCAPP8_min_munic     = dplyr::if_else(EO_PCAPP8 >= (min(dplyr::lag(EO_PCAPP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP8_max_munic     = dplyr::if_else(EO_PCAPP8 <= (max(dplyr::lag(EO_PCAPP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP8_min_k_munic   = dplyr::if_else(EO_PCAPP8 >= (min(dplyr::lag(EO_PCAPP8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCAPP8_max_k_munic   = dplyr::if_else(EO_PCAPP8 <= (k * max(dplyr::lag(EO_PCAPP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP8_med_mov_munic = dplyr::if_else(EO_PCAPP8 <= (k * zoo::rollmedian(EO_PCAPP8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCAPP8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCAPP8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCAPP8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCAPP8 |> 
  dplyr::select(!EO_PCAPP8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCAPP8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCAPP8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


































### EO_PCAPP11

```{r rules_dist_EO_PCAPP11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PCAPP11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PCAPP11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PCAPP11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PCAPP11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PCAPP11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PCAPP11), F, T), # Longitudinal (município)
    
    DF_EO_PCAPP11_out_munic     = dplyr::if_else(!outlier_function(EO_PCAPP11), F, T), # Longitudinal (município)
    
    DF_EO_PCAPP11_min_munic     = dplyr::if_else(EO_PCAPP11 >= (min(dplyr::lag(EO_PCAPP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP11_max_munic     = dplyr::if_else(EO_PCAPP11 <= (max(dplyr::lag(EO_PCAPP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP11_min_k_munic   = dplyr::if_else(EO_PCAPP11 >= (min(dplyr::lag(EO_PCAPP11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PCAPP11_max_k_munic   = dplyr::if_else(EO_PCAPP11 <= (k * max(dplyr::lag(EO_PCAPP11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PCAPP11_med_mov_munic = dplyr::if_else(EO_PCAPP11 <= (k * zoo::rollmedian(EO_PCAPP11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PCAPP11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PCAPP11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PCAPP11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PCAPP11 |> 
  dplyr::select(!EO_PCAPP11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PCAPP11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PCAPP11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



































### EO_PALUNOSM8

```{r rules_dist_EO_PALUNOSM8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PALUNOSM8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PALUNOSM8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PALUNOSM8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PALUNOSM8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PALUNOSM8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PALUNOSM8), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSM8_out_munic     = dplyr::if_else(!outlier_function(EO_PALUNOSM8), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSM8_min_munic     = dplyr::if_else(EO_PALUNOSM8 >= (min(dplyr::lag(EO_PALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM8_max_munic     = dplyr::if_else(EO_PALUNOSM8 <= (max(dplyr::lag(EO_PALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM8_min_k_munic   = dplyr::if_else(EO_PALUNOSM8 >= (min(dplyr::lag(EO_PALUNOSM8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM8_max_k_munic   = dplyr::if_else(EO_PALUNOSM8 <= (k * max(dplyr::lag(EO_PALUNOSM8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM8_med_mov_munic = dplyr::if_else(EO_PALUNOSM8 <= (k * zoo::rollmedian(EO_PALUNOSM8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PALUNOSM8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PALUNOSM8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PALUNOSM8 |> 
  dplyr::select(!EO_PALUNOSM8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PALUNOSM8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PALUNOSM8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


































### EO_PALUNOSP8

```{r rules_dist_EO_PALUNOSP8}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PALUNOSP8 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PALUNOSP8" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PALUNOSP8"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PALUNOSP8) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PALUNOSP8_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PALUNOSP8), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSP8_out_munic     = dplyr::if_else(!outlier_function(EO_PALUNOSP8), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSP8_min_munic     = dplyr::if_else(EO_PALUNOSP8 >= (min(dplyr::lag(EO_PALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSP8_max_munic     = dplyr::if_else(EO_PALUNOSP8 <= (max(dplyr::lag(EO_PALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSP8_min_k_munic   = dplyr::if_else(EO_PALUNOSP8 >= (min(dplyr::lag(EO_PALUNOSP8), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PALUNOSP8_max_k_munic   = dplyr::if_else(EO_PALUNOSP8 <= (k * max(dplyr::lag(EO_PALUNOSP8), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSP8_med_mov_munic = dplyr::if_else(EO_PALUNOSP8 <= (k * zoo::rollmedian(EO_PALUNOSP8, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PALUNOSP8_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PALUNOSP8), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PALUNOSP8}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PALUNOSP8 |> 
  dplyr::select(!EO_PALUNOSP8) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PALUNOSP8}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PALUNOSP8}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```




































### EO_PALUNOSM11

```{r rules_dist_EO_PALUNOSM11}

## df com o resultado das aplicações das regras
df_rules_dist_EO_PALUNOSM11 <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_PALUNOSM11" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_PALUNOSM11"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_PALUNOSM11) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_PALUNOSM11_hampel_munic  = dplyr::if_else(!hampel_filter(EO_PALUNOSM11), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSM11_out_munic     = dplyr::if_else(!outlier_function(EO_PALUNOSM11), F, T), # Longitudinal (município)
    
    DF_EO_PALUNOSM11_min_munic     = dplyr::if_else(EO_PALUNOSM11 >= (min(dplyr::lag(EO_PALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM11_max_munic     = dplyr::if_else(EO_PALUNOSM11 <= (max(dplyr::lag(EO_PALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM11_min_k_munic   = dplyr::if_else(EO_PALUNOSM11 >= (min(dplyr::lag(EO_PALUNOSM11), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM11_max_k_munic   = dplyr::if_else(EO_PALUNOSM11 <= (k * max(dplyr::lag(EO_PALUNOSM11), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM11_med_mov_munic = dplyr::if_else(EO_PALUNOSM11 <= (k * zoo::rollmedian(EO_PALUNOSM11, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_PALUNOSM11_dif_munic     = dplyr::if_else(!compare_first_dif(EO_PALUNOSM11), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_PALUNOSM11}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_PALUNOSM11 |> 
  dplyr::select(!EO_PALUNOSM11) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_PALUNOSM11}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_PALUNOSM11}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```




































### EO_ANALF25_B

```{r rules_dist_EO_ANALF25_B}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ANALF25_B <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ANALF25_B" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ANALF25_B"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ANALF25_B) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ANALF25_B_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ANALF25_B), F, T), # Longitudinal (município)
    
    DF_EO_ANALF25_B_out_munic     = dplyr::if_else(!outlier_function(EO_ANALF25_B), F, T), # Longitudinal (município)
    
    DF_EO_ANALF25_B_min_munic     = dplyr::if_else(EO_ANALF25_B >= (min(dplyr::lag(EO_ANALF25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_B_max_munic     = dplyr::if_else(EO_ANALF25_B <= (max(dplyr::lag(EO_ANALF25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_B_min_k_munic   = dplyr::if_else(EO_ANALF25_B >= (min(dplyr::lag(EO_ANALF25_B), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ANALF25_B_max_k_munic   = dplyr::if_else(EO_ANALF25_B <= (k * max(dplyr::lag(EO_ANALF25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_B_med_mov_munic = dplyr::if_else(EO_ANALF25_B <= (k * zoo::rollmedian(EO_ANALF25_B, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ANALF25_B_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ANALF25_B), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ANALF25_B}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ANALF25_B |> 
  dplyr::select(!EO_ANALF25_B) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ANALF25_B}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ANALF25_B}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```









































### EO_ANALF25_PP

```{r rules_dist_EO_ANALF25_PP}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ANALF25_PP <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ANALF25_PP" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ANALF25_PP"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ANALF25_PP) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ANALF25_PP_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ANALF25_PP), F, T), # Longitudinal (município)
    
    DF_EO_ANALF25_PP_out_munic     = dplyr::if_else(!outlier_function(EO_ANALF25_PP), F, T), # Longitudinal (município)
    
    DF_EO_ANALF25_PP_min_munic     = dplyr::if_else(EO_ANALF25_PP >= (min(dplyr::lag(EO_ANALF25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_PP_max_munic     = dplyr::if_else(EO_ANALF25_PP <= (max(dplyr::lag(EO_ANALF25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_PP_min_k_munic   = dplyr::if_else(EO_ANALF25_PP >= (min(dplyr::lag(EO_ANALF25_PP), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ANALF25_PP_max_k_munic   = dplyr::if_else(EO_ANALF25_PP <= (k * max(dplyr::lag(EO_ANALF25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ANALF25_PP_med_mov_munic = dplyr::if_else(EO_ANALF25_PP <= (k * zoo::rollmedian(EO_ANALF25_PP, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ANALF25_PP_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ANALF25_PP), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ANALF25_PP}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ANALF25_PP |> 
  dplyr::select(!EO_ANALF25_PP) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ANALF25_PP}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ANALF25_PP}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```







































### EO_FUND25_B

```{r rules_dist_EO_FUND25_B}

## df com o resultado das aplicações das regras
df_rules_dist_EO_FUND25_B <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_FUND25_B" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_FUND25_B"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_FUND25_B) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_FUND25_B_hampel_munic  = dplyr::if_else(!hampel_filter(EO_FUND25_B), F, T), # Longitudinal (município)
    
    DF_EO_FUND25_B_out_munic     = dplyr::if_else(!outlier_function(EO_FUND25_B), F, T), # Longitudinal (município)
    
    DF_EO_FUND25_B_min_munic     = dplyr::if_else(EO_FUND25_B >= (min(dplyr::lag(EO_FUND25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_B_max_munic     = dplyr::if_else(EO_FUND25_B <= (max(dplyr::lag(EO_FUND25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_B_min_k_munic   = dplyr::if_else(EO_FUND25_B >= (min(dplyr::lag(EO_FUND25_B), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_FUND25_B_max_k_munic   = dplyr::if_else(EO_FUND25_B <= (k * max(dplyr::lag(EO_FUND25_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_B_med_mov_munic = dplyr::if_else(EO_FUND25_B <= (k * zoo::rollmedian(EO_FUND25_B, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_FUND25_B_dif_munic     = dplyr::if_else(!compare_first_dif(EO_FUND25_B), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_FUND25_B}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_FUND25_B |> 
  dplyr::select(!EO_FUND25_B) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_FUND25_B}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_FUND25_B}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```








































### EO_FUND25_PP

```{r rules_dist_EO_FUND25_PP}

## df com o resultado das aplicações das regras
df_rules_dist_EO_FUND25_PP <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_FUND25_PP" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_FUND25_PP"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_FUND25_PP) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_FUND25_PP_hampel_munic  = dplyr::if_else(!hampel_filter(EO_FUND25_PP), F, T), # Longitudinal (município)
    
    DF_EO_FUND25_PP_out_munic     = dplyr::if_else(!outlier_function(EO_FUND25_PP), F, T), # Longitudinal (município)
    
    DF_EO_FUND25_PP_min_munic     = dplyr::if_else(EO_FUND25_PP >= (min(dplyr::lag(EO_FUND25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_PP_max_munic     = dplyr::if_else(EO_FUND25_PP <= (max(dplyr::lag(EO_FUND25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_PP_min_k_munic   = dplyr::if_else(EO_FUND25_PP >= (min(dplyr::lag(EO_FUND25_PP), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_FUND25_PP_max_k_munic   = dplyr::if_else(EO_FUND25_PP <= (k * max(dplyr::lag(EO_FUND25_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_FUND25_PP_med_mov_munic = dplyr::if_else(EO_FUND25_PP <= (k * zoo::rollmedian(EO_FUND25_PP, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_FUND25_PP_dif_munic     = dplyr::if_else(!compare_first_dif(EO_FUND25_PP), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_FUND25_PP}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_FUND25_PP |> 
  dplyr::select(!EO_FUND25_PP) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_FUND25_PP}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_FUND25_PP}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_MED25M_B

```{r rules_dist_EO_MED25M_B}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MED25M_B <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MED25M_B" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MED25M_B"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MED25M_B) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MED25M_B_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MED25M_B), F, T), # Longitudinal (município)
    
    DF_EO_MED25M_B_out_munic     = dplyr::if_else(!outlier_function(EO_MED25M_B), F, T), # Longitudinal (município)
    
    DF_EO_MED25M_B_min_munic     = dplyr::if_else(EO_MED25M_B >= (min(dplyr::lag(EO_MED25M_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_B_max_munic     = dplyr::if_else(EO_MED25M_B <= (max(dplyr::lag(EO_MED25M_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_B_min_k_munic   = dplyr::if_else(EO_MED25M_B >= (min(dplyr::lag(EO_MED25M_B), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MED25M_B_max_k_munic   = dplyr::if_else(EO_MED25M_B <= (k * max(dplyr::lag(EO_MED25M_B), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_B_med_mov_munic = dplyr::if_else(EO_MED25M_B <= (k * zoo::rollmedian(EO_MED25M_B, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MED25M_B_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MED25M_B), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MED25_B}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MED25M_B |> 
  dplyr::select(!EO_MED25M_B) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MED25M_B}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MED25_B}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```







































### EO_MED25M_PP

```{r rules_dist_EO_MED25M_PP}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MED25M_PP <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MED25M_PP" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MED25M_PP"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MED25M_PP) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MED25M_PP_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MED25M_PP), F, T), # Longitudinal (município)
    
    DF_EO_MED25M_PP_out_munic     = dplyr::if_else(!outlier_function(EO_MED25M_PP), F, T), # Longitudinal (município)
    
    DF_EO_MED25M_PP_min_munic     = dplyr::if_else(EO_MED25M_PP >= (min(dplyr::lag(EO_MED25M_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_PP_max_munic     = dplyr::if_else(EO_MED25M_PP <= (max(dplyr::lag(EO_MED25M_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_PP_min_k_munic   = dplyr::if_else(EO_MED25M_PP >= (min(dplyr::lag(EO_MED25M_PP), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MED25M_PP_max_k_munic   = dplyr::if_else(EO_MED25M_PP <= (k * max(dplyr::lag(EO_MED25M_PP), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MED25M_PP_med_mov_munic = dplyr::if_else(EO_MED25M_PP <= (k * zoo::rollmedian(EO_MED25M_PP, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MED25M_PP_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MED25M_PP), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MED25M_PP}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MED25M_PP |> 
  dplyr::select(!EO_MED25M_PP) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MED25M_PP}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MED25M_PP}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_DOCSUPEI

```{r rules_dist_EO_DOCSUPEI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DOCSUPEI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DOCSUPEI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DOCSUPEI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DOCSUPEI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DOCSUPEI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DOCSUPEI), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEI_out_munic     = dplyr::if_else(!outlier_function(EO_DOCSUPEI), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEI_min_munic     = dplyr::if_else(EO_DOCSUPEI >= (min(dplyr::lag(EO_DOCSUPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEI_max_munic     = dplyr::if_else(EO_DOCSUPEI <= (max(dplyr::lag(EO_DOCSUPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEI_min_k_munic   = dplyr::if_else(EO_DOCSUPEI >= (min(dplyr::lag(EO_DOCSUPEI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEI_max_k_munic   = dplyr::if_else(EO_DOCSUPEI <= (k * max(dplyr::lag(EO_DOCSUPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEI_med_mov_munic = dplyr::if_else(EO_DOCSUPEI <= (k * zoo::rollmedian(EO_DOCSUPEI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DOCSUPEI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DOCSUPEI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DOCSUPEI |> 
  dplyr::select(!EO_DOCSUPEI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DOCSUPEI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DOCSUPEI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_DOCSUPEF

```{r rules_dist_EO_DOCSUPEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DOCSUPEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DOCSUPEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DOCSUPEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DOCSUPEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DOCSUPEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DOCSUPEF), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEF_out_munic     = dplyr::if_else(!outlier_function(EO_DOCSUPEF), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEF_min_munic     = dplyr::if_else(EO_DOCSUPEF >= (min(dplyr::lag(EO_DOCSUPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEF_max_munic     = dplyr::if_else(EO_DOCSUPEF <= (max(dplyr::lag(EO_DOCSUPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEF_min_k_munic   = dplyr::if_else(EO_DOCSUPEF >= (min(dplyr::lag(EO_DOCSUPEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEF_max_k_munic   = dplyr::if_else(EO_DOCSUPEF <= (k * max(dplyr::lag(EO_DOCSUPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEF_med_mov_munic = dplyr::if_else(EO_DOCSUPEF <= (k * zoo::rollmedian(EO_DOCSUPEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DOCSUPEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DOCSUPEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DOCSUPEF |> 
  dplyr::select(!EO_DOCSUPEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DOCSUPEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DOCSUPEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```









































### EO_DOCSUPEFAF

```{r rules_dist_EO_DOCSUPEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DOCSUPEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DOCSUPEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DOCSUPEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DOCSUPEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DOCSUPEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DOCSUPEFAF), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_DOCSUPEFAF), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEFAF_min_munic     = dplyr::if_else(EO_DOCSUPEFAF >= (min(dplyr::lag(EO_DOCSUPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAF_max_munic     = dplyr::if_else(EO_DOCSUPEFAF <= (max(dplyr::lag(EO_DOCSUPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAF_min_k_munic   = dplyr::if_else(EO_DOCSUPEFAF >= (min(dplyr::lag(EO_DOCSUPEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAF_max_k_munic   = dplyr::if_else(EO_DOCSUPEFAF <= (k * max(dplyr::lag(EO_DOCSUPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAF_med_mov_munic = dplyr::if_else(EO_DOCSUPEFAF <= (k * zoo::rollmedian(EO_DOCSUPEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DOCSUPEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DOCSUPEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DOCSUPEFAF |> 
  dplyr::select(!EO_DOCSUPEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DOCSUPEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DOCSUPEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```







































### EO_DOCSUPEFAI

```{r rules_dist_EO_DOCSUPEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DOCSUPEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DOCSUPEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DOCSUPEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DOCSUPEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DOCSUPEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DOCSUPEFAI), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_DOCSUPEFAI), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEFAI_min_munic     = dplyr::if_else(EO_DOCSUPEFAI >= (min(dplyr::lag(EO_DOCSUPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAI_max_munic     = dplyr::if_else(EO_DOCSUPEFAI <= (max(dplyr::lag(EO_DOCSUPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAI_min_k_munic   = dplyr::if_else(EO_DOCSUPEFAI >= (min(dplyr::lag(EO_DOCSUPEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAI_max_k_munic   = dplyr::if_else(EO_DOCSUPEFAI <= (k * max(dplyr::lag(EO_DOCSUPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAI_med_mov_munic = dplyr::if_else(EO_DOCSUPEFAI <= (k * zoo::rollmedian(EO_DOCSUPEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DOCSUPEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DOCSUPEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DOCSUPEFAI |> 
  dplyr::select(!EO_DOCSUPEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DOCSUPEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DOCSUPEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```








































### EO_DOCSUPEM

```{r rules_dist_EO_DOCSUPEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_DOCSUPEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_DOCSUPEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_DOCSUPEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_DOCSUPEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_DOCSUPEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_DOCSUPEM), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEM_out_munic     = dplyr::if_else(!outlier_function(EO_DOCSUPEM), F, T), # Longitudinal (município)
    
    DF_EO_DOCSUPEM_min_munic     = dplyr::if_else(EO_DOCSUPEM >= (min(dplyr::lag(EO_DOCSUPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEM_max_munic     = dplyr::if_else(EO_DOCSUPEM <= (max(dplyr::lag(EO_DOCSUPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEM_min_k_munic   = dplyr::if_else(EO_DOCSUPEM >= (min(dplyr::lag(EO_DOCSUPEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEM_max_k_munic   = dplyr::if_else(EO_DOCSUPEM <= (k * max(dplyr::lag(EO_DOCSUPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEM_med_mov_munic = dplyr::if_else(EO_DOCSUPEM <= (k * zoo::rollmedian(EO_DOCSUPEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_DOCSUPEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_DOCSUPEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_DOCSUPEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_DOCSUPEM |> 
  dplyr::select(!EO_DOCSUPEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_DOCSUPEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_DOCSUPEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```









































### EO_ADEDG1EI

```{r rules_dist_EO_ADEDG1EI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EI_min_munic     = dplyr::if_else(EO_ADEDG1EI >= (min(dplyr::lag(EO_ADEDG1EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EI_max_munic     = dplyr::if_else(EO_ADEDG1EI <= (max(dplyr::lag(EO_ADEDG1EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EI_min_k_munic   = dplyr::if_else(EO_ADEDG1EI >= (min(dplyr::lag(EO_ADEDG1EI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EI_max_k_munic   = dplyr::if_else(EO_ADEDG1EI <= (k * max(dplyr::lag(EO_ADEDG1EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EI_med_mov_munic = dplyr::if_else(EO_ADEDG1EI <= (k * zoo::rollmedian(EO_ADEDG1EI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EI |> 
  dplyr::select(!EO_ADEDG1EI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```









































### EO_ADEDG2EI

```{r rules_dist_EO_ADEDG2EI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EI_min_munic     = dplyr::if_else(EO_ADEDG2EI >= (min(dplyr::lag(EO_ADEDG2EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EI_max_munic     = dplyr::if_else(EO_ADEDG2EI <= (max(dplyr::lag(EO_ADEDG2EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EI_min_k_munic   = dplyr::if_else(EO_ADEDG2EI >= (min(dplyr::lag(EO_ADEDG2EI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EI_max_k_munic   = dplyr::if_else(EO_ADEDG2EI <= (k * max(dplyr::lag(EO_ADEDG2EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EI_med_mov_munic = dplyr::if_else(EO_ADEDG2EI <= (k * zoo::rollmedian(EO_ADEDG2EI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EI |> 
  dplyr::select(!EO_ADEDG2EI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```








































### EO_ADEDG3EI

```{r rules_dist_EO_ADEDG3EI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EI_min_munic     = dplyr::if_else(EO_ADEDG3EI >= (min(dplyr::lag(EO_ADEDG3EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EI_max_munic     = dplyr::if_else(EO_ADEDG3EI <= (max(dplyr::lag(EO_ADEDG3EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EI_min_k_munic   = dplyr::if_else(EO_ADEDG3EI >= (min(dplyr::lag(EO_ADEDG3EI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EI_max_k_munic   = dplyr::if_else(EO_ADEDG3EI <= (k * max(dplyr::lag(EO_ADEDG3EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EI_med_mov_munic = dplyr::if_else(EO_ADEDG3EI <= (k * zoo::rollmedian(EO_ADEDG3EI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EI |> 
  dplyr::select(!EO_ADEDG3EI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```








































### EO_ADEDG4EI

```{r rules_dist_EO_ADEDG4EI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EI_min_munic     = dplyr::if_else(EO_ADEDG4EI >= (min(dplyr::lag(EO_ADEDG4EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EI_max_munic     = dplyr::if_else(EO_ADEDG4EI <= (max(dplyr::lag(EO_ADEDG4EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EI_min_k_munic   = dplyr::if_else(EO_ADEDG4EI >= (min(dplyr::lag(EO_ADEDG4EI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EI_max_k_munic   = dplyr::if_else(EO_ADEDG4EI <= (k * max(dplyr::lag(EO_ADEDG4EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EI_med_mov_munic = dplyr::if_else(EO_ADEDG4EI <= (k * zoo::rollmedian(EO_ADEDG4EI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EI |> 
  dplyr::select(!EO_ADEDG4EI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```







































### EO_ADEDG5EI

```{r rules_dist_EO_ADEDG5EI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EI_min_munic     = dplyr::if_else(EO_ADEDG5EI >= (min(dplyr::lag(EO_ADEDG5EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EI_max_munic     = dplyr::if_else(EO_ADEDG5EI <= (max(dplyr::lag(EO_ADEDG5EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EI_min_k_munic   = dplyr::if_else(EO_ADEDG5EI >= (min(dplyr::lag(EO_ADEDG5EI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EI_max_k_munic   = dplyr::if_else(EO_ADEDG5EI <= (k * max(dplyr::lag(EO_ADEDG5EI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EI_med_mov_munic = dplyr::if_else(EO_ADEDG5EI <= (k * zoo::rollmedian(EO_ADEDG5EI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EI |> 
  dplyr::select(!EO_ADEDG5EI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```







































### EO_ADEDG1EF

```{r rules_dist_EO_ADEDG1EF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EF_min_munic     = dplyr::if_else(EO_ADEDG1EF >= (min(dplyr::lag(EO_ADEDG1EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EF_max_munic     = dplyr::if_else(EO_ADEDG1EF <= (max(dplyr::lag(EO_ADEDG1EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EF_min_k_munic   = dplyr::if_else(EO_ADEDG1EF >= (min(dplyr::lag(EO_ADEDG1EF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EF_max_k_munic   = dplyr::if_else(EO_ADEDG1EF <= (k * max(dplyr::lag(EO_ADEDG1EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EF_med_mov_munic = dplyr::if_else(EO_ADEDG1EF <= (k * zoo::rollmedian(EO_ADEDG1EF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EF |> 
  dplyr::select(!EO_ADEDG1EF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```









































### EO_ADEDG2EF

```{r rules_dist_EO_ADEDG2EF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EF_min_munic     = dplyr::if_else(EO_ADEDG2EF >= (min(dplyr::lag(EO_ADEDG2EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EF_max_munic     = dplyr::if_else(EO_ADEDG2EF <= (max(dplyr::lag(EO_ADEDG2EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EF_min_k_munic   = dplyr::if_else(EO_ADEDG2EF >= (min(dplyr::lag(EO_ADEDG2EF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EF_max_k_munic   = dplyr::if_else(EO_ADEDG2EF <= (k * max(dplyr::lag(EO_ADEDG2EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EF_med_mov_munic = dplyr::if_else(EO_ADEDG2EF <= (k * zoo::rollmedian(EO_ADEDG2EF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EF |> 
  dplyr::select(!EO_ADEDG2EF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG3EF

```{r rules_dist_EO_ADEDG3EF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EF_min_munic     = dplyr::if_else(EO_ADEDG3EF >= (min(dplyr::lag(EO_ADEDG3EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EF_max_munic     = dplyr::if_else(EO_ADEDG3EF <= (max(dplyr::lag(EO_ADEDG3EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EF_min_k_munic   = dplyr::if_else(EO_ADEDG3EF >= (min(dplyr::lag(EO_ADEDG3EF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EF_max_k_munic   = dplyr::if_else(EO_ADEDG3EF <= (k * max(dplyr::lag(EO_ADEDG3EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EF_med_mov_munic = dplyr::if_else(EO_ADEDG3EF <= (k * zoo::rollmedian(EO_ADEDG3EF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EF |> 
  dplyr::select(!EO_ADEDG3EF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG4EF

```{r rules_dist_EO_ADEDG4EF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EF_min_munic     = dplyr::if_else(EO_ADEDG4EF >= (min(dplyr::lag(EO_ADEDG4EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EF_max_munic     = dplyr::if_else(EO_ADEDG4EF <= (max(dplyr::lag(EO_ADEDG4EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EF_min_k_munic   = dplyr::if_else(EO_ADEDG4EF >= (min(dplyr::lag(EO_ADEDG4EF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EF_max_k_munic   = dplyr::if_else(EO_ADEDG4EF <= (k * max(dplyr::lag(EO_ADEDG4EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EF_med_mov_munic = dplyr::if_else(EO_ADEDG4EF <= (k * zoo::rollmedian(EO_ADEDG4EF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EF |> 
  dplyr::select(!EO_ADEDG4EF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG5EF

```{r rules_dist_EO_ADEDG5EF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EF_min_munic     = dplyr::if_else(EO_ADEDG5EF >= (min(dplyr::lag(EO_ADEDG5EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EF_max_munic     = dplyr::if_else(EO_ADEDG5EF <= (max(dplyr::lag(EO_ADEDG5EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EF_min_k_munic   = dplyr::if_else(EO_ADEDG5EF >= (min(dplyr::lag(EO_ADEDG5EF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EF_max_k_munic   = dplyr::if_else(EO_ADEDG5EF <= (k * max(dplyr::lag(EO_ADEDG5EF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EF_med_mov_munic = dplyr::if_else(EO_ADEDG5EF <= (k * zoo::rollmedian(EO_ADEDG5EF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EF |> 
  dplyr::select(!EO_ADEDG5EF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG1EFAI

```{r rules_dist_EO_ADEDG1EFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EFAI_min_munic     = dplyr::if_else(EO_ADEDG1EFAI >= (min(dplyr::lag(EO_ADEDG1EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAI_max_munic     = dplyr::if_else(EO_ADEDG1EFAI <= (max(dplyr::lag(EO_ADEDG1EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAI_min_k_munic   = dplyr::if_else(EO_ADEDG1EFAI >= (min(dplyr::lag(EO_ADEDG1EFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAI_max_k_munic   = dplyr::if_else(EO_ADEDG1EFAI <= (k * max(dplyr::lag(EO_ADEDG1EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAI_med_mov_munic = dplyr::if_else(EO_ADEDG1EFAI <= (k * zoo::rollmedian(EO_ADEDG1EFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EFAI |> 
  dplyr::select(!EO_ADEDG1EFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```











































### EO_ADEDG2EFAI

```{r rules_dist_EO_ADEDG2EFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EFAI_min_munic     = dplyr::if_else(EO_ADEDG2EFAI >= (min(dplyr::lag(EO_ADEDG2EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAI_max_munic     = dplyr::if_else(EO_ADEDG2EFAI <= (max(dplyr::lag(EO_ADEDG2EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAI_min_k_munic   = dplyr::if_else(EO_ADEDG2EFAI >= (min(dplyr::lag(EO_ADEDG2EFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAI_max_k_munic   = dplyr::if_else(EO_ADEDG2EFAI <= (k * max(dplyr::lag(EO_ADEDG2EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAI_med_mov_munic = dplyr::if_else(EO_ADEDG2EFAI <= (k * zoo::rollmedian(EO_ADEDG2EFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EFAI |> 
  dplyr::select(!EO_ADEDG2EFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```











































### EO_ADEDG3EFAI

```{r rules_dist_EO_ADEDG3EFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EFAI_min_munic     = dplyr::if_else(EO_ADEDG3EFAI >= (min(dplyr::lag(EO_ADEDG3EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAI_max_munic     = dplyr::if_else(EO_ADEDG3EFAI <= (max(dplyr::lag(EO_ADEDG3EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAI_min_k_munic   = dplyr::if_else(EO_ADEDG3EFAI >= (min(dplyr::lag(EO_ADEDG3EFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAI_max_k_munic   = dplyr::if_else(EO_ADEDG3EFAI <= (k * max(dplyr::lag(EO_ADEDG3EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAI_med_mov_munic = dplyr::if_else(EO_ADEDG3EFAI <= (k * zoo::rollmedian(EO_ADEDG3EFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EFAI |> 
  dplyr::select(!EO_ADEDG3EFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG4EFAI

```{r rules_dist_EO_ADEDG4EFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EFAI_min_munic     = dplyr::if_else(EO_ADEDG4EFAI >= (min(dplyr::lag(EO_ADEDG4EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAI_max_munic     = dplyr::if_else(EO_ADEDG4EFAI <= (max(dplyr::lag(EO_ADEDG4EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAI_min_k_munic   = dplyr::if_else(EO_ADEDG4EFAI >= (min(dplyr::lag(EO_ADEDG4EFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAI_max_k_munic   = dplyr::if_else(EO_ADEDG4EFAI <= (k * max(dplyr::lag(EO_ADEDG4EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAI_med_mov_munic = dplyr::if_else(EO_ADEDG4EFAI <= (k * zoo::rollmedian(EO_ADEDG4EFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EFAI |> 
  dplyr::select(!EO_ADEDG4EFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG5EFAI

```{r rules_dist_EO_ADEDG5EFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EFAI_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EFAI), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EFAI_min_munic     = dplyr::if_else(EO_ADEDG5EFAI >= (min(dplyr::lag(EO_ADEDG5EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAI_max_munic     = dplyr::if_else(EO_ADEDG5EFAI <= (max(dplyr::lag(EO_ADEDG5EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAI_min_k_munic   = dplyr::if_else(EO_ADEDG5EFAI >= (min(dplyr::lag(EO_ADEDG5EFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAI_max_k_munic   = dplyr::if_else(EO_ADEDG5EFAI <= (k * max(dplyr::lag(EO_ADEDG5EFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAI_med_mov_munic = dplyr::if_else(EO_ADEDG5EFAI <= (k * zoo::rollmedian(EO_ADEDG5EFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EFAI |> 
  dplyr::select(!EO_ADEDG5EFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG1EFAF

```{r rules_dist_EO_ADEDG1EFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EFAF_min_munic     = dplyr::if_else(EO_ADEDG1EFAF >= (min(dplyr::lag(EO_ADEDG1EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAF_max_munic     = dplyr::if_else(EO_ADEDG1EFAF <= (max(dplyr::lag(EO_ADEDG1EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAF_min_k_munic   = dplyr::if_else(EO_ADEDG1EFAF >= (min(dplyr::lag(EO_ADEDG1EFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAF_max_k_munic   = dplyr::if_else(EO_ADEDG1EFAF <= (k * max(dplyr::lag(EO_ADEDG1EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAF_med_mov_munic = dplyr::if_else(EO_ADEDG1EFAF <= (k * zoo::rollmedian(EO_ADEDG1EFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EFAF |> 
  dplyr::select(!EO_ADEDG1EFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```











































### EO_ADEDG2EFAF

```{r rules_dist_EO_ADEDG2EFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EFAF_min_munic     = dplyr::if_else(EO_ADEDG2EFAF >= (min(dplyr::lag(EO_ADEDG2EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAF_max_munic     = dplyr::if_else(EO_ADEDG2EFAF <= (max(dplyr::lag(EO_ADEDG2EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAF_min_k_munic   = dplyr::if_else(EO_ADEDG2EFAF >= (min(dplyr::lag(EO_ADEDG2EFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAF_max_k_munic   = dplyr::if_else(EO_ADEDG2EFAF <= (k * max(dplyr::lag(EO_ADEDG2EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAF_med_mov_munic = dplyr::if_else(EO_ADEDG2EFAF <= (k * zoo::rollmedian(EO_ADEDG2EFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EFAF |> 
  dplyr::select(!EO_ADEDG2EFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```










































### EO_ADEDG3EFAF

```{r rules_dist_EO_ADEDG3EFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EFAF_min_munic     = dplyr::if_else(EO_ADEDG3EFAF >= (min(dplyr::lag(EO_ADEDG3EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAF_max_munic     = dplyr::if_else(EO_ADEDG3EFAF <= (max(dplyr::lag(EO_ADEDG3EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAF_min_k_munic   = dplyr::if_else(EO_ADEDG3EFAF >= (min(dplyr::lag(EO_ADEDG3EFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAF_max_k_munic   = dplyr::if_else(EO_ADEDG3EFAF <= (k * max(dplyr::lag(EO_ADEDG3EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAF_med_mov_munic = dplyr::if_else(EO_ADEDG3EFAF <= (k * zoo::rollmedian(EO_ADEDG3EFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EFAF |> 
  dplyr::select(!EO_ADEDG3EFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```














































### EO_ADEDG4EFAF

```{r rules_dist_EO_ADEDG4EFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EFAF_min_munic     = dplyr::if_else(EO_ADEDG4EFAF >= (min(dplyr::lag(EO_ADEDG4EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAF_max_munic     = dplyr::if_else(EO_ADEDG4EFAF <= (max(dplyr::lag(EO_ADEDG4EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAF_min_k_munic   = dplyr::if_else(EO_ADEDG4EFAF >= (min(dplyr::lag(EO_ADEDG4EFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAF_max_k_munic   = dplyr::if_else(EO_ADEDG4EFAF <= (k * max(dplyr::lag(EO_ADEDG4EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAF_med_mov_munic = dplyr::if_else(EO_ADEDG4EFAF <= (k * zoo::rollmedian(EO_ADEDG4EFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EFAF |> 
  dplyr::select(!EO_ADEDG4EFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```















































### EO_ADEDG5EFAF

```{r rules_dist_EO_ADEDG5EFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EFAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EFAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EFAF_min_munic     = dplyr::if_else(EO_ADEDG5EFAF >= (min(dplyr::lag(EO_ADEDG5EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAF_max_munic     = dplyr::if_else(EO_ADEDG5EFAF <= (max(dplyr::lag(EO_ADEDG5EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAF_min_k_munic   = dplyr::if_else(EO_ADEDG5EFAF >= (min(dplyr::lag(EO_ADEDG5EFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAF_max_k_munic   = dplyr::if_else(EO_ADEDG5EFAF <= (k * max(dplyr::lag(EO_ADEDG5EFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAF_med_mov_munic = dplyr::if_else(EO_ADEDG5EFAF <= (k * zoo::rollmedian(EO_ADEDG5EFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EFAF |> 
  dplyr::select(!EO_ADEDG5EFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

















































### EO_ADEDG1EM

```{r rules_dist_EO_ADEDG1EM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EM_min_munic     = dplyr::if_else(EO_ADEDG1EM >= (min(dplyr::lag(EO_ADEDG1EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EM_max_munic     = dplyr::if_else(EO_ADEDG1EM <= (max(dplyr::lag(EO_ADEDG1EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EM_min_k_munic   = dplyr::if_else(EO_ADEDG1EM >= (min(dplyr::lag(EO_ADEDG1EM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EM_max_k_munic   = dplyr::if_else(EO_ADEDG1EM <= (k * max(dplyr::lag(EO_ADEDG1EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EM_med_mov_munic = dplyr::if_else(EO_ADEDG1EM <= (k * zoo::rollmedian(EO_ADEDG1EM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EM |> 
  dplyr::select(!EO_ADEDG1EM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG2EM

```{r rules_dist_EO_ADEDG2EM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EM_min_munic     = dplyr::if_else(EO_ADEDG2EM >= (min(dplyr::lag(EO_ADEDG2EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EM_max_munic     = dplyr::if_else(EO_ADEDG2EM <= (max(dplyr::lag(EO_ADEDG2EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EM_min_k_munic   = dplyr::if_else(EO_ADEDG2EM >= (min(dplyr::lag(EO_ADEDG2EM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EM_max_k_munic   = dplyr::if_else(EO_ADEDG2EM <= (k * max(dplyr::lag(EO_ADEDG2EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EM_med_mov_munic = dplyr::if_else(EO_ADEDG2EM <= (k * zoo::rollmedian(EO_ADEDG2EM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EM |> 
  dplyr::select(!EO_ADEDG2EM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

















































### EO_ADEDG3EM

```{r rules_dist_EO_ADEDG3EM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EM_min_munic     = dplyr::if_else(EO_ADEDG3EM >= (min(dplyr::lag(EO_ADEDG3EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EM_max_munic     = dplyr::if_else(EO_ADEDG3EM <= (max(dplyr::lag(EO_ADEDG3EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EM_min_k_munic   = dplyr::if_else(EO_ADEDG3EM >= (min(dplyr::lag(EO_ADEDG3EM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EM_max_k_munic   = dplyr::if_else(EO_ADEDG3EM <= (k * max(dplyr::lag(EO_ADEDG3EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EM_med_mov_munic = dplyr::if_else(EO_ADEDG3EM <= (k * zoo::rollmedian(EO_ADEDG3EM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EM |> 
  dplyr::select(!EO_ADEDG3EM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG4EM

```{r rules_dist_EO_ADEDG4EM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EM_min_munic     = dplyr::if_else(EO_ADEDG4EM >= (min(dplyr::lag(EO_ADEDG4EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EM_max_munic     = dplyr::if_else(EO_ADEDG4EM <= (max(dplyr::lag(EO_ADEDG4EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EM_min_k_munic   = dplyr::if_else(EO_ADEDG4EM >= (min(dplyr::lag(EO_ADEDG4EM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EM_max_k_munic   = dplyr::if_else(EO_ADEDG4EM <= (k * max(dplyr::lag(EO_ADEDG4EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EM_med_mov_munic = dplyr::if_else(EO_ADEDG4EM <= (k * zoo::rollmedian(EO_ADEDG4EM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EM |> 
  dplyr::select(!EO_ADEDG4EM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG5EM

```{r rules_dist_EO_ADEDG5EM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EM_min_munic     = dplyr::if_else(EO_ADEDG5EM >= (min(dplyr::lag(EO_ADEDG5EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EM_max_munic     = dplyr::if_else(EO_ADEDG5EM <= (max(dplyr::lag(EO_ADEDG5EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EM_min_k_munic   = dplyr::if_else(EO_ADEDG5EM >= (min(dplyr::lag(EO_ADEDG5EM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EM_max_k_munic   = dplyr::if_else(EO_ADEDG5EM <= (k * max(dplyr::lag(EO_ADEDG5EM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EM_med_mov_munic = dplyr::if_else(EO_ADEDG5EM <= (k * zoo::rollmedian(EO_ADEDG5EM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EM |> 
  dplyr::select(!EO_ADEDG5EM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```















































### EO_ADEDG1EJAF

```{r rules_dist_EO_ADEDG1EJAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EJAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EJAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EJAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EJAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EJAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EJAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EJAF_min_munic     = dplyr::if_else(EO_ADEDG1EJAF >= (min(dplyr::lag(EO_ADEDG1EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAF_max_munic     = dplyr::if_else(EO_ADEDG1EJAF <= (max(dplyr::lag(EO_ADEDG1EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAF_min_k_munic   = dplyr::if_else(EO_ADEDG1EJAF >= (min(dplyr::lag(EO_ADEDG1EJAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAF_max_k_munic   = dplyr::if_else(EO_ADEDG1EJAF <= (k * max(dplyr::lag(EO_ADEDG1EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAF_med_mov_munic = dplyr::if_else(EO_ADEDG1EJAF <= (k * zoo::rollmedian(EO_ADEDG1EJAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EJAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EJAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EJAF |> 
  dplyr::select(!EO_ADEDG1EJAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EJAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EJAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG2EJAF

```{r rules_dist_EO_ADEDG2EJAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EJAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EJAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EJAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EJAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EJAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EJAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EJAF_min_munic     = dplyr::if_else(EO_ADEDG2EJAF >= (min(dplyr::lag(EO_ADEDG2EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAF_max_munic     = dplyr::if_else(EO_ADEDG2EJAF <= (max(dplyr::lag(EO_ADEDG2EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAF_min_k_munic   = dplyr::if_else(EO_ADEDG2EJAF >= (min(dplyr::lag(EO_ADEDG2EJAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAF_max_k_munic   = dplyr::if_else(EO_ADEDG2EJAF <= (k * max(dplyr::lag(EO_ADEDG2EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAF_med_mov_munic = dplyr::if_else(EO_ADEDG2EJAF <= (k * zoo::rollmedian(EO_ADEDG2EJAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EJAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EJAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EJAF |> 
  dplyr::select(!EO_ADEDG2EJAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EJAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EJAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG3EJAF

```{r rules_dist_EO_ADEDG3EJAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EJAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EJAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EJAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EJAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EJAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EJAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EJAF_min_munic     = dplyr::if_else(EO_ADEDG3EJAF >= (min(dplyr::lag(EO_ADEDG3EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAF_max_munic     = dplyr::if_else(EO_ADEDG3EJAF <= (max(dplyr::lag(EO_ADEDG3EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAF_min_k_munic   = dplyr::if_else(EO_ADEDG3EJAF >= (min(dplyr::lag(EO_ADEDG3EJAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAF_max_k_munic   = dplyr::if_else(EO_ADEDG3EJAF <= (k * max(dplyr::lag(EO_ADEDG3EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAF_med_mov_munic = dplyr::if_else(EO_ADEDG3EJAF <= (k * zoo::rollmedian(EO_ADEDG3EJAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EJAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EJAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EJAF |> 
  dplyr::select(!EO_ADEDG3EJAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EJAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EJAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG4EJAF

```{r rules_dist_EO_ADEDG4EJAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EJAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EJAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EJAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EJAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EJAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EJAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EJAF_min_munic     = dplyr::if_else(EO_ADEDG4EJAF >= (min(dplyr::lag(EO_ADEDG4EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAF_max_munic     = dplyr::if_else(EO_ADEDG4EJAF <= (max(dplyr::lag(EO_ADEDG4EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAF_min_k_munic   = dplyr::if_else(EO_ADEDG4EJAF >= (min(dplyr::lag(EO_ADEDG4EJAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAF_max_k_munic   = dplyr::if_else(EO_ADEDG4EJAF <= (k * max(dplyr::lag(EO_ADEDG4EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAF_med_mov_munic = dplyr::if_else(EO_ADEDG4EJAF <= (k * zoo::rollmedian(EO_ADEDG4EJAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EJAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EJAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EJAF |> 
  dplyr::select(!EO_ADEDG4EJAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EJAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EJAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```















































### EO_ADEDG5EJAF

```{r rules_dist_EO_ADEDG5EJAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EJAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EJAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EJAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EJAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EJAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EJAF_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EJAF), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EJAF_min_munic     = dplyr::if_else(EO_ADEDG5EJAF >= (min(dplyr::lag(EO_ADEDG5EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAF_max_munic     = dplyr::if_else(EO_ADEDG5EJAF <= (max(dplyr::lag(EO_ADEDG5EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAF_min_k_munic   = dplyr::if_else(EO_ADEDG5EJAF >= (min(dplyr::lag(EO_ADEDG5EJAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAF_max_k_munic   = dplyr::if_else(EO_ADEDG5EJAF <= (k * max(dplyr::lag(EO_ADEDG5EJAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAF_med_mov_munic = dplyr::if_else(EO_ADEDG5EJAF <= (k * zoo::rollmedian(EO_ADEDG5EJAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EJAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EJAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EJAF |> 
  dplyr::select(!EO_ADEDG5EJAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EJAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EJAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

















































### EO_ADEDG1EJAM

```{r rules_dist_EO_ADEDG1EJAM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG1EJAM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG1EJAM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG1EJAM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG1EJAM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG1EJAM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG1EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EJAM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG1EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG1EJAM_min_munic     = dplyr::if_else(EO_ADEDG1EJAM >= (min(dplyr::lag(EO_ADEDG1EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAM_max_munic     = dplyr::if_else(EO_ADEDG1EJAM <= (max(dplyr::lag(EO_ADEDG1EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAM_min_k_munic   = dplyr::if_else(EO_ADEDG1EJAM >= (min(dplyr::lag(EO_ADEDG1EJAM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAM_max_k_munic   = dplyr::if_else(EO_ADEDG1EJAM <= (k * max(dplyr::lag(EO_ADEDG1EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAM_med_mov_munic = dplyr::if_else(EO_ADEDG1EJAM <= (k * zoo::rollmedian(EO_ADEDG1EJAM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG1EJAM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG1EJAM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG1EJAM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG1EJAM |> 
  dplyr::select(!EO_ADEDG1EJAM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG1EJAM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG1EJAM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG2EJAM

```{r rules_dist_EO_ADEDG2EJAM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG2EJAM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG2EJAM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG2EJAM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG2EJAM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG2EJAM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG2EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EJAM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG2EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG2EJAM_min_munic     = dplyr::if_else(EO_ADEDG2EJAM >= (min(dplyr::lag(EO_ADEDG2EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAM_max_munic     = dplyr::if_else(EO_ADEDG2EJAM <= (max(dplyr::lag(EO_ADEDG2EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAM_min_k_munic   = dplyr::if_else(EO_ADEDG2EJAM >= (min(dplyr::lag(EO_ADEDG2EJAM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAM_max_k_munic   = dplyr::if_else(EO_ADEDG2EJAM <= (k * max(dplyr::lag(EO_ADEDG2EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAM_med_mov_munic = dplyr::if_else(EO_ADEDG2EJAM <= (k * zoo::rollmedian(EO_ADEDG2EJAM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG2EJAM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG2EJAM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG2EJAM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG2EJAM |> 
  dplyr::select(!EO_ADEDG2EJAM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG2EJAM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG2EJAM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

















































### EO_ADEDG3EJAM

```{r rules_dist_EO_ADEDG3EJAM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG3EJAM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG3EJAM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG3EJAM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG3EJAM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG3EJAM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG3EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EJAM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG3EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG3EJAM_min_munic     = dplyr::if_else(EO_ADEDG3EJAM >= (min(dplyr::lag(EO_ADEDG3EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAM_max_munic     = dplyr::if_else(EO_ADEDG3EJAM <= (max(dplyr::lag(EO_ADEDG3EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAM_min_k_munic   = dplyr::if_else(EO_ADEDG3EJAM >= (min(dplyr::lag(EO_ADEDG3EJAM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAM_max_k_munic   = dplyr::if_else(EO_ADEDG3EJAM <= (k * max(dplyr::lag(EO_ADEDG3EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAM_med_mov_munic = dplyr::if_else(EO_ADEDG3EJAM <= (k * zoo::rollmedian(EO_ADEDG3EJAM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG3EJAM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG3EJAM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG3EJAM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG3EJAM |> 
  dplyr::select(!EO_ADEDG3EJAM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG3EJAM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG3EJAM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG4EJAM

```{r rules_dist_EO_ADEDG4EJAM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG4EJAM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG4EJAM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG4EJAM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG4EJAM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG4EJAM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG4EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EJAM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG4EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG4EJAM_min_munic     = dplyr::if_else(EO_ADEDG4EJAM >= (min(dplyr::lag(EO_ADEDG4EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAM_max_munic     = dplyr::if_else(EO_ADEDG4EJAM <= (max(dplyr::lag(EO_ADEDG4EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAM_min_k_munic   = dplyr::if_else(EO_ADEDG4EJAM >= (min(dplyr::lag(EO_ADEDG4EJAM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAM_max_k_munic   = dplyr::if_else(EO_ADEDG4EJAM <= (k * max(dplyr::lag(EO_ADEDG4EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAM_med_mov_munic = dplyr::if_else(EO_ADEDG4EJAM <= (k * zoo::rollmedian(EO_ADEDG4EJAM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG4EJAM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG4EJAM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG4EJAM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG4EJAM |> 
  dplyr::select(!EO_ADEDG4EJAM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG4EJAM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG4EJAM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_ADEDG5EJAM

```{r rules_dist_EO_ADEDG5EJAM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_ADEDG5EJAM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_ADEDG5EJAM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_ADEDG5EJAM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_ADEDG5EJAM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_ADEDG5EJAM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_ADEDG5EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EJAM_out_munic     = dplyr::if_else(!outlier_function(EO_ADEDG5EJAM), F, T), # Longitudinal (município)
    
    DF_EO_ADEDG5EJAM_min_munic     = dplyr::if_else(EO_ADEDG5EJAM >= (min(dplyr::lag(EO_ADEDG5EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAM_max_munic     = dplyr::if_else(EO_ADEDG5EJAM <= (max(dplyr::lag(EO_ADEDG5EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAM_min_k_munic   = dplyr::if_else(EO_ADEDG5EJAM >= (min(dplyr::lag(EO_ADEDG5EJAM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAM_max_k_munic   = dplyr::if_else(EO_ADEDG5EJAM <= (k * max(dplyr::lag(EO_ADEDG5EJAM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAM_med_mov_munic = dplyr::if_else(EO_ADEDG5EJAM <= (k * zoo::rollmedian(EO_ADEDG5EJAM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_ADEDG5EJAM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_ADEDG5EJAM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_ADEDG5EJAM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_ADEDG5EJAM |> 
  dplyr::select(!EO_ADEDG5EJAM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_ADEDG5EJAM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_ADEDG5EJAM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```
















































### EO_MATFEI

```{r rules_dist_EO_MATFEI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATFEI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATFEI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATFEI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATFEI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATFEI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATFEI), F, T), # Longitudinal (município)
    
    DF_EO_MATFEI_out_munic     = dplyr::if_else(!outlier_function(EO_MATFEI), F, T), # Longitudinal (município)
    
    DF_EO_MATFEI_min_munic     = dplyr::if_else(EO_MATFEI >= (min(dplyr::lag(EO_MATFEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEI_max_munic     = dplyr::if_else(EO_MATFEI <= (max(dplyr::lag(EO_MATFEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEI_min_k_munic   = dplyr::if_else(EO_MATFEI >= (min(dplyr::lag(EO_MATFEI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATFEI_max_k_munic   = dplyr::if_else(EO_MATFEI <= (k * max(dplyr::lag(EO_MATFEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEI_med_mov_munic = dplyr::if_else(EO_MATFEI <= (k * zoo::rollmedian(EO_MATFEI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATFEI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATFEI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATFEI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATFEI |> 
  dplyr::select(!EO_MATFEI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATFEI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATFEI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATEEI

```{r rules_dist_EO_MATEEI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATEEI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATEEI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATEEI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATEEI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATEEI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATEEI), F, T), # Longitudinal (município)
    
    DF_EO_MATEEI_out_munic     = dplyr::if_else(!outlier_function(EO_MATEEI), F, T), # Longitudinal (município)
    
    DF_EO_MATEEI_min_munic     = dplyr::if_else(EO_MATEEI >= (min(dplyr::lag(EO_MATEEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEI_max_munic     = dplyr::if_else(EO_MATEEI <= (max(dplyr::lag(EO_MATEEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEI_min_k_munic   = dplyr::if_else(EO_MATEEI >= (min(dplyr::lag(EO_MATEEI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATEEI_max_k_munic   = dplyr::if_else(EO_MATEEI <= (k * max(dplyr::lag(EO_MATEEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEI_med_mov_munic = dplyr::if_else(EO_MATEEI <= (k * zoo::rollmedian(EO_MATEEI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATEEI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATEEI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATEEI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATEEI |> 
  dplyr::select(!EO_MATEEI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATEEI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATEEI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```




















































### EO_MATMEI

```{r rules_dist_EO_MATMEI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATMEI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATMEI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATMEI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATMEI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATMEI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATMEI), F, T), # Longitudinal (município)
    
    DF_EO_MATMEI_out_munic     = dplyr::if_else(!outlier_function(EO_MATMEI), F, T), # Longitudinal (município)
    
    DF_EO_MATMEI_min_munic     = dplyr::if_else(EO_MATMEI >= (min(dplyr::lag(EO_MATMEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEI_max_munic     = dplyr::if_else(EO_MATMEI <= (max(dplyr::lag(EO_MATMEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEI_min_k_munic   = dplyr::if_else(EO_MATMEI >= (min(dplyr::lag(EO_MATMEI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATMEI_max_k_munic   = dplyr::if_else(EO_MATMEI <= (k * max(dplyr::lag(EO_MATMEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEI_med_mov_munic = dplyr::if_else(EO_MATMEI <= (k * zoo::rollmedian(EO_MATMEI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATMEI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATMEI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATMEI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATMEI |> 
  dplyr::select(!EO_MATMEI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATMEI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATMEI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATPEI

```{r rules_dist_EO_MATPEI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATPEI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATPEI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATPEI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATPEI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATPEI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATPEI), F, T), # Longitudinal (município)
    
    DF_EO_MATPEI_out_munic     = dplyr::if_else(!outlier_function(EO_MATPEI), F, T), # Longitudinal (município)
    
    DF_EO_MATPEI_min_munic     = dplyr::if_else(EO_MATPEI >= (min(dplyr::lag(EO_MATPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEI_max_munic     = dplyr::if_else(EO_MATPEI <= (max(dplyr::lag(EO_MATPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEI_min_k_munic   = dplyr::if_else(EO_MATPEI >= (min(dplyr::lag(EO_MATPEI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATPEI_max_k_munic   = dplyr::if_else(EO_MATPEI <= (k * max(dplyr::lag(EO_MATPEI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEI_med_mov_munic = dplyr::if_else(EO_MATPEI <= (k * zoo::rollmedian(EO_MATPEI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATPEI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATPEI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATPEI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATPEI |> 
  dplyr::select(!EO_MATPEI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATPEI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATPEI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATFEF

```{r rules_dist_EO_MATFEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATFEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATFEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATFEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATFEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATFEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATFEF), F, T), # Longitudinal (município)
    
    DF_EO_MATFEF_out_munic     = dplyr::if_else(!outlier_function(EO_MATFEF), F, T), # Longitudinal (município)
    
    DF_EO_MATFEF_min_munic     = dplyr::if_else(EO_MATFEF >= (min(dplyr::lag(EO_MATFEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEF_max_munic     = dplyr::if_else(EO_MATFEF <= (max(dplyr::lag(EO_MATFEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEF_min_k_munic   = dplyr::if_else(EO_MATFEF >= (min(dplyr::lag(EO_MATFEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATFEF_max_k_munic   = dplyr::if_else(EO_MATFEF <= (k * max(dplyr::lag(EO_MATFEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEF_med_mov_munic = dplyr::if_else(EO_MATFEF <= (k * zoo::rollmedian(EO_MATFEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATFEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATFEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATFEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATFEF |> 
  dplyr::select(!EO_MATFEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATFEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATFEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATEEF

```{r rules_dist_EO_MATEEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATEEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATEEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATEEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATEEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATEEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATEEF), F, T), # Longitudinal (município)
    
    DF_EO_MATEEF_out_munic     = dplyr::if_else(!outlier_function(EO_MATEEF), F, T), # Longitudinal (município)
    
    DF_EO_MATEEF_min_munic     = dplyr::if_else(EO_MATEEF >= (min(dplyr::lag(EO_MATEEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEF_max_munic     = dplyr::if_else(EO_MATEEF <= (max(dplyr::lag(EO_MATEEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEF_min_k_munic   = dplyr::if_else(EO_MATEEF >= (min(dplyr::lag(EO_MATEEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATEEF_max_k_munic   = dplyr::if_else(EO_MATEEF <= (k * max(dplyr::lag(EO_MATEEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEF_med_mov_munic = dplyr::if_else(EO_MATEEF <= (k * zoo::rollmedian(EO_MATEEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATEEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATEEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATEEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATEEF |> 
  dplyr::select(!EO_MATEEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATEEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATEEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATMEF

```{r rules_dist_EO_MATMEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATMEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATMEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATMEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATMEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATMEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATMEF), F, T), # Longitudinal (município)
    
    DF_EO_MATMEF_out_munic     = dplyr::if_else(!outlier_function(EO_MATMEF), F, T), # Longitudinal (município)
    
    DF_EO_MATMEF_min_munic     = dplyr::if_else(EO_MATMEF >= (min(dplyr::lag(EO_MATMEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEF_max_munic     = dplyr::if_else(EO_MATMEF <= (max(dplyr::lag(EO_MATMEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEF_min_k_munic   = dplyr::if_else(EO_MATMEF >= (min(dplyr::lag(EO_MATMEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATMEF_max_k_munic   = dplyr::if_else(EO_MATMEF <= (k * max(dplyr::lag(EO_MATMEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEF_med_mov_munic = dplyr::if_else(EO_MATMEF <= (k * zoo::rollmedian(EO_MATMEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATMEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATMEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATMEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATMEF |> 
  dplyr::select(!EO_MATMEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATMEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATMEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATPEF

```{r rules_dist_EO_MATPEF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATPEF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATPEF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATPEF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATPEF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATPEF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATPEF), F, T), # Longitudinal (município)
    
    DF_EO_MATPEF_out_munic     = dplyr::if_else(!outlier_function(EO_MATPEF), F, T), # Longitudinal (município)
    
    DF_EO_MATPEF_min_munic     = dplyr::if_else(EO_MATPEF >= (min(dplyr::lag(EO_MATPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEF_max_munic     = dplyr::if_else(EO_MATPEF <= (max(dplyr::lag(EO_MATPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEF_min_k_munic   = dplyr::if_else(EO_MATPEF >= (min(dplyr::lag(EO_MATPEF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATPEF_max_k_munic   = dplyr::if_else(EO_MATPEF <= (k * max(dplyr::lag(EO_MATPEF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEF_med_mov_munic = dplyr::if_else(EO_MATPEF <= (k * zoo::rollmedian(EO_MATPEF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATPEF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATPEF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATPEF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATPEF |> 
  dplyr::select(!EO_MATPEF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATPEF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATPEF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATFEFAI

```{r rules_dist_EO_MATFEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATFEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATFEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATFEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATFEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATFEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATFEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATFEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_MATFEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATFEFAI_min_munic     = dplyr::if_else(EO_MATFEFAI >= (min(dplyr::lag(EO_MATFEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAI_max_munic     = dplyr::if_else(EO_MATFEFAI <= (max(dplyr::lag(EO_MATFEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAI_min_k_munic   = dplyr::if_else(EO_MATFEFAI >= (min(dplyr::lag(EO_MATFEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATFEFAI_max_k_munic   = dplyr::if_else(EO_MATFEFAI <= (k * max(dplyr::lag(EO_MATFEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAI_med_mov_munic = dplyr::if_else(EO_MATFEFAI <= (k * zoo::rollmedian(EO_MATFEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATFEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATFEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATFEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATFEFAI |> 
  dplyr::select(!EO_MATFEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATFEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATFEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATEEFAI

```{r rules_dist_EO_MATEEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATEEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATEEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATEEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATEEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATEEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATEEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATEEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_MATEEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATEEFAI_min_munic     = dplyr::if_else(EO_MATEEFAI >= (min(dplyr::lag(EO_MATEEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAI_max_munic     = dplyr::if_else(EO_MATEEFAI <= (max(dplyr::lag(EO_MATEEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAI_min_k_munic   = dplyr::if_else(EO_MATEEFAI >= (min(dplyr::lag(EO_MATEEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATEEFAI_max_k_munic   = dplyr::if_else(EO_MATEEFAI <= (k * max(dplyr::lag(EO_MATEEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAI_med_mov_munic = dplyr::if_else(EO_MATEEFAI <= (k * zoo::rollmedian(EO_MATEEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATEEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATEEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATEEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATEEFAI |> 
  dplyr::select(!EO_MATEEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATEEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATEEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATMEFAI

```{r rules_dist_EO_MATMEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATMEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATMEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATMEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATMEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATMEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATMEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATMEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_MATMEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATMEFAI_min_munic     = dplyr::if_else(EO_MATMEFAI >= (min(dplyr::lag(EO_MATMEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAI_max_munic     = dplyr::if_else(EO_MATMEFAI <= (max(dplyr::lag(EO_MATMEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAI_min_k_munic   = dplyr::if_else(EO_MATMEFAI >= (min(dplyr::lag(EO_MATMEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATMEFAI_max_k_munic   = dplyr::if_else(EO_MATMEFAI <= (k * max(dplyr::lag(EO_MATMEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAI_med_mov_munic = dplyr::if_else(EO_MATMEFAI <= (k * zoo::rollmedian(EO_MATMEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATMEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATMEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATMEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATMEFAI |> 
  dplyr::select(!EO_MATMEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATMEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATMEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATPEFAI

```{r rules_dist_EO_MATPEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATPEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATPEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATPEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATPEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATPEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATPEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATPEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_MATPEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATPEFAI_min_munic     = dplyr::if_else(EO_MATPEFAI >= (min(dplyr::lag(EO_MATPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAI_max_munic     = dplyr::if_else(EO_MATPEFAI <= (max(dplyr::lag(EO_MATPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAI_min_k_munic   = dplyr::if_else(EO_MATPEFAI >= (min(dplyr::lag(EO_MATPEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATPEFAI_max_k_munic   = dplyr::if_else(EO_MATPEFAI <= (k * max(dplyr::lag(EO_MATPEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAI_med_mov_munic = dplyr::if_else(EO_MATPEFAI <= (k * zoo::rollmedian(EO_MATPEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATPEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATPEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATPEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATPEFAI |> 
  dplyr::select(!EO_MATPEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATPEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATPEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATFEFAF

```{r rules_dist_EO_MATFEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATFEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATFEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATFEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATFEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATFEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATFEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATFEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_MATFEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATFEFAF_min_munic     = dplyr::if_else(EO_MATFEFAF >= (min(dplyr::lag(EO_MATFEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAF_max_munic     = dplyr::if_else(EO_MATFEFAF <= (max(dplyr::lag(EO_MATFEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAF_min_k_munic   = dplyr::if_else(EO_MATFEFAF >= (min(dplyr::lag(EO_MATFEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATFEFAF_max_k_munic   = dplyr::if_else(EO_MATFEFAF <= (k * max(dplyr::lag(EO_MATFEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEFAF_med_mov_munic = dplyr::if_else(EO_MATFEFAF <= (k * zoo::rollmedian(EO_MATFEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATFEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATFEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATFEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATFEFAF |> 
  dplyr::select(!EO_MATFEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATFEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATFEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATEEFAF

```{r rules_dist_EO_MATEEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATEEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATEEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATEEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATEEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATEEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATEEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATEEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_MATEEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATEEFAF_min_munic     = dplyr::if_else(EO_MATEEFAF >= (min(dplyr::lag(EO_MATEEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAF_max_munic     = dplyr::if_else(EO_MATEEFAF <= (max(dplyr::lag(EO_MATEEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAF_min_k_munic   = dplyr::if_else(EO_MATEEFAF >= (min(dplyr::lag(EO_MATEEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATEEFAF_max_k_munic   = dplyr::if_else(EO_MATEEFAF <= (k * max(dplyr::lag(EO_MATEEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEFAF_med_mov_munic = dplyr::if_else(EO_MATEEFAF <= (k * zoo::rollmedian(EO_MATEEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATEEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATEEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATEEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATEEFAF |> 
  dplyr::select(!EO_MATEEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATEEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATEEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```




















































### EO_MATMEFAF

```{r rules_dist_EO_MATMEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATMEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATMEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATMEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATMEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATMEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATMEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATMEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_MATMEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATMEFAF_min_munic     = dplyr::if_else(EO_MATMEFAF >= (min(dplyr::lag(EO_MATMEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAF_max_munic     = dplyr::if_else(EO_MATMEFAF <= (max(dplyr::lag(EO_MATMEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAF_min_k_munic   = dplyr::if_else(EO_MATMEFAF >= (min(dplyr::lag(EO_MATMEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATMEFAF_max_k_munic   = dplyr::if_else(EO_MATMEFAF <= (k * max(dplyr::lag(EO_MATMEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEFAF_med_mov_munic = dplyr::if_else(EO_MATMEFAF <= (k * zoo::rollmedian(EO_MATMEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATMEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATMEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATMEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATMEFAF |> 
  dplyr::select(!EO_MATMEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATMEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATMEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATPEFAF

```{r rules_dist_EO_MATPEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATPEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATPEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATPEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATPEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATPEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATPEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATPEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_MATPEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATPEFAF_min_munic     = dplyr::if_else(EO_MATPEFAF >= (min(dplyr::lag(EO_MATPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAF_max_munic     = dplyr::if_else(EO_MATPEFAF <= (max(dplyr::lag(EO_MATPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAF_min_k_munic   = dplyr::if_else(EO_MATPEFAF >= (min(dplyr::lag(EO_MATPEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATPEFAF_max_k_munic   = dplyr::if_else(EO_MATPEFAF <= (k * max(dplyr::lag(EO_MATPEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEFAF_med_mov_munic = dplyr::if_else(EO_MATPEFAF <= (k * zoo::rollmedian(EO_MATPEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATPEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATPEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATPEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATPEFAF |> 
  dplyr::select(!EO_MATPEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATPEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATPEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATFEM

```{r rules_dist_EO_MATFEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATFEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATFEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATFEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATFEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATFEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATFEM), F, T), # Longitudinal (município)
    
    DF_EO_MATFEM_out_munic     = dplyr::if_else(!outlier_function(EO_MATFEM), F, T), # Longitudinal (município)
    
    DF_EO_MATFEM_min_munic     = dplyr::if_else(EO_MATFEM >= (min(dplyr::lag(EO_MATFEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEM_max_munic     = dplyr::if_else(EO_MATFEM <= (max(dplyr::lag(EO_MATFEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEM_min_k_munic   = dplyr::if_else(EO_MATFEM >= (min(dplyr::lag(EO_MATFEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATFEM_max_k_munic   = dplyr::if_else(EO_MATFEM <= (k * max(dplyr::lag(EO_MATFEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATFEM_med_mov_munic = dplyr::if_else(EO_MATFEM <= (k * zoo::rollmedian(EO_MATFEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATFEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATFEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATFEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATFEM |> 
  dplyr::select(!EO_MATFEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATFEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATFEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATEEM

```{r rules_dist_EO_MATEEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATEEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATEEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATEEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATEEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATEEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATEEM), F, T), # Longitudinal (município)
    
    DF_EO_MATEEM_out_munic     = dplyr::if_else(!outlier_function(EO_MATEEM), F, T), # Longitudinal (município)
    
    DF_EO_MATEEM_min_munic     = dplyr::if_else(EO_MATEEM >= (min(dplyr::lag(EO_MATEEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEM_max_munic     = dplyr::if_else(EO_MATEEM <= (max(dplyr::lag(EO_MATEEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEM_min_k_munic   = dplyr::if_else(EO_MATEEM >= (min(dplyr::lag(EO_MATEEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATEEM_max_k_munic   = dplyr::if_else(EO_MATEEM <= (k * max(dplyr::lag(EO_MATEEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATEEM_med_mov_munic = dplyr::if_else(EO_MATEEM <= (k * zoo::rollmedian(EO_MATEEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATEEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATEEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATEEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATEEM |> 
  dplyr::select(!EO_MATEEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATEEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATEEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATMEM

```{r rules_dist_EO_MATMEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATMEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATMEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATMEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATMEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATMEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATMEM), F, T), # Longitudinal (município)
    
    DF_EO_MATMEM_out_munic     = dplyr::if_else(!outlier_function(EO_MATMEM), F, T), # Longitudinal (município)
    
    DF_EO_MATMEM_min_munic     = dplyr::if_else(EO_MATMEM >= (min(dplyr::lag(EO_MATMEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEM_max_munic     = dplyr::if_else(EO_MATMEM <= (max(dplyr::lag(EO_MATMEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEM_min_k_munic   = dplyr::if_else(EO_MATMEM >= (min(dplyr::lag(EO_MATMEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATMEM_max_k_munic   = dplyr::if_else(EO_MATMEM <= (k * max(dplyr::lag(EO_MATMEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATMEM_med_mov_munic = dplyr::if_else(EO_MATMEM <= (k * zoo::rollmedian(EO_MATMEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATMEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATMEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATMEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATMEM |> 
  dplyr::select(!EO_MATMEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATMEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATMEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATPEM

```{r rules_dist_EO_MATPEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATPEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATPEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATPEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATPEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATPEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATPEM), F, T), # Longitudinal (município)
    
    DF_EO_MATPEM_out_munic     = dplyr::if_else(!outlier_function(EO_MATPEM), F, T), # Longitudinal (município)
    
    DF_EO_MATPEM_min_munic     = dplyr::if_else(EO_MATPEM >= (min(dplyr::lag(EO_MATPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEM_max_munic     = dplyr::if_else(EO_MATPEM <= (max(dplyr::lag(EO_MATPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEM_min_k_munic   = dplyr::if_else(EO_MATPEM >= (min(dplyr::lag(EO_MATPEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATPEM_max_k_munic   = dplyr::if_else(EO_MATPEM <= (k * max(dplyr::lag(EO_MATPEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATPEM_med_mov_munic = dplyr::if_else(EO_MATPEM <= (k * zoo::rollmedian(EO_MATPEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATPEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATPEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATPEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATPEM |> 
  dplyr::select(!EO_MATPEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATPEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATPEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATTICR

```{r rules_dist_EO_MATTICR}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATTICR <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATTICR" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATTICR"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATTICR) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATTICR_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATTICR), F, T), # Longitudinal (município)
    
    DF_EO_MATTICR_out_munic     = dplyr::if_else(!outlier_function(EO_MATTICR), F, T), # Longitudinal (município)
    
    DF_EO_MATTICR_min_munic     = dplyr::if_else(EO_MATTICR >= (min(dplyr::lag(EO_MATTICR), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTICR_max_munic     = dplyr::if_else(EO_MATTICR <= (max(dplyr::lag(EO_MATTICR), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTICR_min_k_munic   = dplyr::if_else(EO_MATTICR >= (min(dplyr::lag(EO_MATTICR), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATTICR_max_k_munic   = dplyr::if_else(EO_MATTICR <= (k * max(dplyr::lag(EO_MATTICR), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTICR_med_mov_munic = dplyr::if_else(EO_MATTICR <= (k * zoo::rollmedian(EO_MATTICR, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATTICR_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATTICR), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATTICR}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATTICR |> 
  dplyr::select(!EO_MATTICR) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATTICR}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATTICR}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATTIPE

```{r rules_dist_EO_MATTIPE}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATTIPE <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATTIPE" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATTIPE"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATTIPE) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATTIPE_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATTIPE), F, T), # Longitudinal (município)
    
    DF_EO_MATTIPE_out_munic     = dplyr::if_else(!outlier_function(EO_MATTIPE), F, T), # Longitudinal (município)
    
    DF_EO_MATTIPE_min_munic     = dplyr::if_else(EO_MATTIPE >= (min(dplyr::lag(EO_MATTIPE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIPE_max_munic     = dplyr::if_else(EO_MATTIPE <= (max(dplyr::lag(EO_MATTIPE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIPE_min_k_munic   = dplyr::if_else(EO_MATTIPE >= (min(dplyr::lag(EO_MATTIPE), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATTIPE_max_k_munic   = dplyr::if_else(EO_MATTIPE <= (k * max(dplyr::lag(EO_MATTIPE), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIPE_med_mov_munic = dplyr::if_else(EO_MATTIPE <= (k * zoo::rollmedian(EO_MATTIPE, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATTIPE_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATTIPE), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATTIPE}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATTIPE |> 
  dplyr::select(!EO_MATTIPE) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATTIPE}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATTIPE}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATTIEFAI

```{r rules_dist_EO_MATTIEFAI}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATTIEFAI <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATTIEFAI" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATTIEFAI"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATTIEFAI) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATTIEFAI_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATTIEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEFAI_out_munic     = dplyr::if_else(!outlier_function(EO_MATTIEFAI), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEFAI_min_munic     = dplyr::if_else(EO_MATTIEFAI >= (min(dplyr::lag(EO_MATTIEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAI_max_munic     = dplyr::if_else(EO_MATTIEFAI <= (max(dplyr::lag(EO_MATTIEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAI_min_k_munic   = dplyr::if_else(EO_MATTIEFAI >= (min(dplyr::lag(EO_MATTIEFAI), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAI_max_k_munic   = dplyr::if_else(EO_MATTIEFAI <= (k * max(dplyr::lag(EO_MATTIEFAI), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAI_med_mov_munic = dplyr::if_else(EO_MATTIEFAI <= (k * zoo::rollmedian(EO_MATTIEFAI, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAI_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATTIEFAI), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATTIEFAI}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATTIEFAI |> 
  dplyr::select(!EO_MATTIEFAI) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATTIEFAI}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATTIEFAI}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```


















































### EO_MATTIEFAF

```{r rules_dist_EO_MATTIEFAF}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATTIEFAF <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATTIEFAF" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATTIEFAF"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATTIEFAF) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATTIEFAF_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATTIEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEFAF_out_munic     = dplyr::if_else(!outlier_function(EO_MATTIEFAF), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEFAF_min_munic     = dplyr::if_else(EO_MATTIEFAF >= (min(dplyr::lag(EO_MATTIEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAF_max_munic     = dplyr::if_else(EO_MATTIEFAF <= (max(dplyr::lag(EO_MATTIEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAF_min_k_munic   = dplyr::if_else(EO_MATTIEFAF >= (min(dplyr::lag(EO_MATTIEFAF), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAF_max_k_munic   = dplyr::if_else(EO_MATTIEFAF <= (k * max(dplyr::lag(EO_MATTIEFAF), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAF_med_mov_munic = dplyr::if_else(EO_MATTIEFAF <= (k * zoo::rollmedian(EO_MATTIEFAF, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATTIEFAF_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATTIEFAF), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATTIEFAF}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATTIEFAF |> 
  dplyr::select(!EO_MATTIEFAF) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATTIEFAF}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATTIEFAF}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```



















































### EO_MATTIEM

```{r rules_dist_EO_MATTIEM}

## df com o resultado das aplicações das regras
df_rules_dist_EO_MATTIEM <- data |> 
  dplyr::filter( # Filtro condicional para variáveis que estão em "ano_base_alter"
    dplyr::case_when(
      "EO_MATTIEM" %in% names(ano_base_alter) ~ ANO >= ano_base_alter["EO_MATTIEM"],
      TRUE ~ ANO >= min(ANO, na.rm = T)
    )
  ) |>
  dplyr::select(Ano = ANO, ibge7 = IBGE7, EO_MATTIEM) |> 
  dplyr::group_by(ibge7) |> 
  dplyr::mutate(
    DF_EO_MATTIEM_hampel_munic  = dplyr::if_else(!hampel_filter(EO_MATTIEM), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEM_out_munic     = dplyr::if_else(!outlier_function(EO_MATTIEM), F, T), # Longitudinal (município)
    
    DF_EO_MATTIEM_min_munic     = dplyr::if_else(EO_MATTIEM >= (min(dplyr::lag(EO_MATTIEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEM_max_munic     = dplyr::if_else(EO_MATTIEM <= (max(dplyr::lag(EO_MATTIEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEM_min_k_munic   = dplyr::if_else(EO_MATTIEM >= (min(dplyr::lag(EO_MATTIEM), na.rm = T) / k), F, T), # Longitudinal (município)

    DF_EO_MATTIEM_max_k_munic   = dplyr::if_else(EO_MATTIEM <= (k * max(dplyr::lag(EO_MATTIEM), na.rm = T)), F, T), # Longitudinal (município)

    DF_EO_MATTIEM_med_mov_munic = dplyr::if_else(EO_MATTIEM <= (k * zoo::rollmedian(EO_MATTIEM, k = 3, fill = NA, align = "right")), F, T), # Longitudinal (município)

    DF_EO_MATTIEM_dif_munic     = dplyr::if_else(!compare_first_dif(EO_MATTIEM), F, T) # Longitudinal (município)
  )
```

```{r data_wrangling_dist_EO_MATTIEM}

## Transformação dos resultados
df_sumario_dist_eo <- df_rules_dist_EO_MATTIEM |> 
  dplyr::select(!EO_MATTIEM) |> 
  tidyr::pivot_longer(cols = !c(Ano, ibge7), names_to = "Regra", values_to = "resultado")

## df com um sumário dos resultados
df_sumario <- df_sumario_dist_eo |> 
  dplyr::group_by(Ano, Regra) |> 
  dplyr::summarise(
    Total        = dplyr::n(),
    Validada     = sum(!resultado, na.rm = T),
    Suspeita     = sum(resultado, na.rm = T),
    Ausente      = sum(is.na(resultado)),
    `% Validada` = round(Validada / Total * 100, 2),
    `% Suspeita` = round(Suspeita / Total * 100, 2),
    `% Ausente`  = round(Ausente / Total * 100, 2)
  ) |> 
  dplyr::ungroup()
```

```{r table_dist_EO_MATTIEM}
#| column: screen-inset-right

df_sumario |> 
  dplyr::filter(Ano == max(Ano)) |>
  dplyr::mutate(Ano = as.character(Ano)) |>
  kableExtra::kbl(format.args = list(big.mark = ".", decimal.mark = ",")) |> 
  kableExtra::kable_paper("hover", full_width = F)
```

```{r chart_dist_EO_MATTIEM}
#| column: screen-inset-right
#| layout-ncol: 2
#| out-width: 100%

chart_heatmap(df_sumario)
chart_vbar(df_sumario)
```

# Análise descritiva

As tabelas a seguir apresentam um resumo descritivo dos indicadores analisados, fornecendo uma visão abrangente das características dos dados. Os cálculos foram realizados em função do ano. As informações inclusas abrangem:

-   **Quantidade de Valores (N):** Indica o número total de observações presentes no conjunto de dados para cada indicador.

-   **Valor Mínimo:** Representa o menor valor observado para o indicador.

-   **Valor da Média:** Indica a média aritmética dos valores do indicador, fornecendo uma medida central da tendência dos dados.

-   **Valor da Mediana:** Representa o valor que divide o conjunto de dados ordenados em duas metades de igual tamanho, sendo útil para lidar com casos com *outliers*.

-   **Valor Máximo:** Indica o maior valor observado para o indicador.

-   **Desvio Padrão (D.P.):** Mede a dispersão dos dados em relação à média, quantificando a variabilidade presente no conjunto.

-   **Coeficiente de Variação (C.V.):** Expressa a razão entre o desvio padrão e a média, em porcentagem, fornecendo uma medida relativa da dispersão dos dados em relação à média.

-   **Quantidade de Zeros:** Indica o número de observações com valor igual a zero para o indicador.

-   **Quantidade de Dados Ausentes:** Representa o número de observações com valores ausentes para o indicador.

**Observações Importantes:**

-   A análise de *outliers* (valores atípicos) não foi realizada nesta tabela descritiva. Para uma avaliação mais completa da qualidade dos dados, recomenda-se a análise de *outliers* e a verificação de possíveis inconsistências nos valores apresentados anteriormente neste documento.

-   A interpretação das medidas descritivas deve ser feita em conjunto com o conhecimento do contexto dos indicadores e dos objetivos da análise.

Ao analisar esta tabela, é possível obter uma compreensão inicial das características dos dados, identificando padrões, tendências e possíveis discrepâncias. As informações aqui apresentadas servem como base para análises estatísticas mais aprofundadas, auxiliando na tomada de decisões e na formulação de conclusões relevantes.

## Tabelas

```{r show_desc_table, results='asis'}
#| column: screen-inset-right

pander::pandoc.header("Descritiva", level = 3)

# Loop para mostrar os resultados por variável
for(var in var_numeric){
  pander::pandoc.header(var, level = 4)
  pander::pandoc.table(
    table_descriptive(variable = var, data = data, ano_base_alter), 
    decimal.mark = ",", 
    big.mark     = ".", 
    round        = 2,
    split.table  = Inf
  )
  cat("\\pagebreak\n")
}
```

## Gráficos

::: {.callout-note appearance="minimal"}
Observação: os gráficos abaixo são mostrados na escala logarítmica para facilitar a visualização dos dados em certos casos. Para conferir os valores reais, consultar as tabelas descritivas.
:::

```{r show_boxplot_chart, results='asis'}
#| out-width: 100%
#| fig-format: svg

pander::pandoc.header("Gráfico de caixa (boxplot)", level = 3)

# Loop para mostrar os resultados por variável
for(var in var_numeric){
  pander::pandoc.header(var, level = 4)
  print(chart_boxplot(variable = var, data = data, ano_base_alter))
  cat("\\pagebreak\n")
}
```

```{r show_hist_chart, results='asis'}
#| out-width: 100%
#| fig-format: svg

pander::pandoc.header("Histograma", level = 3)

# Loop para mostrar os resultados por variável
for(var in var_numeric){
  pander::pandoc.header(var, level = 4)
  print(chart_histogram(variable = var, data = data, ano_base_alter))
  cat("\\pagebreak\n")
}
```

```{r excel_create_wb}

## Criar pasta de trabalho
pt <- openxlsx::createWorkbook()
```

```{r df_build_viol_valid}
  variables = c(
    "EO_ALUNOSP8",
    "EO_ALUNOSM8",
    "EO_ALUNOSM11",
    "EO_ALUNOSP11",
    "EO_ESCOLAEFAI",
    "EO_ESCOLAEFAF",
    "EO_ESCOLAEFCO",
    "EO_ESCOLAME",
    "EO_IDEBFU1a5",
    "EO_IDEBFU6a9",
    "EO_IQEP11",
    "EO_IQEM4",
    "EO_IQEM8",
    "EO_IQEM11",
    "EO_IQEP4",
    "EO_IQEP8",
    "EO_IQE4",
    "EO_IQE8",
    "EO_IQE11",
    "EO_IQE",
    "EO_PC15",
    "EO_PC18",
    "EO_EJAFU15",
    "EO_EJAME18",
    "EO_TAXA0A3",
    "EO_TAXA4A5",
    "EO_TAXA15A17",
    "EO_TXATBASICA",
    #"EO_ANALF10",
    #"EO_ANALF",
    #"EO_ANALF15a17",
    #"EO_ANALF18a24",
    #"EO_ANALF25",
    #"EO_FUND15",
    #"EO_FUND25M",
    #"EO_MED25M",
    "EO_TAXA6A14",
    "EO_TAXALIQ7",
    "EO_TAXA15",
    "EO_TAXALIQ15",
    "EO_DISTEM",
    "EO_TXAPROV1a5",
    "EO_TXAPROV1a9",
    "EO_TXAPROV6a9",
    "EO_TXAPROV10a12",
    "EO_TXREP1a9",
    "EO_TXREP1a5",
    "EO_TXREP10a12",
    "EO_TXREP6a9",
    "EO_TXABA1a9",
    "EO_TXABA1a5",
    "EO_TXABA6a9",
    "EO_TXABA10a12",
    "EO_DISTEF",
    "EO_DISTEFAI",
    "EO_DISTEFAF",
    "EO_PCINF",
    "EO_PCITF",
    "EO_PCINFM",
    "EO_PCITM",
    "EO_PCAPM8",
    "EO_PCAPM11",
    "EO_PCAPP8",
    "EO_PCAPP11",
    "EO_PALUNOSM8",
    "EO_PALUNOSP8",
    "EO_PALUNOSM11",
    "EO_ANALF25_PP",
    "EO_ANALF25_PP",
    "EO_FUND25_B",
    "EO_FUND25_PP",
    "EO_MED25M_B",
    "EO_MED25M_PP",
    "EO_DOCSUPEI",
    "EO_DOCSUPEF",
    "EO_DOCSUPEFAF",
    "EO_DOCSUPEFAI",
    "EO_DOCSUPEM",
    "EO_ADEDG1EI",
    "EO_ADEDG2EI",
    "EO_ADEDG3EI",
    "EO_ADEDG4EI",
    "EO_ADEDG5EI",
    "EO_ADEDG1EF",
    "EO_ADEDG2EF",
    "EO_ADEDG3EF",
    "EO_ADEDG4EF",
    "EO_ADEDG5EF",
    "EO_ADEDG1EFAI",
    "EO_ADEDG2EFAI",
    "EO_ADEDG3EFAI",
    "EO_ADEDG4EFAI",
    "EO_ADEDG5EFAI",
    "EO_ADEDG1EFAF",
    "EO_ADEDG2EFAF",
    "EO_ADEDG3EFAF",
    "EO_ADEDG4EFAF",
    "EO_ADEDG5EFAF",
    "EO_ADEDG1EM",
    "EO_ADEDG2EM",
    "EO_ADEDG3EM",
    "EO_ADEDG4EM",
    "EO_ADEDG5EM",
    "EO_ADEDG1EJAF",
    "EO_ADEDG2EJAF",
    "EO_ADEDG3EJAF",
    "EO_ADEDG4EJAF",
    "EO_ADEDG5EFAF",
    "EO_ADEDG1EJAM",
    "EO_ADEDG2EJAM",
    "EO_ADEDG3EJAM",
    "EO_ADEDG4EJAM",
    "EO_ADEDG5EJAM",
    "EO_MATFEI",
    "EO_MATEEI",
    "EO_MATMEI",
    "EO_MATPEI",
    "EO_MATFEF",
    "EO_MATEEF",
    "EO_MATMEF",
    "EO_MATPEF",
    "EO_MATFEFAI",
    "EO_MATEEFAI",
    "EO_MATMEFAI",
    "EO_MATPEFAI",
    "EO_MATFEFAF",
    "EO_MATEEFAF",
    "EO_MATMEFAF",
    "EO_MATPEFAF",
    "EO_MATFEM",
    "EO_MATEEM",
    "EO_MATMEM",
    "EO_MATPEM",
    "EO_MATTICR",
    "EO_MATTIPE",
    "EO_MATTIEFAI",
    "EO_MATTIEFAF",
    "EO_MATTIEM")

lis <- split(variables,f = variables)
df_obs_valid <- names(lis)|> 
sapply(function(i){
lis[[i]] <- df_rules_valid_eo_all |> 
  dplyr::select(
    Ano,
    ibge7,
    dplyr::ends_with(i)
  ) |> 
  tidyr::pivot_longer(
    cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")),
    names_to  = "regra",
    values_to = "obs_suspeita"
  ) |>
  dplyr::filter(obs_suspeita) |>
  dplyr::rename_with(tolower) |>
  dplyr::arrange(ano, ibge7)
return(lis[[i]])
}, USE.NAMES=TRUE, simplify = FALSE)

index <- sapply(df_obs_valid, nrow)!=0
df_obs_valid <- df_obs_valid[index]

for(i in names(df_obs_valid)){
  openxlsx::addWorksheet(pt, paste0("valid - ", i))
  openxlsx::writeData(pt, paste0("valid - ", i), df_obs_valid[[i]])
}


# Criar base com as observações que violaram uma ou mais regras de validade

## Validade
# df_rules_valid_EO_ALUNOSP8 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ALUNOSP8")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ALUNOSM8 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ALUNOSM8")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ALUNOSM11 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ALUNOSM11")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ALUNOSP11 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ALUNOSP11")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ESCOLAEFAI <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ESCOLAEFAI")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ESCOLAEFAF <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ESCOLAEFAF")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ESCOLAEFCO <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ESCOLAEFCO")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_ESCOLAME <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_ESCOLAME")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IDEBFU1a5 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IDEBFU1a5")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IDEBFU6a9 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IDEBFU6a9")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IQEP11 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IQEP11")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IQEM4 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IQEM4")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IQEM8 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IQEM8")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_valid_EO_IQEM11 <- df_rules_valid_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::ends_with("EO_IQEM11")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
```

```{r df_export_viol_valid}

## Lista com os dfs por indicador
# lista_df <- list(
#   "EO_ALUNOSP8" = df_rules_valid_EO_ALUNOSP8,
#   "EO_ALUNOSM8"        = df_rules_valid_EO_ALUNOSM8,
#   "EO_ALUNOSM11"       = df_rules_valid_EO_ALUNOSM11,
#   "EO_ALUNOSP11"    = df_rules_valid_EO_ALUNOSP11,
#   "EO_ESCOLAEFAI"       = df_rules_valid_EO_ESCOLAEFAI,
#   "EO_ESCOLAEFAF"     = df_rules_valid_EO_ESCOLAEFAF,
#   "EO_ESCOLAEFCO"     = df_rules_valid_EO_ESCOLAEFCO,
#   "EO_ESCOLAME"      = df_rules_valid_EO_ESCOLAME,
#   "EO_IDEBFU1a5"       = df_rules_valid_EO_IDEBFU1a5,
#   "EO_IDEBFU6a9"      = df_rules_valid_EO_IDEBFU6a9,
#   "EO_IQEP11"     = df_rules_valid_EO_IQEP11,
#   "ma_reflo"      = df_rules_valid_ma_reflo,
#   "EO_IQEM4"  = df_rules_valid_EO_IQEM4,
#   "EO_IQEM8"      = df_rules_valid_EO_IQEM8,
#   "EO_IQEM11"       = df_rules_valid_EO_IQEM11
# )
# 
# ## Add dados à pasta de trabalho
# for(i in names(lista_df)){
#   nome <- stringr::str_remove(i, "df_rules_valid_")
#   openxlsx::addWorksheet(pt, paste0("valid - ", nome))
#   openxlsx::writeData(pt, paste0("valid - ", nome), lista_df[[i]])
# }
```

```{r df_build_viol_consist}

# Criar base com as observações que violaram uma ou mais regras de consistência

## Consistência
# df_rules_consist_EO_ESCOLAME <- df_rules_consist_eo_all |> 
#   dplyr::select(
#     Ano,
#     ibge7,
#     dplyr::contains("_FOCOS")
#   ) |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
```

```{r df_export_viol_consist}

## Lista com os dfs por indicador
# lista_df <- list(
#   "EO_ESCOLAME" = df_rules_valid_EO_ESCOLAME
# )
# 
# ## Add dados à pasta de trabalho
# for(i in names(lista_df)){
#   nome <- stringr::str_remove(i, "df_rules_consist_")
#   openxlsx::addWorksheet(pt, paste0("consist - ", nome))
#   openxlsx::writeData(pt, paste0("consist - ", nome), lista_df[[i]])
# }
```

```{r df_build_viol_dist}
  df_dist = list(
    "EO_ALUNOSP8" = df_rules_dist_EO_ALUNOSP8,
    "EO_ALUNOSM8" = df_rules_dist_EO_ALUNOSM8 ,
    "EO_ALUNOSM11" = df_rules_dist_EO_ALUNOSM11 ,
    "EO_ALUNOSP11" = df_rules_dist_EO_ALUNOSP11 ,
    "EO_ESCOLAEFAI" = df_rules_dist_EO_ESCOLAEFAI ,
    "EO_ESCOLAEFAF" = df_rules_dist_EO_ESCOLAEFAF ,
    "EO_ESCOLAEFCO" = df_rules_dist_EO_ESCOLAEFCO ,
    "EO_ESCOLAME" = df_rules_dist_EO_ESCOLAME ,
    "EO_IDEBFU1a5" = df_rules_dist_EO_IDEBFU1a5 ,
    "EO_IDEBFU6a9" = df_rules_dist_EO_IDEBFU6a9 ,
    "EO_IQEP11" = df_rules_dist_EO_IQEP11 ,
    "EO_IQEM4" = df_rules_dist_EO_IQEM4 ,
    "EO_IQEM8" = df_rules_dist_EO_IQEM8 ,
    "EO_IQEM11" = df_rules_dist_EO_IQEM11 ,
    "EO_IQEP4" = df_rules_dist_EO_IQEP4 ,
    "EO_IQEP8" = df_rules_dist_EO_IQEP8 ,
    "EO_IQE4" = df_rules_dist_EO_IQE4 ,
    "EO_IQE8" = df_rules_dist_EO_IQE8 ,
    "EO_IQE11" = df_rules_dist_EO_IQE11 ,
    "EO_IQE" = df_rules_dist_EO_IQE ,
    "EO_PC15" = df_rules_dist_EO_PC15 ,
    "EO_PC18" = df_rules_dist_EO_PC18 ,
    "EO_EJAFU15" = df_rules_dist_EO_EJAFU15 ,
    "EO_EJAME18" = df_rules_dist_EO_EJAME18 ,
    "EO_TAXA0A3" = df_rules_dist_EO_TAXA0A3 ,
    "EO_TAXA4A5" = df_rules_dist_EO_TAXA4A5 ,
    "EO_TAXA15A17" = df_rules_dist_EO_TAXA15A17 ,
    "EO_TXATBASICA" = df_rules_dist_EO_TXATBASICA ,
    #"EO_ANALF10" = df_rules_dist_EO_ANALF10 ,
    #"EO_ANALF" = df_rules_dist_EO_ANALF ,
    #"EO_ANALF15a17" = df_rules_dist_EO_ANALF15a17 ,
    #"EO_ANALF18a24" = df_rules_dist_EO_ANALF18a24 ,
    #"EO_ANALF25" = df_rules_dist_EO_ANALF25 ,
    #"EO_FUND15" = df_rules_dist_EO_FUND15 ,
    #"EO_FUND25M" = df_rules_dist_EO_FUND25M ,
    #"EO_MED25M" = df_rules_dist_EO_MED25M ,
    "EO_TAXA6A14" = df_rules_dist_EO_TAXA6A14 ,
    "EO_TAXALIQ7" = df_rules_dist_EO_TAXALIQ7 ,
    "EO_TAXA15" = df_rules_dist_EO_TAXA15 ,
    "EO_TAXALIQ15" = df_rules_dist_EO_TAXALIQ15 ,
    "EO_DISTEM" = df_rules_dist_EO_DISTEM ,
    "EO_TXAPROV1a5" = df_rules_dist_EO_TXAPROV1a5 ,
    "EO_TXAPROV1a9" = df_rules_dist_EO_TXAPROV1a9 ,
    "EO_TXAPROV6a9" = df_rules_dist_EO_TXAPROV6a9 ,
    "EO_TXAPROV10a12" = df_rules_dist_EO_TXAPROV10a12 ,
    "EO_TXREP1a9" = df_rules_dist_EO_TXREP1a9 ,
    "EO_TXREP1a5" = df_rules_dist_EO_TXREP1a5 ,
    "EO_TXREP10a12" = df_rules_dist_EO_TXREP10a12 ,
    "EO_TXREP6a9" = df_rules_dist_EO_TXREP6a9 ,
    "EO_TXABA1a9" = df_rules_dist_EO_TXABA1a9 ,
    "EO_TXABA1a5" = df_rules_dist_EO_TXABA1a5 ,
    "EO_TXABA6a9" = df_rules_dist_EO_TXABA6a9 ,
    "EO_TXABA10a12" = df_rules_dist_EO_TXABA10a12 ,
    "EO_DISTEF" = df_rules_dist_EO_DISTEF ,
    "EO_DISTEFAI" = df_rules_dist_EO_DISTEFAI ,
    "EO_DISTEFAF" = df_rules_dist_EO_DISTEFAF ,
    "EO_PCINF" = df_rules_dist_EO_PCINF ,
    "EO_PCITF" = df_rules_dist_EO_PCITF ,
    "EO_PCINFM" = df_rules_dist_EO_PCINFM ,
    "EO_PCITM" = df_rules_dist_EO_PCITM ,
    "EO_PCAPM8" = df_rules_dist_EO_PCAPM8 ,
    "EO_PCAPM11" = df_rules_dist_EO_PCAPM11 ,
    "EO_PCAPP8" = df_rules_dist_EO_PCAPP8 ,
    "EO_PCAPP11" = df_rules_dist_EO_PCAPP11 ,
    "EO_PALUNOSM8" = df_rules_dist_EO_PALUNOSM8 ,
    "EO_PALUNOSP8" = df_rules_dist_EO_PALUNOSP8 ,
    "EO_PALUNOSM11" = df_rules_dist_EO_PALUNOSM11 ,
    "EO_ANALF25_PP" = df_rules_dist_EO_ANALF25_PP ,
    "EO_FUND25_B" = df_rules_dist_EO_FUND25_B ,
    "EO_FUND25_PP" = df_rules_dist_EO_FUND25_PP ,
    "EO_MED25M_B" = df_rules_dist_EO_MED25M_B ,
    "EO_MED25M_PP" = df_rules_dist_EO_MED25M_PP ,
    "EO_DOCSUPEI" = df_rules_dist_EO_DOCSUPEI ,
    "EO_DOCSUPEF" = df_rules_dist_EO_DOCSUPEF ,
    "EO_DOCSUPEFAF" = df_rules_dist_EO_DOCSUPEFAF ,
    "EO_DOCSUPEFAI" = df_rules_dist_EO_DOCSUPEFAI ,
    "EO_DOCSUPEM" = df_rules_dist_EO_DOCSUPEM ,
    "EO_ADEDG1EI" = df_rules_dist_EO_ADEDG1EI ,
    "EO_ADEDG2EI" = df_rules_dist_EO_ADEDG2EI ,
    "EO_ADEDG3EI" = df_rules_dist_EO_ADEDG3EI ,
    "EO_ADEDG4EI" = df_rules_dist_EO_ADEDG4EI ,
    "EO_ADEDG5EI" = df_rules_dist_EO_ADEDG5EI ,
    "EO_ADEDG1EF" = df_rules_dist_EO_ADEDG1EF ,
    "EO_ADEDG2EF" = df_rules_dist_EO_ADEDG2EF ,
    "EO_ADEDG3EF" = df_rules_dist_EO_ADEDG3EF ,
    "EO_ADEDG4EF" = df_rules_dist_EO_ADEDG4EF ,
    "EO_ADEDG5EF" = df_rules_dist_EO_ADEDG5EF ,
    "EO_ADEDG1EFAI" = df_rules_dist_EO_ADEDG1EFAI ,
    "EO_ADEDG2EFAI" = df_rules_dist_EO_ADEDG2EFAI ,
    "EO_ADEDG3EFAI" = df_rules_dist_EO_ADEDG3EFAI ,
    "EO_ADEDG4EFAI" = df_rules_dist_EO_ADEDG4EFAI ,
    "EO_ADEDG5EFAI" = df_rules_dist_EO_ADEDG5EFAI ,
    "EO_ADEDG1EFAF" = df_rules_dist_EO_ADEDG1EFAF ,
    "EO_ADEDG2EFAF" = df_rules_dist_EO_ADEDG2EFAF ,
    "EO_ADEDG3EFAF" = df_rules_dist_EO_ADEDG3EFAF ,
    "EO_ADEDG4EFAF" = df_rules_dist_EO_ADEDG4EFAF ,
    "EO_ADEDG5EFAF" = df_rules_dist_EO_ADEDG5EFAF ,
    "EO_ADEDG1EM" = df_rules_dist_EO_ADEDG1EM ,
    "EO_ADEDG2EM" = df_rules_dist_EO_ADEDG2EM ,
    "EO_ADEDG3EM" = df_rules_dist_EO_ADEDG3EM ,
    "EO_ADEDG4EM" = df_rules_dist_EO_ADEDG4EM ,
    "EO_ADEDG5EM" = df_rules_dist_EO_ADEDG5EM ,
    "EO_ADEDG1EJAF" = df_rules_dist_EO_ADEDG1EJAF ,
    "EO_ADEDG2EJAF" = df_rules_dist_EO_ADEDG2EJAF ,
    "EO_ADEDG3EJAF" = df_rules_dist_EO_ADEDG3EJAF ,
    "EO_ADEDG4EJAF" = df_rules_dist_EO_ADEDG4EJAF ,
    "EO_ADEDG5EJAF" = df_rules_dist_EO_ADEDG5EJAF ,
    "EO_ADEDG1EJAM" = df_rules_dist_EO_ADEDG1EJAM ,
    "EO_ADEDG2EJAM" = df_rules_dist_EO_ADEDG2EJAM ,
    "EO_ADEDG3EJAM" = df_rules_dist_EO_ADEDG3EJAM ,
    "EO_ADEDG4EJAM" = df_rules_dist_EO_ADEDG4EJAM ,
    "EO_ADEDG5EJAM" = df_rules_dist_EO_ADEDG5EJAM ,
    "EO_MATFEI" = df_rules_dist_EO_MATFEI ,
    "EO_MATEEI" = df_rules_dist_EO_MATEEI ,
    "EO_MATMEI" = df_rules_dist_EO_MATMEI ,
    "EO_MATPEI" = df_rules_dist_EO_MATPEI ,
    "EO_MATFEF" = df_rules_dist_EO_MATFEF ,
    "EO_MATEEF" = df_rules_dist_EO_MATEEF ,
    "EO_MATMEF" = df_rules_dist_EO_MATMEF ,
    "EO_MATPEF" = df_rules_dist_EO_MATPEF ,
    "EO_MATFEFAI" = df_rules_dist_EO_MATFEFAI ,
    "EO_MATEEFAI" = df_rules_dist_EO_MATEEFAI ,
    "EO_MATMEFAI" = df_rules_dist_EO_MATMEFAI ,
    "EO_MATPEFAI" = df_rules_dist_EO_MATPEFAI ,
    "EO_MATFEFAF" = df_rules_dist_EO_MATFEFAF ,
    "EO_MATEEFAF" = df_rules_dist_EO_MATEEFAF ,
    "EO_MATMEFAF" = df_rules_dist_EO_MATMEFAF ,
    "EO_MATPEFAF" = df_rules_dist_EO_MATPEFAF ,
    "EO_MATFEM" = df_rules_dist_EO_MATFEM ,
    "EO_MATEEM" = df_rules_dist_EO_MATEEM ,
    "EO_MATMEM" = df_rules_dist_EO_MATMEM ,
    "EO_MATPEM" = df_rules_dist_EO_MATPEM ,
    "EO_MATTICR" = df_rules_dist_EO_MATTICR ,
    "EO_MATTIPE" = df_rules_dist_EO_MATTIPE ,
    "EO_MATTIEFAI" = df_rules_dist_EO_MATTIEFAI ,
    "EO_MATTIEFAF" = df_rules_dist_EO_MATTIEFAF ,
    "EO_MATTIEM"  = df_rules_dist_EO_MATTIEM
  )

df_obs_dist <- names(df_dist)|>
sapply(function(i){
df_dist[[i]] <- df_dist[[i]] |>
  tidyr::pivot_longer(
    cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")),
    names_to  = "regra",
    values_to = "obs_suspeita"
  ) |>
  dplyr::filter(obs_suspeita) |>
  dplyr::rename_with(tolower) |>
  dplyr::arrange(ano, ibge7)
return(df_dist[[i]])
}, USE.NAMES=TRUE, simplify = FALSE)

index <- sapply(df_obs_dist, nrow)!=0
df_obs_dist <- df_obs_dist[index]

for(i in names(df_obs_dist)){
  openxlsx::addWorksheet(pt, paste0("distrib - ", i))
  openxlsx::writeData(pt, paste0("distrib - ", i), df_obs_dist[[i]])
}



# Criar base com as observações que violaram uma ou mais regras de distribuição

## Distribuição
# df_rules_dist_EO_ALUNOSP8 <- df_rules_dist_EO_ALUNOSP8 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_ALUNOSM8 <- df_rules_dist_EO_ALUNOSM8 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_ALUNOSM11 <- df_rules_dist_EO_ALUNOSM11 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_ESCOLAME <- df_rules_dist_EO_ESCOLAME |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IDEBFU1a5 <- df_rules_dist_EO_IDEBFU1a5 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IDEBFU6a9 <- df_rules_dist_EO_IDEBFU6a9 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IQEP11 <- df_rules_dist_EO_IQEP11 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_ma_reflo <- df_rules_dist_ma_reflo |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IQEM4 <- df_rules_dist_EO_IQEM4 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IQEM8 <- df_rules_dist_EO_IQEM8 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
# 
# df_rules_dist_EO_IQEM11 <- df_rules_dist_EO_IQEM11 |> 
#   tidyr::pivot_longer(
#     cols      = !c(Ano, ibge7, dplyr::starts_with("EO_")), 
#     names_to  = "regra", 
#     values_to = "obs_suspeita"
#   ) |> 
#   dplyr::filter(obs_suspeita) |> 
#   dplyr::rename_with(tolower) |> 
#   dplyr::arrange(ano, ibge7)
```

```{r df_export_viol_dist}

# lista_df <- list(
#   "EO_ALUNOSP8" = df_rules_dist_EO_ALUNOSP8,
#   "EO_ALUNOSM8"        = df_rules_dist_EO_ALUNOSM8,
#   "EO_ALUNOSM11"       = df_rules_dist_EO_ALUNOSM11,
#   "EO_ESCOLAME"      = df_rules_dist_EO_ESCOLAME,
#   "EO_IDEBFU1a5"       = df_rules_dist_EO_IDEBFU1a5,
#   "EO_IDEBFU6a9"      = df_rules_dist_EO_IDEBFU6a9,
#   "EO_IQEP11"     = df_rules_dist_EO_IQEP11,
#   "EO_IQEM4"  = df_rules_dist_EO_IQEM4,
#   "EO_IQEM8"      = df_rules_dist_EO_IQEM8,
#   "EO_IQEM11"       = df_rules_dist_EO_IQEM11
# )
# 
# for(i in names(lista_df)){
#   nome <- stringr::str_remove(i, "df_rules_dist_")
#   openxlsx::addWorksheet(pt, paste0("distrib - ", nome))
#   openxlsx::writeData(pt, paste0("distrib - ", nome), lista_df[[i]])
# }
```

```{r excel_save_wb}

openxlsx::saveWorkbook(pt, "fjpdados_educacao_violacoes.xlsx", overwrite = T)
```

```{r clean_env, results='hide'}

rm(list = ls())
gc()
```


